[
  {
    "question": "List the data records of reserve deposits in the balance sheets of other deposit-taking companies.",
    "sql": "select depositswithcentralbank from ed_otherdepositorycorpbs;",
    "norm_sql": "select depositswithcentralbank from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "depositswithcentralbank(reserve deposit)",
          "reserveassets(reserve assets)",
          "enddate(deadline)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "demanddeposits(current deposits for enterprises)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "cashinvault(cash on hand)"
        ],
        "column_names_original_en": [
          "depositswithcentralbank",
          "reserveassets",
          "enddate",
          "depositsincludedinm2",
          "demanddeposits",
          "liabtootherdepositcorp",
          "cashinvault"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "datatype(data type code)",
          "currencyname(currency unit code)",
          "totalsavings(all deposit accounts)",
          "corporatesavings(unit deposit/corporate deposit)",
          "financedeposits(financial deposit)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "datatype",
          "currencyname",
          "totalsavings",
          "corporatesavings",
          "financedeposits"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "forex",
          "moneyandgold",
          "otherforeignassets",
          "claimtogovernment",
          "claimtosavingsbanks"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "List the data records of reserve deposits in the balance sheets of other deposit-taking companies. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
    "output_sequence": "select _ from _ | select depositswithcentralbank from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks"
    ]
  },
  {
    "question": "Siri, in the fourth quarter of last year, how much did China have in government claims and central bank claims in the balance sheet of other deposit-taking financial institutions?",
    "sql": "select enddate, claimsongovernment, claimsoncentralbank from ed_otherdepositorycorpbs where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year')) and round(strftime('%m',enddate)/3.0 + 0.495) = 4;",
    "norm_sql": "select enddate , claimsongovernment , claimsoncentralbank from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) and round ( strftime ( '%m' , enddate ) / 3.0 + 0.495 ) = 4",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) and round ( strftime ( _ ) / _ + _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsoncentralbank(claims on central bank)",
          "claimsongovernment(claims on government (net))",
          "enddate(deadline)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "demanddeposits(current deposits for enterprises)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)"
        ],
        "column_names_original_en": [
          "claimsoncentralbank",
          "claimsongovernment",
          "enddate",
          "depositsincludedinm2",
          "liabilitiestocentralbank",
          "demanddeposits",
          "liabtootherdepositcorp"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "totalsavings(all deposit accounts)",
          "financedeposits(financial deposit)",
          "othersavings(other deposits)",
          "savingsdeposits(savings deposits)",
          "agriculturaldeposits(agricultural deposit)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "totalsavings",
          "financedeposits",
          "othersavings",
          "savingsdeposits",
          "agriculturaldeposits"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "forex(foreign exchange (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "forex",
          "otherforeignassets",
          "claimtogovernment",
          "claimtosavingsbanks",
          "claimtosavingsinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Siri, in the fourth quarter of last year, how much did China have in government claims and central bank claims in the balance sheet of other deposit-taking financial institutions? | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) and round ( strftime ( _ ) / _ + _ ) = _ | select enddate , claimsongovernment , claimsoncentralbank from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) and round ( strftime ( '%m' , enddate ) / 3.0 + 0.495 ) = 4",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.claimtosavingsinst"
    ]
  },
  {
    "question": "I want to see the index value of \"Metal Products Industry\" for the \"same period last year.\"",
    "sql": "select indexvalue from ed_producerpiformp where indexname ='Metal Products Industry' and reportperiod ='same period last year' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year'));",
    "norm_sql": "select indexvalue from ed_producerpiformp where indexname = 'Metal Products Industry' and reportperiod = 'same period last year' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)",
          "indextype(index category)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indexname",
          "indexvalue",
          "enddate",
          "indextype",
          "id"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "forex",
          "moneyandgold",
          "otherforeignassets",
          "claimtogovernment",
          "claimtosavingsbanks"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to see the index value of \"Metal Products Industry\" for the \"same period last year.\" | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select indexvalue from ed_producerpiformp where indexname = 'Metal Products Industry' and reportperiod = 'same period last year' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.id",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks"
    ]
  },
  {
    "question": "Please help me check the highest ratio of \"excess deposit reserve ratio\" for \"rural credit cooperatives.\" Thank you.",
    "sql": "select ratioceiling from ed_taxrate where typename ='rural Credit Cooperatives' and itemname ='excess Deposit Reserve Ratio';",
    "norm_sql": "select ratioceiling from ed_taxrate where typename = 'rural Credit Cooperatives' and itemname = 'excess Deposit Reserve Ratio'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "ratioceiling(maximum ratio (%))",
          "itemname(tax rate items)",
          "ratiofloor(minimum ratio (%))",
          "valuefloor(minimum value/starting point (rmb))",
          "valueceiling(maximum value (rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "typename",
          "ratioceiling",
          "itemname",
          "ratiofloor",
          "valuefloor",
          "valueceiling",
          "id"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "effectivedate(effective date)",
          "drrtype(reserve requirement ratio category)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "id",
          "effectivedate",
          "drrtype",
          "ratiofloor",
          "ratioceiling"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me check the highest ratio of \"excess deposit reserve ratio\" for \"rural credit cooperatives.\" Thank you. | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).id(record identifier) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector)",
    "output_sequence": "select _ from _ where _ | select ratioceiling from ed_taxrate where typename = 'rural Credit Cooperatives' and itemname = 'excess Deposit Reserve Ratio'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.itemname",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.valuefloor",
      "ed_taxrate.valueceiling",
      "ed_taxrate.id",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.ratioceiling",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst"
    ]
  },
  {
    "question": "Let me have a look at the gross domestic product in our country. What are the respective gross domestic products of the primary, secondary, and tertiary industries?",
    "sql": "select gdp, primaryindustrygdp, secondindustrygdp, thirdindustrygdp from ed_grossdomesticproduct;",
    "norm_sql": "select gdp , primaryindustrygdp , secondindustrygdp , thirdindustrygdp from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "gdp(gross domestic product (in million of rmb).)",
          "province(province and city)",
          "enddate(deadline)",
          "gdppercapita(per capita gross domestic product (cny/person))"
        ],
        "column_names_original_en": [
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp",
          "gdp",
          "province",
          "enddate",
          "gdppercapita"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "id",
          "reportperiod",
          "indextype",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Let me have a look at the gross domestic product in our country. What are the respective gross domestic products of the primary, secondary, and tertiary industries? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name)",
    "output_sequence": "select _ from _ | select gdp , primaryindustrygdp , secondindustrygdp , thirdindustrygdp from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname"
    ]
  },
  {
    "question": "Can you provide a detailed record of China's bonds and central bank bonds from last year? Thank you.",
    "sql": "select bonds, centralbankbonds from ed_chinamoneyandbanking where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year'));",
    "norm_sql": "select bonds , centralbankbonds from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "centralbankbonds(central bank bonds)",
          "enddate(deadline)",
          "bonds(bonds)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "money1(currency (narrow money m1))",
          "quasimoney(quasi-currency)",
          "fcdeposits(foreign currency deposit.)"
        ],
        "column_names_original_en": [
          "centralbankbonds",
          "enddate",
          "bonds",
          "moneyandquasimoney",
          "money1",
          "quasimoney",
          "fcdeposits"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "forex",
          "moneyandgold",
          "otherforeignassets",
          "claimtogovernment",
          "claimtosavingsbanks"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you provide a detailed record of China's bonds and central bank bonds from last year? Thank you. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) | select bonds , centralbankbonds from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "Find out the highest and lowest ratio of \"Commission Fee\" for \"Treasury Bond Repo\" in different trading markets.",
    "sql": "select maturity, ratiofloor, ratioceiling from ed_taxrate where typename ='Treasury Bond Repo' and itemname ='Commission Fee';",
    "norm_sql": "select maturity , ratiofloor , ratioceiling from ed_taxrate where typename = 'Treasury Bond Repo' and itemname = 'Commission Fee'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "secumarket(securities market)",
          "itemname(tax rate items)",
          "valueceiling(maximum value (rmb))",
          "valuefloor(minimum value/starting point (rmb))"
        ],
        "column_names_original_en": [
          "typename",
          "ratiofloor",
          "ratioceiling",
          "secumarket",
          "itemname",
          "valueceiling",
          "valuefloor"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indexvalue(index value (points))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "indexname",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "indextitle",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Find out the highest and lowest ratio of \"Commission Fee\" for \"Treasury Bond Repo\" in different trading markets. | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value)",
    "output_sequence": "select _ from _ where _ | select maturity , ratiofloor , ratioceiling from ed_taxrate where typename = 'Treasury Bond Repo' and itemname = 'Commission Fee'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.secumarket",
      "ed_taxrate.itemname",
      "ed_taxrate.valueceiling",
      "ed_taxrate.valuefloor",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.indexvalue",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.indexvalue"
    ]
  },
  {
    "question": "What was the local government revenue and expenditure in each province and city of China before 2010?",
    "sql": "select localgovrevenue, localgovexpenditure from ed_financialbalance where strftime('%Y', enddate) = '2010';",
    "norm_sql": "select localgovrevenue , localgovexpenditure from ed_financialbalance where strftime ( '%Y' , enddate ) = '2010'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "province(province and city)",
          "commercialtax(business tax revenue (in million of rmb))",
          "salestax(business tax (in million of rmb))",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "localgovexpenditure",
          "localgovrevenue",
          "province",
          "commercialtax",
          "salestax",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What was the local government revenue and expenditure in each province and city of China before 2010? | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select localgovrevenue , localgovexpenditure from ed_financialbalance where strftime ( '%Y' , enddate ) = '2010'",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.province",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.salestax",
      "ed_financialbalance.reportperiod",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp"
    ]
  },
  {
    "question": "Find the data. Which records in the balance sheet of other depositary financial institutions have total assets exceeding 50 million, but total liabilities less than 50 million? Display the time, total assets amount, and total liabilities amount.",
    "sql": "select enddate, totalassets, totalliabilities from ed_otherdepositorycorpbs where totalliabilities < 5000000 and totalassets > 50000000;",
    "norm_sql": "select enddate , totalassets , totalliabilities from ed_otherdepositorycorpbs where totalliabilities < 5000000 and totalassets > 50000000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "totalassets(total assets)",
          "totalliabilities(total liabilities)",
          "enddate(deadline)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "foreignassets(foreign net assets)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)"
        ],
        "column_names_original_en": [
          "totalassets",
          "totalliabilities",
          "enddate",
          "liabilitiestocentralbank",
          "foreignassets",
          "depositsincludedinm2",
          "liabtootherdepositcorp"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "totalsavings(all deposit accounts)",
          "financedeposits(financial deposit)",
          "othersavings(other deposits)",
          "savingsdeposits(savings deposits)",
          "totalloans(various loans)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "totalsavings",
          "financedeposits",
          "othersavings",
          "savingsdeposits",
          "totalloans"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "totalassets(total assets (in million of rmb).)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "claimtogovernment",
          "claimtosavingsbanks",
          "claimtosavingsinst",
          "claimtononfinancialinst",
          "totalassets"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Find the data. Which records in the balance sheet of other depositary financial institutions have total assets exceeding 50 million, but total liabilities less than 50 million? Display the time, total assets amount, and total liabilities amount. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).)",
    "output_sequence": "select _ from _ where _ | select enddate , totalassets , totalliabilities from ed_otherdepositorycorpbs where totalliabilities < 5000000 and totalassets > 50000000",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.totalassets"
    ]
  },
  {
    "question": "What are the historical records of GDP and per capita GDP in Zhejiang province?",
    "sql": "select gdp, gdppercapita from ed_grossdomesticproduct where province ='Zhejiang';",
    "norm_sql": "select gdp , gdppercapita from ed_grossdomesticproduct where province = 'Zhejiang'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdp(gross domestic product (in million of rmb).)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "province(province and city)",
          "enddate(deadline)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "gdp",
          "gdppercapita",
          "province",
          "enddate",
          "primaryindustrygdp",
          "thirdindustrygdp",
          "secondindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "enddate(deadline)",
          "city(city)",
          "county(county)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "reportarea(statistical category of region)",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "enddate",
          "city",
          "county",
          "id",
          "reportperiod",
          "reportarea",
          "province"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "reportarea(statistical area category)",
          "province(province and city)",
          "commercialtax(business tax revenue (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "reportarea",
          "province",
          "commercialtax",
          "valueaddedtax"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the historical records of GDP and per capita GDP in Zhejiang province? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select gdp , gdppercapita from ed_grossdomesticproduct where province = 'Zhejiang'",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.id",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.province",
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.id",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.province",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.valueaddedtax"
    ]
  },
  {
    "question": "Please find out the different retail amounts of consumer goods for state-owned units, collective units, and joint ventures.",
    "sql": "select stateownedunits, collectiveunits, jointventures from ed_retailvalueofscgoods;",
    "norm_sql": "select stateownedunits , collectiveunits , jointventures from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "jointventures(joint operating unit)",
          "collectiveunits(collective unit)",
          "stateownedunits(state-owned unit)",
          "reportarea(statistical category of region)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "province(province and city)",
          "city(city)"
        ],
        "column_names_original_en": [
          "jointventures",
          "collectiveunits",
          "stateownedunits",
          "reportarea",
          "retailvalueofscgoods",
          "province",
          "city"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please find out the different retail amounts of consumer goods for state-owned units, collective units, and joint ventures. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ | select stateownedunits , collectiveunits , jointventures from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.city",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "Do you know the GDP of the primary, secondary, and tertiary industries in various provinces and cities nationwide over the past 5 years? Thank you.",
    "sql": "select enddate, province, primaryindustrygdp, secondindustrygdp, thirdindustrygdp from ed_grossdomesticproduct where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-5 year'));",
    "norm_sql": "select enddate , province , primaryindustrygdp , secondindustrygdp , thirdindustrygdp from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-5 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "enddate(deadline)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "gdppercapita(per capita gross domestic product (cny/person))"
        ],
        "column_names_original_en": [
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp",
          "enddate",
          "province",
          "gdp",
          "gdppercapita"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "id",
          "reportperiod",
          "indextype",
          "indexname"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Do you know the GDP of the primary, secondary, and tertiary industries in various provinces and cities nationwide over the past 5 years? Thank you. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , province , primaryindustrygdp , secondindustrygdp , thirdindustrygdp from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-5 year' ) )",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "Help me list the data of export and import amounts before the year 2000, where the year-on-year growth of our country's exports is positive while the year-on-year growth of imports is negative. List the import amount and export amount.",
    "sql": "select imvalueofgoods, exvalueofgoods from ed_exportimport where gyoyofexvaluegoods > 0 and gyoyofimvaluegoods < 0 and strftime('%Y', enddate)='2000';",
    "norm_sql": "select imvalueofgoods , exvalueofgoods from ed_exportimport where gyoyofexvaluegoods > 0 and gyoyofimvaluegoods < 0 and strftime ( '%Y' , enddate ) = '2000'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "enddate(deadline)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "gyoyofexvaluegoods",
          "gyoyofimvaluegoods",
          "enddate",
          "imvalueofgoods",
          "exvalueofgoods",
          "eximvalueofgoods",
          "gyoyofeximvaluegoods"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "enddate(deadline)",
          "quantity(quantity)",
          "eximvalue(amount)",
          "reportperiod(data statistical period)",
          "statecode(primary country)",
          "operatetype(import and export categories)",
          "category(product category)"
        ],
        "column_names_original_en": [
          "enddate",
          "quantity",
          "eximvalue",
          "reportperiod",
          "statecode",
          "operatetype",
          "category"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "moneyandquasimoney"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help me list the data of export and import amounts before the year 2000, where the year-on-year growth of our country's exports is positive while the year-on-year growth of imports is negative. List the import amount and export amount. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).quantity(quantity) , ed_productexportimport(product import and export volume).eximvalue(amount) , ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).operatetype(import and export categories) , ed_productexportimport(product import and export volume).category(product category) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = _ | select imvalueofgoods , exvalueofgoods from ed_exportimport where gyoyofexvaluegoods > 0 and gyoyofimvaluegoods < 0 and strftime ( '%Y' , enddate ) = '2000'",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.enddate",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_productexportimport.*",
      "ed_productexportimport.enddate",
      "ed_productexportimport.quantity",
      "ed_productexportimport.eximvalue",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.statecode",
      "ed_productexportimport.operatetype",
      "ed_productexportimport.category",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.moneyandquasimoney"
    ]
  },
  {
    "question": "Hi, could you please check the records of other foreign assets and foreign liabilities again. They are in the balance sheet of the monetary authority?",
    "sql": "select otherforeignassets, abroadliability from ed_moneyauthoritybs ;",
    "norm_sql": "select otherforeignassets , abroadliability from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "otherforeignassets(other foreign assets (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))"
        ],
        "column_names_original_en": [
          "otherforeignassets",
          "abroadliability",
          "claimtogovernment",
          "moneyandgold",
          "claimtosavingsbanks",
          "governmentsavings",
          "nonfinancialorgdeposits"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "foreignliabilities(foreign liabilities)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)"
        ],
        "column_names_original_en": [
          "enddate",
          "foreignliabilities",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hi, could you please check the records of other foreign assets and foreign liabilities again. They are in the balance sheet of the monetary authority? | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector)",
    "output_sequence": "select _ from _ | select otherforeignassets , abroadliability from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.foreignliabilities",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst"
    ]
  },
  {
    "question": "Help me find some data! What is the record of China's domestic gross domestic product for the tertiary industry in recent years?",
    "sql": "select thirdindustrygdp from ed_grossdomesticproduct;",
    "norm_sql": "select thirdindustrygdp from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "province(province and city)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "enddate(deadline)",
          "gdp(gross domestic product (in million of rmb).)",
          "gdppercapita(per capita gross domestic product (cny/person))"
        ],
        "column_names_original_en": [
          "thirdindustrygdp",
          "province",
          "primaryindustrygdp",
          "secondindustrygdp",
          "enddate",
          "gdp",
          "gdppercapita"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "id",
          "reportperiod",
          "indextype",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help me find some data! What is the record of China's domestic gross domestic product for the tertiary industry in recent years? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name)",
    "output_sequence": "select _ from _ | select thirdindustrygdp from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname"
    ]
  },
  {
    "question": "Find the data. Can you help me check the amount of total assets in the monetary authority's balance sheet?",
    "sql": "select totalassets from ed_moneyauthoritybs;",
    "norm_sql": "select totalassets from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "totalassets(total assets (in million of rmb).)",
          "moneyreserves(reserve currency (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "totalliability(total liabilities (in million of rmb))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "totalassets",
          "moneyreserves",
          "moneyandgold",
          "forex",
          "claimtosavingsbanks",
          "totalliability",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "qoqcpi(resident consumer price index (month-on-month))",
          "yoycpi(resident consumer price index (year-on-year))",
          "cumcpi(cumulative average of resident consumer price index)",
          "qoqcpifood(food price month-on-month)",
          "yoycpifood(food year-on-year)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "qoqcpi",
          "yoycpi",
          "cumcpi",
          "qoqcpifood",
          "yoycpifood"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "indextitle",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Find the data. Can you help me check the amount of total assets in the monetary authority's balance sheet? | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).enddate(deadline) , ed_consumerpriceindex(consumer price index).id(record identifier) , ed_consumerpriceindex(consumer price index).qoqcpi(resident consumer price index (month-on-month)) , ed_consumerpriceindex(consumer price index).yoycpi(resident consumer price index (year-on-year)) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).qoqcpifood(food price month-on-month) , ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value)",
    "output_sequence": "select _ from _ | select totalassets from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.enddate",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.enddate",
      "ed_consumerpriceindex.id",
      "ed_consumerpriceindex.qoqcpi",
      "ed_consumerpriceindex.yoycpi",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.qoqcpifood",
      "ed_consumerpriceindex.yoycpifood",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.indexvalue"
    ]
  },
  {
    "question": "Help me summarize the total amount of import and export goods in our country over the years, as well as the specific amounts for imports and exports.",
    "sql": "select eximvalueofgoods, imvalueofgoods, exvalueofgoods from ed_exportimport ;",
    "norm_sql": "select eximvalueofgoods , imvalueofgoods , exvalueofgoods from ed_exportimport",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "enddate(deadline)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "imvalueofgoods",
          "exvalueofgoods",
          "eximvalueofgoods",
          "gyoyofeximvaluegoods",
          "gyoyofimvaluegoods",
          "enddate",
          "gyoyofexvaluegoods"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "enddate(deadline)",
          "quantity(quantity)",
          "eximvalue(amount)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "statecode(primary country)",
          "operatetype(import and export categories)"
        ],
        "column_names_original_en": [
          "enddate",
          "quantity",
          "eximvalue",
          "id",
          "reportperiod",
          "statecode",
          "operatetype"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help me summarize the total amount of import and export goods in our country over the years, as well as the specific amounts for imports and exports. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).quantity(quantity) , ed_productexportimport(product import and export volume).eximvalue(amount) , ed_productexportimport(product import and export volume).id(record identifier) , ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).operatetype(import and export categories)",
    "output_sequence": "select _ from _ | select eximvalueofgoods , imvalueofgoods , exvalueofgoods from ed_exportimport",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.enddate",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_productexportimport.*",
      "ed_productexportimport.enddate",
      "ed_productexportimport.quantity",
      "ed_productexportimport.eximvalue",
      "ed_productexportimport.id",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.statecode",
      "ed_productexportimport.operatetype"
    ]
  },
  {
    "question": "Teacher Wang is in charge of statistics. Please provide him with a set of data on the accumulated amount of loan increases that we record annually according to \"end of period accumulation\".",
    "sql": "select enddate, subjectsum from ed_newincreasingloan where reportperiod ='End of Period Accumulation' ;",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'End of Period Accumulation'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "enddate(deadline)",
          "yoy(year-on-year increase or decrease (%))",
          "subjectname(indicator name)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "subjectsum",
          "enddate",
          "yoy",
          "subjectname",
          "id"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "datatype(data type code)",
          "currencyname(currency unit code)",
          "totalsavings(all deposit accounts)",
          "corporatesavings(unit deposit/corporate deposit)",
          "financedeposits(financial deposit)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "datatype",
          "currencyname",
          "totalsavings",
          "corporatesavings",
          "financedeposits"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Teacher Wang is in charge of statistics. Please provide him with a set of data on the accumulated amount of loan increases that we record annually according to \"end of period accumulation\". | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).id(record identifier) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector)",
    "output_sequence": "select _ from _ where _ | select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'End of Period Accumulation'",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.id",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst"
    ]
  },
  {
    "question": "What is the total amount of savings and loans in financial institutions?",
    "sql": "select totalsavings, totalloans from ed_chinafibalancesheetrmb;",
    "norm_sql": "select totalsavings , totalloans from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "savingsdeposits(savings deposits)",
          "totalloans(various loans)",
          "totalsavings(all deposit accounts)",
          "loantogov(financial borrowing)",
          "financedeposits(financial deposit)",
          "corporatesavings(unit deposit/corporate deposit)",
          "domesticloans((one) domestic loan)"
        ],
        "column_names_original_en": [
          "savingsdeposits",
          "totalloans",
          "totalsavings",
          "loantogov",
          "financedeposits",
          "corporatesavings",
          "domesticloans"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(statistical period)",
          "subjectname(indicator name)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "subjectname",
          "subjectsum",
          "yoy"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the total amount of savings and loans in financial institutions? | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ | select totalsavings , totalloans from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "The total amount of \"year-end cumulative\" retail sales of consumer goods in Beijing from 2000 to the present is how much?",
    "sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province ='Beijing' and reportperiod ='year-end cumulative' and strftime('%Y', enddate)>='2000';",
    "norm_sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Beijing' and reportperiod = 'year-end cumulative' and strftime ( '%Y' , enddate ) >= '2000'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) >= _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "province(province and city)",
          "reportperiod(data statistical period)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "enddate(deadline)",
          "reportarea(statistical category of region)",
          "city(city)",
          "county(county)"
        ],
        "column_names_original_en": [
          "province",
          "reportperiod",
          "retailvalueofscgoods",
          "enddate",
          "reportarea",
          "city",
          "county"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "qoqcpi(resident consumer price index (month-on-month))",
          "yoycpi(resident consumer price index (year-on-year))",
          "cumcpi(cumulative average of resident consumer price index)",
          "qoqcpifood(food price month-on-month)",
          "yoycpifood(food year-on-year)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "qoqcpi",
          "yoycpi",
          "cumcpi",
          "qoqcpifood",
          "yoycpifood"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "reportarea(statistical area category)",
          "province(province and city)",
          "commercialtax(business tax revenue (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "reportarea",
          "province",
          "commercialtax",
          "valueaddedtax"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "The total amount of \"year-end cumulative\" retail sales of consumer goods in Beijing from 2000 to the present is how much? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).enddate(deadline) , ed_consumerpriceindex(consumer price index).id(record identifier) , ed_consumerpriceindex(consumer price index).qoqcpi(resident consumer price index (month-on-month)) , ed_consumerpriceindex(consumer price index).yoycpi(resident consumer price index (year-on-year)) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).qoqcpifood(food price month-on-month) , ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) >= _ | select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Beijing' and reportperiod = 'year-end cumulative' and strftime ( '%Y' , enddate ) >= '2000'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.county",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.enddate",
      "ed_consumerpriceindex.id",
      "ed_consumerpriceindex.qoqcpi",
      "ed_consumerpriceindex.yoycpi",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.qoqcpifood",
      "ed_consumerpriceindex.yoycpifood",
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.id",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.province",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.valueaddedtax"
    ]
  },
  {
    "question": "Do you know the annual \"year-end accumulated\" gross industrial output value of state-owned and collective enterprises in \"all industrial enterprises\" in Shanghai? Thank you.",
    "sql": "select enddate, stateownedcontrolledcomap, collectivecomap from ed_industryproduction where province='Shanghai' and statstandard='all industrial enterprises' and reportperiod='year-end accumulated';",
    "norm_sql": "select enddate , stateownedcontrolledcomap , collectivecomap from ed_industryproduction where province = 'Shanghai' and statstandard = 'all industrial enterprises' and reportperiod = 'year-end accumulated'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "enddate(deadline)",
          "province(province)",
          "collectivecomap(collective enterprise (light industry))",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "reportarea(statistical area category)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "statstandard",
          "enddate",
          "province",
          "collectivecomap",
          "industrialoutputvalueap",
          "reportarea"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "id",
          "reportperiod",
          "indextype",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Do you know the annual \"year-end accumulated\" gross industrial output value of state-owned and collective enterprises in \"all industrial enterprises\" in Shanghai? Thank you. | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).reportarea(statistical area category) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name)",
    "output_sequence": "select _ from _ where _ | select enddate , stateownedcontrolledcomap , collectivecomap from ed_industryproduction where province = 'Shanghai' and statstandard = 'all industrial enterprises' and reportperiod = 'year-end accumulated'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.collectivecomap",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.reportarea",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname"
    ]
  },
  {
    "question": "Can you display the retail amount of social consumer goods for our state-owned units in recent years?",
    "sql": "select stateownedunits from ed_retailvalueofscgoods;",
    "norm_sql": "select stateownedunits from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "stateownedunits(state-owned unit)",
          "reportarea(statistical category of region)",
          "enddate(deadline)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "city(city)",
          "county(county)",
          "collectiveunits(collective unit)"
        ],
        "column_names_original_en": [
          "stateownedunits",
          "reportarea",
          "enddate",
          "retailvalueofscgoods",
          "city",
          "county",
          "collectiveunits"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "forex",
          "moneyandgold",
          "otherforeignassets",
          "claimtogovernment",
          "claimtosavingsbanks"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you display the retail amount of social consumer goods for our state-owned units in recent years? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
    "output_sequence": "select _ from _ | select stateownedunits from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks"
    ]
  },
  {
    "question": "Please provide the data records of other assets and other liabilities in the balance sheet of other depositary corporation.",
    "sql": "select otherassets, otherliabilities from ed_otherdepositorycorpbs;",
    "norm_sql": "select otherassets , otherliabilities from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "otherassets(other assets)",
          "otherliabilities(other liabilities)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "enddate(deadline)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "reserveassets(reserve assets)"
        ],
        "column_names_original_en": [
          "otherassets",
          "otherliabilities",
          "depositsincludedinm2",
          "enddate",
          "liabilitiestocentralbank",
          "liabtootherdepositcorp",
          "reserveassets"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "forex",
          "moneyandgold",
          "otherforeignassets",
          "claimtogovernment",
          "claimtosavingsbanks"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "indextitle",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please provide the data records of other assets and other liabilities in the balance sheet of other depositary corporation. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value)",
    "output_sequence": "select _ from _ | select otherassets , otherliabilities from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.otherassets",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.indexvalue"
    ]
  },
  {
    "question": "Do you know the amount of newly added RMB loans that we recorded by \"month\" two years ago? Please list them.",
    "sql": "select enddate, subjectsum from ed_newincreasingloan where reportperiod='month' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'month' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "enddate(deadline)",
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "subjectsum",
          "enddate",
          "yoy",
          "id",
          "subjectname"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "datatype(data type code)",
          "currencyname(currency unit code)",
          "totalsavings(all deposit accounts)",
          "corporatesavings(unit deposit/corporate deposit)",
          "financedeposits(financial deposit)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "datatype",
          "currencyname",
          "totalsavings",
          "corporatesavings",
          "financedeposits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Do you know the amount of newly added RMB loans that we recorded by \"month\" two years ago? Please list them. | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'month' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectname",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.financedeposits"
    ]
  },
  {
    "question": "Show me the data, do we have records of currency and banking before the year 2000? If so, show me the data of net foreign assets and domestic credit.",
    "sql": "select netabroadassets, domesticloans from ed_chinamoneyandbanking where strftime('%Y', enddate)<'2000';",
    "norm_sql": "select netabroadassets , domesticloans from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) < '2000'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) < _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "enddate(deadline)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "money1(currency (narrow money m1))",
          "claimstogov(claims on the government (net))",
          "quasimoney(quasi-currency)"
        ],
        "column_names_original_en": [
          "netabroadassets",
          "domesticloans",
          "enddate",
          "moneyandquasimoney",
          "money1",
          "claimstogov",
          "quasimoney"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "totalloans(various loans)",
          "id(record identifier)",
          "datatype(data type code)",
          "currencyname(currency unit code)",
          "totalsavings(all deposit accounts)",
          "corporatesavings(unit deposit/corporate deposit)"
        ],
        "column_names_original_en": [
          "enddate",
          "totalloans",
          "id",
          "datatype",
          "currencyname",
          "totalsavings",
          "corporatesavings"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "forex",
          "moneyandgold",
          "otherforeignassets",
          "claimtogovernment",
          "claimtosavingsbanks"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Show me the data, do we have records of currency and banking before the year 2000? If so, show me the data of net foreign assets and domestic credit. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) < _ | select netabroadassets , domesticloans from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) < '2000'",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks"
    ]
  },
  {
    "question": "What are the names and values of the indices in the \"Industrial Structure Classification Index\" from 2010 to present, displaying data for the \"Same month of the previous year\"?",
    "sql": "select indexname, indexvalue from ed_producerpiformp where indextype ='Industrial Structure Classification Index' and reportperiod ='Same Month of Previous Year' and strftime('%Y', enddate)>='2010';",
    "norm_sql": "select indexname , indexvalue from ed_producerpiformp where indextype = 'Industrial Structure Classification Index' and reportperiod = 'Same Month of Previous Year' and strftime ( '%Y' , enddate ) >= '2010'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) >= _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "enddate(deadline)",
          "indexvalue(index)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "enddate",
          "indexvalue",
          "id"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the names and values of the indices in the \"Industrial Structure Classification Index\" from 2010 to present, displaying data for the \"Same month of the previous year\"? | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) >= _ | select indexname , indexvalue from ed_producerpiformp where indextype = 'Industrial Structure Classification Index' and reportperiod = 'Same Month of Previous Year' and strftime ( '%Y' , enddate ) >= '2010'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "Please list the index value of \"Production Materials-Processing\" in our \"Same Period Last Year\" \"Industrial Structure Classification Index\".",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod ='Same Period Last Year' and indextype ='Industrial Structure Classification Index' and indexname ='Production Materials-Processing';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'Same Period Last Year' and indextype = 'Industrial Structure Classification Index' and indexname = 'Production Materials-Processing'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "id(record identifier)",
          "effectivedate(effective date)",
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "secumarket(securities market)",
          "maturity(repurchase period)",
          "basiscode(billing baseline)"
        ],
        "column_names_original_en": [
          "id",
          "effectivedate",
          "itemname",
          "typename",
          "secumarket",
          "maturity",
          "basiscode"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the index value of \"Production Materials-Processing\" in our \"Same Period Last Year\" \"Industrial Structure Classification Index\". | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).basiscode(billing baseline)",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'Same Period Last Year' and indextype = 'Industrial Structure Classification Index' and indexname = 'Production Materials-Processing'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_taxrate.*",
      "ed_taxrate.id",
      "ed_taxrate.effectivedate",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.maturity",
      "ed_taxrate.basiscode"
    ]
  },
  {
    "question": "Is there a record of the index value for the \"Pharmaceutical Manufacturing Industry\" in the first quarter of last year? Please display the value for the \"same month of the previous year\".",
    "sql": "select indexvalue from ed_producerpiformp where indexname = 'Pharmaceutical Manufacturing Industry' and reportperiod = 'same month of the previous year' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year')) and round(strftime('%m', enddate)/3.0 + 0.495) = 1;",
    "norm_sql": "select indexvalue from ed_producerpiformp where indexname = 'Pharmaceutical Manufacturing Industry' and reportperiod = 'same month of the previous year' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) and round ( strftime ( '%m' , enddate ) / 3.0 + 0.495 ) = 1",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) and round ( strftime ( _ ) / _ + _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)",
          "indextype(index category)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indexname",
          "indexvalue",
          "enddate",
          "indextype",
          "id"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Is there a record of the index value for the \"Pharmaceutical Manufacturing Industry\" in the first quarter of last year? Please display the value for the \"same month of the previous year\". | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) and round ( strftime ( _ ) / _ + _ ) = _ | select indexvalue from ed_producerpiformp where indexname = 'Pharmaceutical Manufacturing Industry' and reportperiod = 'same month of the previous year' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) and round ( strftime ( '%m' , enddate ) / 3.0 + 0.495 ) = 1",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.id",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "Please list the data records of total liabilities in the balance sheet of other deposit-taking companies.",
    "sql": "select totalliabilities from ed_otherdepositorycorpbs;",
    "norm_sql": "select totalliabilities from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "totalliabilities(total liabilities)",
          "enddate(deadline)",
          "claimsongovernment(claims on government (net))",
          "totalassets(total assets)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "reserveassets(reserve assets)",
          "depositsincludedinm2(inclusion of broad money deposits.)"
        ],
        "column_names_original_en": [
          "totalliabilities",
          "enddate",
          "claimsongovernment",
          "totalassets",
          "liabtootherdepositcorp",
          "reserveassets",
          "depositsincludedinm2"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "forex",
          "moneyandgold",
          "otherforeignassets",
          "claimtogovernment",
          "claimtosavingsbanks"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "indextitle",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the data records of total liabilities in the balance sheet of other deposit-taking companies. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value)",
    "output_sequence": "select _ from _ | select totalliabilities from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.indexvalue"
    ]
  },
  {
    "question": "How much do we have in claims on other depositing corporate and claims on other resident sectors in the balance sheet of other depository corporations when the total assets amount exceeds 50 million?",
    "sql": "select claimsonotherdepositcorp, claimsonotherresidentsec from ed_otherdepositorycorpbs where totalassets > 50000000;",
    "norm_sql": "select claimsonotherdepositcorp , claimsonotherresidentsec from ed_otherdepositorycorpbs where totalassets > 50000000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsonotherresidentsec(claims on other resident sectors)",
          "totalassets(total assets)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "otherassets(other assets)",
          "enddate(deadline)",
          "claimsongovernment(claims on government (net))",
          "claimsonotherfinstitute(claims on other financial institutions)"
        ],
        "column_names_original_en": [
          "claimsonotherresidentsec",
          "totalassets",
          "claimsonotherdepositcorp",
          "otherassets",
          "enddate",
          "claimsongovernment",
          "claimsonotherfinstitute"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "id(record identifier)",
          "effectivedate(effective date)",
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "secumarket(securities market)",
          "maturity(repurchase period)",
          "basiscode(billing baseline)"
        ],
        "column_names_original_en": [
          "id",
          "effectivedate",
          "itemname",
          "typename",
          "secumarket",
          "maturity",
          "basiscode"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How much do we have in claims on other depositing corporate and claims on other resident sectors in the balance sheet of other depository corporations when the total assets amount exceeds 50 million? | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).basiscode(billing baseline) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector)",
    "output_sequence": "select _ from _ where _ | select claimsonotherdepositcorp , claimsonotherresidentsec from ed_otherdepositorycorpbs where totalassets > 50000000",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.otherassets",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_taxrate.*",
      "ed_taxrate.id",
      "ed_taxrate.effectivedate",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.maturity",
      "ed_taxrate.basiscode",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst"
    ]
  },
  {
    "question": "Find the data. Please provide the local government revenue and local government expenditure in Shanghai over the years.",
    "sql": "select localgovrevenue, localgovexpenditure from ed_financialbalance where province ='Shanghai';",
    "norm_sql": "select localgovrevenue , localgovexpenditure from ed_financialbalance where province = 'Shanghai'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "province(province and city)",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "commercialtax(business tax revenue (in million of rmb))",
          "salestax(business tax (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))",
          "centralgovrevenue(central fiscal revenue (in million of yuan))"
        ],
        "column_names_original_en": [
          "province",
          "localgovrevenue",
          "localgovexpenditure",
          "commercialtax",
          "salestax",
          "valueaddedtax",
          "centralgovrevenue"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indexvalue(index value (points))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "indexname",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Find the data. Please provide the local government revenue and local government expenditure in Shanghai over the years. | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).centralgovrevenue(central fiscal revenue (in million of yuan)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points))",
    "output_sequence": "select _ from _ where _ | select localgovrevenue , localgovexpenditure from ed_financialbalance where province = 'Shanghai'",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.province",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.salestax",
      "ed_financialbalance.valueaddedtax",
      "ed_financialbalance.centralgovrevenue",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.indexvalue"
    ]
  },
  {
    "question": "Hello, please check the \"end-of-period accumulated\" retail sales of social consumer goods for collective units and self-employed individuals in each \"province/city\" last year.",
    "sql": "select collectiveunits, selfemployed from ed_retailvalueofscgoods where reportarea ='province/city' and reportperiod ='end-of-period accumulated' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year'));",
    "norm_sql": "select collectiveunits , selfemployed from ed_retailvalueofscgoods where reportarea = 'province/city' and reportperiod = 'end-of-period accumulated' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "collectiveunits(collective unit)",
          "selfemployed(individual unit)",
          "enddate(deadline)",
          "reportarea(statistical category of region)",
          "province(province and city)",
          "jointventures(joint operating unit)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "collectiveunits",
          "selfemployed",
          "enddate",
          "reportarea",
          "province",
          "jointventures"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "reportarea(statistical area category)",
          "province(province and city)",
          "commercialtax(business tax revenue (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "reportarea",
          "province",
          "commercialtax",
          "valueaddedtax"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hello, please check the \"end-of-period accumulated\" retail sales of social consumer goods for collective units and self-employed individuals in each \"province/city\" last year. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select collectiveunits , selfemployed from ed_retailvalueofscgoods where reportarea = 'province/city' and reportperiod = 'end-of-period accumulated' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.jointventures",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.id",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.province",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.valueaddedtax"
    ]
  },
  {
    "question": "Hi Xia Li, show me the total retail sales of consumer goods in Beijing over the years.",
    "sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province ='Beijing';",
    "norm_sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Beijing'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "province(province and city)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "city(city)",
          "enddate(deadline)",
          "county(county)",
          "stateownedunits(state-owned unit)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "province",
          "retailvalueofscgoods",
          "city",
          "enddate",
          "county",
          "stateownedunits",
          "id"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "reportarea(statistical area category)",
          "province(province and city)",
          "commercialtax(business tax revenue (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "reportarea",
          "province",
          "commercialtax",
          "valueaddedtax"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hi Xia Li, show me the total retail sales of consumer goods in Beijing over the years. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Beijing'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.id",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.id",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.province",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.valueaddedtax"
    ]
  },
  {
    "question": "Hello, what is the \"end-of-period cumulative\" total retail sales of consumer goods in Beijing over the years?",
    "sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province='Beijing' and reportperiod='end-of-period cumulative';",
    "norm_sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Beijing' and reportperiod = 'end-of-period cumulative'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "province(province and city)",
          "reportperiod(data statistical period)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "reportarea(statistical category of region)",
          "city(city)",
          "county(county)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "province",
          "reportperiod",
          "retailvalueofscgoods",
          "reportarea",
          "city",
          "county",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "qoqcpi(resident consumer price index (month-on-month))",
          "yoycpi(resident consumer price index (year-on-year))",
          "cumcpi(cumulative average of resident consumer price index)",
          "qoqcpifood(food price month-on-month)",
          "yoycpifood(food year-on-year)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "qoqcpi",
          "yoycpi",
          "cumcpi",
          "qoqcpifood",
          "yoycpifood"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "id",
          "reportperiod",
          "indextype",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hello, what is the \"end-of-period cumulative\" total retail sales of consumer goods in Beijing over the years? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).enddate(deadline) , ed_consumerpriceindex(consumer price index).id(record identifier) , ed_consumerpriceindex(consumer price index).qoqcpi(resident consumer price index (month-on-month)) , ed_consumerpriceindex(consumer price index).yoycpi(resident consumer price index (year-on-year)) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).qoqcpifood(food price month-on-month) , ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name)",
    "output_sequence": "select _ from _ where _ | select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Beijing' and reportperiod = 'end-of-period cumulative'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.enddate",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.enddate",
      "ed_consumerpriceindex.id",
      "ed_consumerpriceindex.qoqcpi",
      "ed_consumerpriceindex.yoycpi",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.qoqcpifood",
      "ed_consumerpriceindex.yoycpifood",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname"
    ]
  },
  {
    "question": "Please provide a count of the records in which the Chinese renminbi (RMB) new loan amount exceeds 150,000, displaying the time and new amount fields, according to the records recorded by \"Month\".",
    "sql": "select enddate, subjectsum from ed_newincreasingloan where reportperiod = 'Month' and subjectsum > 150000;",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'Month' and subjectsum > 150000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "subjectsum(amount (in million of rmb))",
          "reportperiod(statistical period)",
          "enddate(deadline)",
          "subjectname(indicator name)",
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "subjectsum",
          "reportperiod",
          "enddate",
          "subjectname",
          "yoy",
          "id"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "domesticloans(domestic credit)",
          "netabroadassets(foreign net assets)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "domesticloans",
          "netabroadassets",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistics interval)",
          "reportarea(statistical region category)",
          "province(province and city)",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "rmbloans(rmb loans (in 100 million rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "reportarea",
          "province",
          "socialfinancing",
          "rmbloans"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please provide a count of the records in which the Chinese renminbi (RMB) new loan amount exceeds 150,000, displaying the time and new amount fields, according to the records recorded by \"Month\". | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb))",
    "output_sequence": "select _ from _ where _ | select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'Month' and subjectsum > 150000",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_socialfinancing.*",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.id",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.province",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.rmbloans"
    ]
  },
  {
    "question": "Calculate the total amount of agricultural deposits and savings deposits in China's credit debit statement.",
    "sql": "select agriculturaldeposits, savingsdeposits from ed_chinafibalancesheetrmb;",
    "norm_sql": "select agriculturaldeposits , savingsdeposits from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "savingsdeposits(savings deposits)",
          "agriculturaldeposits(agricultural deposit)",
          "totalsavings(all deposit accounts)",
          "corporatesavings(unit deposit/corporate deposit)",
          "currencyname(currency unit code)",
          "totalloans(various loans)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "savingsdeposits",
          "agriculturaldeposits",
          "totalsavings",
          "corporatesavings",
          "currencyname",
          "totalloans",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Calculate the total amount of agricultural deposits and savings deposits in China's credit debit statement. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector)",
    "output_sequence": "select _ from _ | select agriculturaldeposits , savingsdeposits from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst"
    ]
  },
  {
    "question": "Show the maximum value of the total retail sales of consumer goods in Shanghai at the end of the period.",
    "sql": "select max(retailvalueofscgoods) from ed_retailvalueofscgoods where province='Shanghai' and reportperiod ='End of Period';",
    "norm_sql": "select max ( retailvalueofscgoods ) from ed_retailvalueofscgoods where province = 'Shanghai' and reportperiod = 'End of Period'",
    "sql_skeleton": "select max ( _ ) from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "province(province and city)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "reportarea(statistical category of region)",
          "city(city)",
          "county(county)"
        ],
        "column_names_original_en": [
          "province",
          "retailvalueofscgoods",
          "reportperiod",
          "enddate",
          "reportarea",
          "city",
          "county"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "reportarea(statistical area category)",
          "province(province and city)",
          "commercialtax(business tax revenue (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "reportarea",
          "province",
          "commercialtax",
          "valueaddedtax"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Show the maximum value of the total retail sales of consumer goods in Shanghai at the end of the period. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb))",
    "output_sequence": "select max ( _ ) from _ where _ | select max ( retailvalueofscgoods ) from ed_retailvalueofscgoods where province = 'Shanghai' and reportperiod = 'End of Period'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.county",
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.id",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.province",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.valueaddedtax",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded"
    ]
  },
  {
    "question": "Please show the amount record of reserve assets in the balance sheet of other depository corporations.",
    "sql": "select reserveassets from ed_otherdepositorycorpbs;",
    "norm_sql": "select reserveassets from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "enddate(deadline)",
          "claimsongovernment(claims on government (net))",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "liabilitiestocentralbank(liabilities to the central bank.)"
        ],
        "column_names_original_en": [
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "enddate",
          "claimsongovernment",
          "depositsincludedinm2",
          "liabilitiestocentralbank"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "datatype(data type code)",
          "currencyname(currency unit code)",
          "totalsavings(all deposit accounts)",
          "corporatesavings(unit deposit/corporate deposit)",
          "financedeposits(financial deposit)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "datatype",
          "currencyname",
          "totalsavings",
          "corporatesavings",
          "financedeposits"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "forex",
          "moneyandgold",
          "otherforeignassets",
          "claimtogovernment",
          "claimtosavingsbanks"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please show the amount record of reserve assets in the balance sheet of other depository corporations. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
    "output_sequence": "select _ from _ | select reserveassets from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks"
    ]
  },
  {
    "question": "Help me find the data! Mr. Li wants to know the gross domestic product (GDP) amount of the primary industry, secondary industry, and tertiary industry in China every year.",
    "sql": "select primaryindustrygdp, secondindustrygdp, thirdindustrygdp from ed_grossdomesticproduct;",
    "norm_sql": "select primaryindustrygdp , secondindustrygdp , thirdindustrygdp from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "province(province and city)",
          "enddate(deadline)",
          "gdp(gross domestic product (in million of rmb).)",
          "gdppercapita(per capita gross domestic product (cny/person))"
        ],
        "column_names_original_en": [
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp",
          "province",
          "enddate",
          "gdp",
          "gdppercapita"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indexvalue(index value (points))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "indexname",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help me find the data! Mr. Li wants to know the gross domestic product (GDP) amount of the primary industry, secondary industry, and tertiary industry in China every year. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points))",
    "output_sequence": "select _ from _ | select primaryindustrygdp , secondindustrygdp , thirdindustrygdp from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.indexvalue"
    ]
  },
  {
    "question": "What was the expenditure on urban maintenance and construction in Beijing two years ago?",
    "sql": "select expenditurecitymc from ed_financialbalance where province = 'Beijing' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select expenditurecitymc from ed_financialbalance where province = 'Beijing' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "province(province and city)",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "enddate(deadline)",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "enterpriseincome(enterprise income (in million of rmb))",
          "commercialtax(business tax revenue (in million of rmb))",
          "nationaldefense(defense expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "expenditurecitymc",
          "enddate",
          "localgovexpenditure",
          "enterpriseincome",
          "commercialtax",
          "nationaldefense"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What was the expenditure on urban maintenance and construction in Beijing two years ago? | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb)) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select expenditurecitymc from ed_financialbalance where province = 'Beijing' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.province",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.enddate",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.enterpriseincome",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.nationaldefense",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst"
    ]
  },
  {
    "question": "I would like to know the duration of \"Corporate Bond Pledged Repo\" and the minimum and maximum rates for \"Transaction Fee\" Thank you.",
    "sql": "select basiscode, ratiofloor, ratioceiling from ed_taxrate where typename = 'Corporate Bond Pledged Repo' and itemname = 'Transaction Fee';",
    "norm_sql": "select basiscode , ratiofloor , ratioceiling from ed_taxrate where typename = 'Corporate Bond Pledged Repo' and itemname = 'Transaction Fee'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "itemname(tax rate items)",
          "maturity(repurchase period)",
          "basiscode(billing baseline)",
          "valuefloor(minimum value/starting point (rmb))"
        ],
        "column_names_original_en": [
          "typename",
          "ratiofloor",
          "ratioceiling",
          "itemname",
          "maturity",
          "basiscode",
          "valuefloor"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "indextitle",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I would like to know the duration of \"Corporate Bond Pledged Repo\" and the minimum and maximum rates for \"Transaction Fee\" Thank you. | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value)",
    "output_sequence": "select _ from _ where _ | select basiscode , ratiofloor , ratioceiling from ed_taxrate where typename = 'Corporate Bond Pledged Repo' and itemname = 'Transaction Fee'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.itemname",
      "ed_taxrate.maturity",
      "ed_taxrate.basiscode",
      "ed_taxrate.valuefloor",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.indexvalue"
    ]
  },
  {
    "question": "Help Wang Gong check, what is the maximum index value of \"Textile Industry\" in the \"Same Period Last Year\" last year?",
    "sql": "select max(indexvalue) from ed_producerpiformp where indexname ='Textile Industry' and reportperiod ='Same Period Last Year' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year'));",
    "norm_sql": "select max ( indexvalue ) from ed_producerpiformp where indexname = 'Textile Industry' and reportperiod = 'Same Period Last Year' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select max ( _ ) from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)",
          "indextype(index category)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indexname",
          "indexvalue",
          "enddate",
          "indextype",
          "id"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "id(record identifier)",
          "effectivedate(effective date)",
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "secumarket(securities market)",
          "maturity(repurchase period)",
          "basiscode(billing baseline)"
        ],
        "column_names_original_en": [
          "id",
          "effectivedate",
          "itemname",
          "typename",
          "secumarket",
          "maturity",
          "basiscode"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help Wang Gong check, what is the maximum index value of \"Textile Industry\" in the \"Same Period Last Year\" last year? | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).basiscode(billing baseline)",
    "output_sequence": "select max ( _ ) from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select max ( indexvalue ) from ed_producerpiformp where indexname = 'Textile Industry' and reportperiod = 'Same Period Last Year' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.id",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_taxrate.*",
      "ed_taxrate.id",
      "ed_taxrate.effectivedate",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.maturity",
      "ed_taxrate.basiscode"
    ]
  },
  {
    "question": "Find the data quickly. How much are the fiscal deposits in the records of financial institution credit and expenditure over the years?",
    "sql": "select financedeposits from ed_chinafibalancesheetrmb;",
    "norm_sql": "select financedeposits from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "financedeposits(financial deposit)",
          "loantogov(financial borrowing)",
          "totalloans(various loans)",
          "totalsavings(all deposit accounts)",
          "enddate(deadline)",
          "corporatesavings(unit deposit/corporate deposit)",
          "datatype(data type code)"
        ],
        "column_names_original_en": [
          "financedeposits",
          "loantogov",
          "totalloans",
          "totalsavings",
          "enddate",
          "corporatesavings",
          "datatype"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "forex",
          "moneyandgold",
          "otherforeignassets",
          "claimtogovernment",
          "claimtosavingsbanks"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Find the data quickly. How much are the fiscal deposits in the records of financial institution credit and expenditure over the years? | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector)",
    "output_sequence": "select _ from _ | select financedeposits from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst"
    ]
  },
  {
    "question": "Please help me find detailed information about China's foreign currency deposits and foreign net assets for the previous year. Thank you.",
    "sql": "select fcdeposits, netabroadassets from ed_chinamoneyandbanking where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select fcdeposits , netabroadassets from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "netabroadassets(foreign net assets)",
          "fcdeposits(foreign currency deposit.)",
          "enddate(deadline)",
          "money1(currency (narrow money m1))",
          "bonds(bonds)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "domesticloans(domestic credit)"
        ],
        "column_names_original_en": [
          "netabroadassets",
          "fcdeposits",
          "enddate",
          "money1",
          "bonds",
          "moneyandquasimoney",
          "domesticloans"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "forex",
          "moneyandgold",
          "otherforeignassets",
          "claimtogovernment",
          "claimtosavingsbanks"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me find detailed information about China's foreign currency deposits and foreign net assets for the previous year. Thank you. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) | select fcdeposits , netabroadassets from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks"
    ]
  },
  {
    "question": "Show the data and find the maximum and minimum values of total assets and total liabilities in the balance sheet of other depositary credit institutions.",
    "sql": "select max(totalassets), min(totalassets), max(totalliabilities), min(totalliabilities) from ed_otherdepositorycorpbs;",
    "norm_sql": "select max ( totalassets ) , min ( totalassets ) , max ( totalliabilities ) , min ( totalliabilities ) from ed_otherdepositorycorpbs",
    "sql_skeleton": "select max ( _ ) , min ( _ ) , max ( _ ) , min ( _ ) from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "totalassets(total assets)",
          "totalliabilities(total liabilities)",
          "reserveassets(reserve assets)",
          "claimsongovernment(claims on government (net))",
          "otherassets(other assets)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "demanddeposits(current deposits for enterprises)"
        ],
        "column_names_original_en": [
          "totalassets",
          "totalliabilities",
          "reserveassets",
          "claimsongovernment",
          "otherassets",
          "depositsincludedinm2",
          "demanddeposits"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "totalsavings(all deposit accounts)",
          "totalloans(various loans)",
          "othersavings(other deposits)",
          "assetsatifo(asset in international financial institutions)",
          "enddate(deadline)",
          "financedeposits(financial deposit)",
          "corporatesavings(unit deposit/corporate deposit)"
        ],
        "column_names_original_en": [
          "totalsavings",
          "totalloans",
          "othersavings",
          "assetsatifo",
          "enddate",
          "financedeposits",
          "corporatesavings"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "totalassets(total assets (in million of rmb).)",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "totalliability(total liabilities (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "totalassets",
          "claimtosavingsbanks",
          "totalliability",
          "forex",
          "claimtogovernment",
          "claimtosavingsinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Show the data and find the maximum and minimum values of total assets and total liabilities in the balance sheet of other depositary credit institutions. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
    "output_sequence": "select max ( _ ) , min ( _ ) , max ( _ ) , min ( _ ) from _ | select max ( totalassets ) , min ( totalassets ) , max ( totalliabilities ) , min ( totalliabilities ) from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.otherassets",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsinst"
    ]
  },
  {
    "question": "What are the different repurchase maturities, the highest ratio floor, and the lowest ratio ceiling for \"Government Bond Buyback\"?",
    "sql": "select maturity, ratiofloor, ratioceiling from ed_taxrate where typename ='Government Bond Buyback' and itemname ='Handling Fee' ;",
    "norm_sql": "select maturity , ratiofloor , ratioceiling from ed_taxrate where typename = 'Government Bond Buyback' and itemname = 'Handling Fee'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "itemname(tax rate items)",
          "maturity(repurchase period)",
          "valuefloor(minimum value/starting point (rmb))",
          "basiscode(billing baseline)"
        ],
        "column_names_original_en": [
          "typename",
          "ratiofloor",
          "ratioceiling",
          "itemname",
          "maturity",
          "valuefloor",
          "basiscode"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "id",
          "reportperiod",
          "indextype",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the different repurchase maturities, the highest ratio floor, and the lowest ratio ceiling for \"Government Bond Buyback\"? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).basiscode(billing baseline) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name)",
    "output_sequence": "select _ from _ where _ | select maturity , ratiofloor , ratioceiling from ed_taxrate where typename = 'Government Bond Buyback' and itemname = 'Handling Fee'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.itemname",
      "ed_taxrate.maturity",
      "ed_taxrate.valuefloor",
      "ed_taxrate.basiscode",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname"
    ]
  },
  {
    "question": "Do you know the monthly industrial production value of heavy industry in the \"National\" \"State-owned and Large-scale Industrial Enterprises\" in our database over the years?",
    "sql": "select enddate, hivalueap from ed_industryproduction where reportarea ='National' and statstandard ='State-owned and Large-scale Industrial Enterprises' and reportperiod ='Monthly';",
    "norm_sql": "select enddate , hivalueap from ed_industryproduction where reportarea = 'National' and statstandard = 'State-owned and Large-scale Industrial Enterprises' and reportperiod = 'Monthly'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "hivalueap(heavy industry (in million of rmb))",
          "enddate(deadline)",
          "province(province)",
          "livalueap(light industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "reportarea",
          "reportperiod",
          "statstandard",
          "hivalueap",
          "enddate",
          "province",
          "livalueap"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index)",
          "indextype(index category)",
          "indexname(index name)",
          "id(record identifier)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "indextype",
          "indexname",
          "id",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Do you know the monthly industrial production value of heavy industry in the \"National\" \"State-owned and Large-scale Industrial Enterprises\" in our database over the years? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select enddate , hivalueap from ed_industryproduction where reportarea = 'National' and statstandard = 'State-owned and Large-scale Industrial Enterprises' and reportperiod = 'Monthly'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.livalueap",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp"
    ]
  },
  {
    "question": "Did we have records of the total sales of consumer goods before 2010? If so, please display the annual total amount in Shanghai city.",
    "sql": "select enddate, retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Shanghai' and reportperiod = 'annual' and strftime('%Y', enddate)<'2010';",
    "norm_sql": "select enddate , retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Shanghai' and reportperiod = 'annual' and strftime ( '%Y' , enddate ) < '2010'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) < _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "province(province and city)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "reportarea(statistical category of region)",
          "city(city)",
          "county(county)"
        ],
        "column_names_original_en": [
          "province",
          "retailvalueofscgoods",
          "enddate",
          "reportperiod",
          "reportarea",
          "city",
          "county"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "province(province and city)",
          "id(record identifier)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "reportarea(statistical area category)",
          "province(province and city)",
          "commercialtax(business tax revenue (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "reportarea",
          "province",
          "commercialtax",
          "valueaddedtax"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Did we have records of the total sales of consumer goods before 2010? If so, please display the annual total amount in Shanghai city. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) < _ | select enddate , retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Shanghai' and reportperiod = 'annual' and strftime ( '%Y' , enddate ) < '2010'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.county",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.id",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.province",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.valueaddedtax"
    ]
  },
  {
    "question": "Please list the annual cumulative industrial value added for national state-owned and above-scale industrial enterprises.",
    "sql": "select enddate, industrialvalueadded from ed_industryproduction where reportarea ='National' and statstandard ='State-owned and above-scale industrial enterprises' and reportperiod ='Cumulative at the end';",
    "norm_sql": "select enddate , industrialvalueadded from ed_industryproduction where reportarea = 'National' and statstandard = 'State-owned and above-scale industrial enterprises' and reportperiod = 'Cumulative at the end'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "enddate(deadline)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "province(province)",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))"
        ],
        "column_names_original_en": [
          "statstandard",
          "industrialvalueadded",
          "enddate",
          "reportarea",
          "reportperiod",
          "province",
          "stateownedcontrolledcomap"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "reportarea(statistical area category)",
          "province(province and city)",
          "commercialtax(business tax revenue (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "reportarea",
          "province",
          "commercialtax",
          "valueaddedtax"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "id",
          "reportperiod",
          "indextype",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the annual cumulative industrial value added for national state-owned and above-scale industrial enterprises. | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name)",
    "output_sequence": "select _ from _ where _ | select enddate , industrialvalueadded from ed_industryproduction where reportarea = 'National' and statstandard = 'State-owned and above-scale industrial enterprises' and reportperiod = 'Cumulative at the end'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.province",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.id",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.province",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.valueaddedtax",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname"
    ]
  },
  {
    "question": "Show the data records of the wholesale retail trade and catering industry in our country. Thank you.",
    "sql": "select wholesaleretailtrade, foodbeverage from ed_retailvalueofscgoods;",
    "norm_sql": "select wholesaleretailtrade , foodbeverage from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "foodbeverage(catering industry)",
          "reportarea(statistical category of region)",
          "enddate(deadline)",
          "province(province and city)",
          "city(city)",
          "county(county)"
        ],
        "column_names_original_en": [
          "wholesaleretailtrade",
          "foodbeverage",
          "reportarea",
          "enddate",
          "province",
          "city",
          "county"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "datatype(data type code)",
          "currencyname(currency unit code)",
          "totalsavings(all deposit accounts)",
          "corporatesavings(unit deposit/corporate deposit)",
          "financedeposits(financial deposit)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "datatype",
          "currencyname",
          "totalsavings",
          "corporatesavings",
          "financedeposits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Show the data records of the wholesale retail trade and catering industry in our country. Thank you. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit)",
    "output_sequence": "select _ from _ | select wholesaleretailtrade , foodbeverage from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.county",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.financedeposits"
    ]
  },
  {
    "question": "Please display the records of money reserves and self-owned funds in the balance sheet of the monetary authority for the previous year.",
    "sql": "select moneyreserves, selfownedmoney from ed_moneyauthoritybs where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select moneyreserves , selfownedmoney from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "moneyreserves(reserve currency (in million of rmb))",
          "selfownedmoney(own funds (in million of rmb))",
          "enddate(deadline)",
          "reservedeposits(reserve deposit (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))"
        ],
        "column_names_original_en": [
          "moneyreserves",
          "selfownedmoney",
          "enddate",
          "reservedeposits",
          "moneyandgold",
          "forex",
          "nonfinancialorgdeposits"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "datatype(data type code)",
          "currencyname(currency unit code)",
          "totalsavings(all deposit accounts)",
          "corporatesavings(unit deposit/corporate deposit)",
          "financedeposits(financial deposit)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "datatype",
          "currencyname",
          "totalsavings",
          "corporatesavings",
          "financedeposits"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please display the records of money reserves and self-owned funds in the balance sheet of the monetary authority for the previous year. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) | select moneyreserves , selfownedmoney from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded"
    ]
  },
  {
    "question": "Please list the highest payment ratio of \"Securities Transaction Stamp Tax\" for \"A shares\" on the \"Shenzhen Stock Exchange\". Thank you.",
    "sql": "select ratioceiling from ed_taxrate where typename ='A shares' and itemname = 'Securities Transaction Stamp Tax' and secumarket ='Shenzhen Stock Exchange' ;",
    "norm_sql": "select ratioceiling from ed_taxrate where typename = 'A shares' and itemname = 'Securities Transaction Stamp Tax' and secumarket = 'Shenzhen Stock Exchange'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "secumarket(securities market)",
          "ratioceiling(maximum ratio (%))",
          "itemname(tax rate items)",
          "ratiofloor(minimum ratio (%))",
          "valuefloor(minimum value/starting point (rmb))",
          "valueceiling(maximum value (rmb))"
        ],
        "column_names_original_en": [
          "typename",
          "secumarket",
          "ratioceiling",
          "itemname",
          "ratiofloor",
          "valuefloor",
          "valueceiling"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "indextitle",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "id",
          "reportperiod",
          "indextype",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the highest payment ratio of \"Securities Transaction Stamp Tax\" for \"A shares\" on the \"Shenzhen Stock Exchange\". Thank you. | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name)",
    "output_sequence": "select _ from _ where _ | select ratioceiling from ed_taxrate where typename = 'A shares' and itemname = 'Securities Transaction Stamp Tax' and secumarket = 'Shenzhen Stock Exchange'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.itemname",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.valuefloor",
      "ed_taxrate.valueceiling",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.indexvalue",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname"
    ]
  },
  {
    "question": "Show the maximum and minimum index values of \"Food Manufacturing Industry\" in the \"Last Year Same Period\" statistical type from 2008 to present.",
    "sql": "select max(indexvalue), min(indexvalue) from ed_producerpiformp where indexname ='Food Manufacturing Industry' and reportperiod ='Last Year Same Period' and strftime('%Y', enddate)='2008';",
    "norm_sql": "select max ( indexvalue ) , min ( indexvalue ) from ed_producerpiformp where indexname = 'Food Manufacturing Industry' and reportperiod = 'Last Year Same Period' and strftime ( '%Y' , enddate ) = '2008'",
    "sql_skeleton": "select max ( _ ) , min ( _ ) from _ where _ and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indextype(index category)",
          "indexvalue(index)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indexname",
          "indextype",
          "indexvalue",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Show the maximum and minimum index values of \"Food Manufacturing Industry\" in the \"Last Year Same Period\" statistical type from 2008 to present. | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb))",
    "output_sequence": "select max ( _ ) , min ( _ ) from _ where _ and strftime ( _ ) = _ | select max ( indexvalue ) , min ( indexvalue ) from ed_producerpiformp where indexname = 'Food Manufacturing Industry' and reportperiod = 'Last Year Same Period' and strftime ( '%Y' , enddate ) = '2008'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp"
    ]
  },
  {
    "question": "In history, what were the amounts of claims to government, claims to non-financial sectors, and claims to specific deposit institutions respectively?",
    "sql": "select claimstogov, claimstononfinancialinst, claimstospecificsavingorg from ed_chinamoneyandbanking;",
    "norm_sql": "select claimstogov , claimstononfinancialinst , claimstospecificsavingorg from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "claimstogov(claims on the government (net))",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "money1(currency (narrow money m1))",
          "bonds(bonds)"
        ],
        "column_names_original_en": [
          "claimstospecificsavingorg",
          "claimstononfinancialinst",
          "claimstogov",
          "claimstootherinst",
          "moneyandquasimoney",
          "money1",
          "bonds"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "enddate(deadline)",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "totalassets(total assets (in million of rmb).)"
        ],
        "column_names_original_en": [
          "claimtogovernment",
          "claimtosavingsbanks",
          "claimtosavingsinst",
          "enddate",
          "claimtononfinancialinst",
          "claimtootherfinnonfininst",
          "totalassets"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "claimsongovernment(claims on government (net))",
          "otherliabilities(other liabilities)",
          "id(record identifier)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "claimsoncentralbank(claims on central bank)"
        ],
        "column_names_original_en": [
          "enddate",
          "claimsongovernment",
          "otherliabilities",
          "id",
          "reserveassets",
          "depositswithcentralbank",
          "claimsoncentralbank"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In history, what were the amounts of claims to government, claims to non-financial sectors, and claims to specific deposit institutions respectively? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank)",
    "output_sequence": "select _ from _ | select claimstogov , claimstononfinancialinst , claimstospecificsavingorg from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.bonds",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.totalassets",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.claimsoncentralbank"
    ]
  },
  {
    "question": "Please answer the names and values of various indexes in the \"Industrial Structure Classification Index\" for the previous month. Thank you.",
    "sql": "select indexname, indexvalue from ed_producerpiformp where reportperiod = 'Previous Month' and indextype = 'Industrial Structure Classification Index';",
    "norm_sql": "select indexname , indexvalue from ed_producerpiformp where reportperiod = 'Previous Month' and indextype = 'Industrial Structure Classification Index'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indextype(index category)",
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexvalue(index)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "indextype",
          "indexname",
          "reportperiod",
          "enddate",
          "indexvalue",
          "id"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "reportarea(statistical region category)",
          "indextitle(index name)",
          "indexcode(index code)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "reportarea",
          "indextitle",
          "indexcode",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please answer the names and values of various indexes in the \"Industrial Structure Classification Index\" for the previous month. Thank you. | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).indexvalue(index value) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select indexname , indexvalue from ed_producerpiformp where reportperiod = 'Previous Month' and indextype = 'Industrial Structure Classification Index'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.indexvalue",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded"
    ]
  },
  {
    "question": "How much was the gross domestic product of the primary industry, secondary industry, and tertiary industry in each province two years ago?",
    "sql": "select province, primaryindustrygdp, secondindustrygdp, thirdindustrygdp from ed_grossdomesticproduct where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select province , primaryindustrygdp , secondindustrygdp , thirdindustrygdp from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "enddate(deadline)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "gdppercapita(per capita gross domestic product (cny/person))"
        ],
        "column_names_original_en": [
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp",
          "enddate",
          "province",
          "gdp",
          "gdppercapita"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "forex",
          "moneyandgold",
          "otherforeignassets",
          "claimtogovernment",
          "claimtosavingsbanks"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How much was the gross domestic product of the primary industry, secondary industry, and tertiary industry in each province two years ago? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) | select province , primaryindustrygdp , secondindustrygdp , thirdindustrygdp from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded"
    ]
  },
  {
    "question": "Help list the amounts of claims on government and claims on central bank in the balance sheet of other depository corporations when the total assets amount exceeds 30 million, and differentiate them by time.",
    "sql": "select enddate, claimsongovernment, claimsoncentralbank from ed_otherdepositorycorpbs where totalassets > 30000000;",
    "norm_sql": "select enddate , claimsongovernment , claimsoncentralbank from ed_otherdepositorycorpbs where totalassets > 30000000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsoncentralbank(claims on central bank)",
          "totalassets(total assets)",
          "claimsongovernment(claims on government (net))",
          "enddate(deadline)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)"
        ],
        "column_names_original_en": [
          "claimsoncentralbank",
          "totalassets",
          "claimsongovernment",
          "enddate",
          "depositsincludedinm2",
          "liabilitiestocentralbank",
          "liabtootherdepositcorp"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "claimtogovernment",
          "claimtosavingsbanks",
          "claimtosavingsinst",
          "claimtootherfinnonfininst",
          "totalassets",
          "id"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help list the amounts of claims on government and claims on central bank in the balance sheet of other depository corporations when the total assets amount exceeds 30 million, and differentiate them by time. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector)",
    "output_sequence": "select _ from _ where _ | select enddate , claimsongovernment , claimsoncentralbank from ed_otherdepositorycorpbs where totalassets > 30000000",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.id",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst"
    ]
  },
  {
    "question": "Please provide the annual industrial value-added amount for \"provinces and cities\" in \"state-owned and large-scale industrial enterprises\".",
    "sql": "select enddate, province, industrialvalueadded from ed_industryproduction where reportarea = 'provinces and cities' and statstandard ='state-owned and large-scale industrial enterprises' and reportperiod ='annual' ;",
    "norm_sql": "select enddate , province , industrialvalueadded from ed_industryproduction where reportarea = 'provinces and cities' and statstandard = 'state-owned and large-scale industrial enterprises' and reportperiod = 'annual'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "reportperiod(data statistics interval)",
          "reportarea(statistical area category)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "statstandard(statistical caliber)",
          "enddate(deadline)",
          "province(province)",
          "largecomap(large-scale enterprise (light industry))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "reportarea",
          "industrialvalueadded",
          "statstandard",
          "enddate",
          "province",
          "largecomap"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "province(province and city)",
          "reportarea(statistical area category)",
          "commercialtax(business tax revenue (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))",
          "id(record identifier)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "reportarea",
          "commercialtax",
          "valueaddedtax",
          "id",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please provide the annual industrial value-added amount for \"provinces and cities\" in \"state-owned and large-scale industrial enterprises\". | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select enddate , province , industrialvalueadded from ed_industryproduction where reportarea = 'provinces and cities' and statstandard = 'state-owned and large-scale industrial enterprises' and reportperiod = 'annual'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.largecomap",
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.province",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.valueaddedtax",
      "ed_financialbalance.id",
      "ed_financialbalance.reportperiod",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp"
    ]
  },
  {
    "question": "Hello, when extracting the records of enterprise income and corporate income tax for the past five years in Beijing, where the enterprise income growth rate exceeds 5, please assist.",
    "sql": "select enterpriseincome, enterpriseincometax from ed_financialbalance where genterpriseincome > 5 and province ='Beijing' and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-5 year'));",
    "norm_sql": "select enterpriseincome , enterpriseincometax from ed_financialbalance where genterpriseincome > 5 and province = 'Beijing' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-5 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "province(province and city)",
          "enterpriseincometax(enterprise income tax (in million of rmb))",
          "enddate(deadline)",
          "enterpriseincome(enterprise income (in million of rmb))",
          "genterpriseincome(enterprise revenue growth rate)",
          "commercialtax(business tax revenue (in million of rmb))",
          "salestax(business tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "enterpriseincometax",
          "enddate",
          "enterpriseincome",
          "genterpriseincome",
          "commercialtax",
          "salestax"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "gdpgrowthyoy",
          "id",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hello, when extracting the records of enterprise income and corporate income tax for the past five years in Beijing, where the enterprise income growth rate exceeds 5, please assist. | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb)) , ed_financialbalance(government revenue and expenditure).genterpriseincome(enterprise revenue growth rate) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enterpriseincome , enterpriseincometax from ed_financialbalance where genterpriseincome > 5 and province = 'Beijing' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-5 year' ) )",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.province",
      "ed_financialbalance.enterpriseincometax",
      "ed_financialbalance.enddate",
      "ed_financialbalance.enterpriseincome",
      "ed_financialbalance.genterpriseincome",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.salestax",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded"
    ]
  },
  {
    "question": "I would like to see the list of provinces whose year-on-year gross domestic product exceeded 0.5% last year.",
    "sql": "select province from ed_grossdomesticproduct where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year')) and gdpgrowthyoy > 0.5;",
    "norm_sql": "select province from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) and gdpgrowthyoy > 0.5",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) and _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "enddate(deadline)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "gdpgrowthyoy",
          "enddate",
          "province",
          "gdp",
          "gdppercapita",
          "primaryindustrygdp",
          "secondindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "reportarea(statistical area category)",
          "province(province and city)",
          "commercialtax(business tax revenue (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "reportarea",
          "province",
          "commercialtax",
          "valueaddedtax"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I would like to see the list of provinces whose year-on-year gross domestic product exceeded 0.5% last year. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) and _ | select province from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) and gdpgrowthyoy > 0.5",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.id",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.province",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.valueaddedtax",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded"
    ]
  },
  {
    "question": "Siri, please help me check the year-end accumulated data of the total industrial production value of the light industry within the scope of \"National\" \"All Industrial Enterprises\" over the years.",
    "sql": "select enddate, livalueap from ed_industryproduction where reportarea ='National' and statstandard ='All Industrial Enterprises' and reportperiod ='Year-end accumulated';",
    "norm_sql": "select enddate , livalueap from ed_industryproduction where reportarea = 'National' and statstandard = 'All Industrial Enterprises' and reportperiod = 'Year-end accumulated'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "reportarea(statistical area category)",
          "livalueap(light industry (in million of rmb))",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "enddate(deadline)",
          "province(province)",
          "hivalueap(heavy industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "reportarea",
          "livalueap",
          "reportperiod",
          "statstandard",
          "enddate",
          "province",
          "hivalueap"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "id",
          "reportperiod",
          "indextype",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Siri, please help me check the year-end accumulated data of the total industrial production value of the light industry within the scope of \"National\" \"All Industrial Enterprises\" over the years. | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name)",
    "output_sequence": "select _ from _ where _ | select enddate , livalueap from ed_industryproduction where reportarea = 'National' and statstandard = 'All Industrial Enterprises' and reportperiod = 'Year-end accumulated'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.hivalueap",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname"
    ]
  },
  {
    "question": "Quickly find the data. What are the records of RMB incremental amounts exceeding 150,000 since 2000? Please find the time recorded as \"end of period cumulative\" and the field of loan incremental amounts.",
    "sql": "select enddate, subjectsum from ed_newincreasingloan where reportperiod='End of Period Cumulative' and subjectsum > 150000 and strftime('%Y', enddate) >= '2000';",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'End of Period Cumulative' and subjectsum > 150000 and strftime ( '%Y' , enddate ) >= '2000'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) >= _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "subjectsum(amount (in million of rmb))",
          "reportperiod(statistical period)",
          "enddate(deadline)",
          "yoy(year-on-year increase or decrease (%))",
          "subjectname(indicator name)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "subjectsum",
          "reportperiod",
          "enddate",
          "yoy",
          "subjectname",
          "id"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "money1(currency (narrow money m1))",
          "quasimoney(quasi-currency)",
          "fcdeposits(foreign currency deposit.)",
          "centralbankbonds(central bank bonds)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "moneyandquasimoney",
          "money1",
          "quasimoney",
          "fcdeposits",
          "centralbankbonds"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistics interval)",
          "province(province and city)",
          "rmbloans(rmb loans (in 100 million rmb))",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "creditloans(trust loan (in 100 million rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "province",
          "rmbloans",
          "foreigncurrencyloans",
          "creditloans"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Quickly find the data. What are the records of RMB incremental amounts exceeding 150,000 since 2000? Please find the time recorded as \"end of period cumulative\" and the field of loan incremental amounts. | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).id(record identifier) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) >= _ | select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'End of Period Cumulative' and subjectsum > 150000 and strftime ( '%Y' , enddate ) >= '2000'",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.id",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_socialfinancing.*",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.id",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.province",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.creditloans"
    ]
  },
  {
    "question": "What is the maximum value of total assets in our other deposit-taking company's balance sheet over the years, and which year does it belong to? Thank you.",
    "sql": "select enddate, totalassets from ed_otherdepositorycorpbs order by totalassets desc limit 1;",
    "norm_sql": "select enddate , totalassets from ed_otherdepositorycorpbs order by totalassets desc limit 1",
    "sql_skeleton": "select _ from _ order by _ desc limit _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "totalassets(total assets)",
          "enddate(deadline)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "foreignassets(foreign net assets)",
          "demanddeposits(current deposits for enterprises)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)"
        ],
        "column_names_original_en": [
          "totalassets",
          "enddate",
          "depositsincludedinm2",
          "foreignassets",
          "demanddeposits",
          "liabilitiestocentralbank",
          "liabtootherdepositcorp"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "moneyreserves(reserve currency (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "claimtosavingsbanks",
          "claimtootherfinnonfininst",
          "claimtononfinancialinst",
          "totalassets",
          "moneyreserves"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "datatype(data type code)",
          "currencyname(currency unit code)",
          "totalsavings(all deposit accounts)",
          "corporatesavings(unit deposit/corporate deposit)",
          "financedeposits(financial deposit)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "datatype",
          "currencyname",
          "totalsavings",
          "corporatesavings",
          "financedeposits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the maximum value of total assets in our other deposit-taking company's balance sheet over the years, and which year does it belong to? Thank you. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit)",
    "output_sequence": "select _ from _ order by _ desc limit _ | select enddate , totalassets from ed_otherdepositorycorpbs order by totalassets desc limit 1",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.financedeposits"
    ]
  },
  {
    "question": "What is the minimum ratio of \"Excess Reserve Ratio\" for \"Large Chinese Banks\"?",
    "sql": "select ratioceiling from ed_taxrate where typename ='Large Chinese Banks' and itemname = 'Excess Reserve Ratio';",
    "norm_sql": "select ratioceiling from ed_taxrate where typename = 'Large Chinese Banks' and itemname = 'Excess Reserve Ratio'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "itemname(tax rate items)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "valuefloor(minimum value/starting point (rmb))",
          "valueceiling(maximum value (rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "typename",
          "itemname",
          "ratiofloor",
          "ratioceiling",
          "valuefloor",
          "valueceiling",
          "id"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "effectivedate(effective date)",
          "drrtype(reserve requirement ratio category)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "id",
          "effectivedate",
          "drrtype",
          "ratiofloor",
          "ratioceiling"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the minimum ratio of \"Excess Reserve Ratio\" for \"Large Chinese Banks\"? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).id(record identifier) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%))",
    "output_sequence": "select _ from _ where _ | select ratioceiling from ed_taxrate where typename = 'Large Chinese Banks' and itemname = 'Excess Reserve Ratio'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.itemname",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valuefloor",
      "ed_taxrate.valueceiling",
      "ed_taxrate.id",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.ratioceiling"
    ]
  },
  {
    "question": "Hey, my friend wants to know the situation of our financial institution's RMB credit receipts and payments in recent years. Please list the end-of-period balance of deposits for units or enterprises.",
    "sql": "select corporatesavings from ed_chinafibalancesheetrmb;",
    "norm_sql": "select corporatesavings from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "corporatesavings(unit deposit/corporate deposit)",
          "enddate(deadline)",
          "currencyname(currency unit code)",
          "totalsavings(all deposit accounts)",
          "totalloans(various loans)",
          "moneyincirculation(currency in circulation)",
          "domesticloans((one) domestic loan)"
        ],
        "column_names_original_en": [
          "corporatesavings",
          "enddate",
          "currencyname",
          "totalsavings",
          "totalloans",
          "moneyincirculation",
          "domesticloans"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "domesticloans(domestic credit)",
          "money1(currency (narrow money m1))",
          "quasimoney(quasi-currency)",
          "fcdeposits(foreign currency deposit.)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "domesticloans",
          "money1",
          "quasimoney",
          "fcdeposits"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hey, my friend wants to know the situation of our financial institution's RMB credit receipts and payments in recent years. Please list the end-of-period balance of deposits for units or enterprises. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ | select corporatesavings from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "In the past three years, the export amount of our country has exceeded 40 million, while the import amount is less than 20 million. Thank you.",
    "sql": "select imvalueofgoods , exvalueofgoods from ed_exportimport  where imvalueofgoods < 20 and exvalueofgoods > 40 and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select imvalueofgoods , exvalueofgoods from ed_exportimport where imvalueofgoods < 20 and exvalueofgoods > 40 and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "enddate(deadline)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "commodity(product name)"
        ],
        "column_names_original_en": [
          "imvalueofgoods",
          "exvalueofgoods",
          "enddate",
          "gyoyofexvaluegoods",
          "gyoyofimvaluegoods",
          "eximvalueofgoods",
          "commodity"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "enddate(deadline)",
          "quantity(quantity)",
          "eximvalue(amount)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "statecode(primary country)",
          "operatetype(import and export categories)"
        ],
        "column_names_original_en": [
          "enddate",
          "quantity",
          "eximvalue",
          "id",
          "reportperiod",
          "statecode",
          "operatetype"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In the past three years, the export amount of our country has exceeded 40 million, while the import amount is less than 20 million. Thank you. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).commodity(product name) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).quantity(quantity) , ed_productexportimport(product import and export volume).eximvalue(amount) , ed_productexportimport(product import and export volume).id(record identifier) , ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).operatetype(import and export categories) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select imvalueofgoods , exvalueofgoods from ed_exportimport where imvalueofgoods < 20 and exvalueofgoods > 40 and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.enddate",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.commodity",
      "ed_productexportimport.*",
      "ed_productexportimport.enddate",
      "ed_productexportimport.quantity",
      "ed_productexportimport.eximvalue",
      "ed_productexportimport.id",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.statecode",
      "ed_productexportimport.operatetype",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst"
    ]
  },
  {
    "question": "Please search for the data on domestic loans and foreign currency deposits after 2005. Thank you.",
    "sql": "select domesticloans, fcdeposits from ed_chinamoneyandbanking where strftime('%Y', enddate)>='2005';",
    "norm_sql": "select domesticloans , fcdeposits from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) >= '2005'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) >= _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "fcdeposits(foreign currency deposit.)",
          "domesticloans(domestic credit)",
          "enddate(deadline)",
          "claimstogov(claims on the government (net))",
          "money1(currency (narrow money m1))",
          "bonds(bonds)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))"
        ],
        "column_names_original_en": [
          "fcdeposits",
          "domesticloans",
          "enddate",
          "claimstogov",
          "money1",
          "bonds",
          "moneyandquasimoney"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "moneyincirculation(currency in circulation)",
          "domesticloans((one) domestic loan)",
          "totalloans(various loans)",
          "totalsavings(all deposit accounts)",
          "currencyname(currency unit code)",
          "corporatesavings(unit deposit/corporate deposit)"
        ],
        "column_names_original_en": [
          "enddate",
          "moneyincirculation",
          "domesticloans",
          "totalloans",
          "totalsavings",
          "currencyname",
          "corporatesavings"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistics interval)",
          "reportarea(statistical region category)",
          "province(province and city)",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "rmbloans(rmb loans (in 100 million rmb))",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "reportarea",
          "province",
          "socialfinancing",
          "rmbloans",
          "foreigncurrencyloans"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please search for the data on domestic loans and foreign currency deposits after 2005. Thank you. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) >= _ | select domesticloans , fcdeposits from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) >= '2005'",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_socialfinancing.*",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.province",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.foreigncurrencyloans"
    ]
  },
  {
    "question": "Display the total records of currency and quasimoney in China in the past two years, and the respective amounts of currency and quasimoney.",
    "sql": "select moneyandquasimoney, money1, quasimoney from ed_chinamoneyandbanking where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select moneyandquasimoney , money1 , quasimoney from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "enddate(deadline)",
          "money1(currency (narrow money m1))",
          "quasimoney(quasi-currency)",
          "claimstogov(claims on the government (net))",
          "bonds(bonds)",
          "fcdeposits(foreign currency deposit.)"
        ],
        "column_names_original_en": [
          "moneyandquasimoney",
          "enddate",
          "money1",
          "quasimoney",
          "claimstogov",
          "bonds",
          "fcdeposits"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "savingsdeposits(savings deposits)",
          "moneyincirculation(currency in circulation)",
          "totalloans(various loans)",
          "loantogov(financial borrowing)",
          "id(record identifier)",
          "datatype(data type code)"
        ],
        "column_names_original_en": [
          "enddate",
          "savingsdeposits",
          "moneyincirculation",
          "totalloans",
          "loantogov",
          "id",
          "datatype"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "gdpgrowthyoy",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Display the total records of currency and quasimoney in China in the past two years, and the respective amounts of currency and quasimoney. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select moneyandquasimoney , money1 , quasimoney from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp"
    ]
  },
  {
    "question": "Help Director Li find out the total amount of currency and quasi-money before 1995, and the respective amounts of currency and quasi-money.",
    "sql": "select moneyandquasimoney, money1, quasimoney from ed_chinamoneyandbanking where strftime('%Y', enddate)<'1995';",
    "norm_sql": "select moneyandquasimoney , money1 , quasimoney from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) < '1995'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) < _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "money1(currency (narrow money m1))",
          "quasimoney(quasi-currency)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "claimstogov(claims on the government (net))",
          "fcdeposits(foreign currency deposit.)",
          "bonds(bonds)"
        ],
        "column_names_original_en": [
          "enddate",
          "money1",
          "quasimoney",
          "moneyandquasimoney",
          "claimstogov",
          "fcdeposits",
          "bonds"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "forex",
          "moneyandgold",
          "otherforeignassets",
          "claimtogovernment",
          "claimtosavingsbanks"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "id(record identifier)",
          "effectivedate(effective date)",
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "secumarket(securities market)",
          "maturity(repurchase period)",
          "basiscode(billing baseline)"
        ],
        "column_names_original_en": [
          "id",
          "effectivedate",
          "itemname",
          "typename",
          "secumarket",
          "maturity",
          "basiscode"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help Director Li find out the total amount of currency and quasi-money before 1995, and the respective amounts of currency and quasi-money. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).basiscode(billing baseline)",
    "output_sequence": "select _ from _ where strftime ( _ ) < _ | select moneyandquasimoney , money1 , quasimoney from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) < '1995'",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.bonds",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_taxrate.*",
      "ed_taxrate.id",
      "ed_taxrate.effectivedate",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.maturity",
      "ed_taxrate.basiscode"
    ]
  },
  {
    "question": "Please help me check the data for other foreign assets and other liabilities in the monetary authority balance sheet.",
    "sql": "select otherforeignassets, otherliability from ed_moneyauthoritybs;",
    "norm_sql": "select otherforeignassets , otherliability from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "otherforeignassets(other foreign assets (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "enddate(deadline)",
          "governmentsavings(government deposits (in million of rmb))"
        ],
        "column_names_original_en": [
          "otherforeignassets",
          "otherliability",
          "abroadliability",
          "claimtogovernment",
          "moneyandgold",
          "enddate",
          "governmentsavings"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "otherassets(other assets)",
          "totalassets(total assets)",
          "foreignliabilities(foreign liabilities)"
        ],
        "column_names_original_en": [
          "enddate",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "otherassets",
          "totalassets",
          "foreignliabilities"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me check the data for other foreign assets and other liabilities in the monetary authority balance sheet. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector)",
    "output_sequence": "select _ from _ | select otherforeignassets , otherliability from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.otherassets",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.foreignliabilities",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst"
    ]
  },
  {
    "question": "Hey, Xiaoli, can you help me check the records of China's overseas net assets exceeding 1 million yuan? Please provide the fields of the date and the amount of overseas net assets.",
    "sql": "select enddate, netabroadassets from ed_chinamoneyandbanking where netabroadassets > 1000000;",
    "norm_sql": "select enddate , netabroadassets from ed_chinamoneyandbanking where netabroadassets > 1000000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "netabroadassets(foreign net assets)",
          "enddate(deadline)",
          "money1(currency (narrow money m1))",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "claimstogov(claims on the government (net))",
          "bonds(bonds)",
          "quasimoney(quasi-currency)"
        ],
        "column_names_original_en": [
          "netabroadassets",
          "enddate",
          "money1",
          "moneyandquasimoney",
          "claimstogov",
          "bonds",
          "quasimoney"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "forex",
          "moneyandgold",
          "otherforeignassets",
          "claimtogovernment",
          "claimtosavingsbanks"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "foreignassets(foreign net assets)",
          "id(record identifier)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "foreignassets",
          "id",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hey, Xiaoli, can you help me check the records of China's overseas net assets exceeding 1 million yuan? Please provide the fields of the date and the amount of overseas net assets. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ where _ | select enddate , netabroadassets from ed_chinamoneyandbanking where netabroadassets > 1000000",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "Please search for the data on the amount of foreign exchange, amount of currency gold, and other foreign assets when our total assets exceed 10 million in recent years.",
    "sql": "select forex, moneyandgold, otherforeignassets from ed_moneyauthoritybs where totalassets > 10;",
    "norm_sql": "select forex , moneyandgold , otherforeignassets from ed_moneyauthoritybs where totalassets > 10",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "totalliability(total liabilities (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))"
        ],
        "column_names_original_en": [
          "forex",
          "moneyandgold",
          "otherforeignassets",
          "totalassets",
          "totalliability",
          "moneyreserves",
          "moneyissuance"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "money1(currency (narrow money m1))",
          "fcdeposits(foreign currency deposit.)",
          "quasimoney(quasi-currency)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "netabroadassets",
          "domesticloans",
          "moneyandquasimoney",
          "money1",
          "fcdeposits",
          "quasimoney",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please search for the data on the amount of foreign exchange, amount of currency gold, and other foreign assets when our total assets exceed 10 million in recent years. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ where _ | select forex , moneyandgold , otherforeignassets from ed_moneyauthoritybs where totalassets > 10",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.enddate",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "What is the total amount of fiscal loans and fiscal deposits in the credit and debit of financial institutions in China in the past two years?",
    "sql": "select loantogov, financedeposits from ed_chinafibalancesheetrmb where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select loantogov , financedeposits from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "financedeposits(financial deposit)",
          "loantogov(financial borrowing)",
          "enddate(deadline)",
          "totalloans(various loans)",
          "totalsavings(all deposit accounts)",
          "domesticloans((one) domestic loan)",
          "overseasloans((two) overseas loans)"
        ],
        "column_names_original_en": [
          "financedeposits",
          "loantogov",
          "enddate",
          "totalloans",
          "totalsavings",
          "domesticloans",
          "overseasloans"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "reportperiod(statistical period)",
          "enddate(deadline)",
          "subjectsum(amount (in million of rmb))",
          "subjectname(indicator name)",
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "enddate",
          "subjectsum",
          "subjectname",
          "yoy",
          "id"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the total amount of fiscal loans and fiscal deposits in the credit and debit of financial institutions in China in the past two years? | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector)",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select loantogov , financedeposits from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst"
    ]
  },
  {
    "question": "Can Li Gong be shown if there were any \"monthly\" recorded loan amounts exceeding 100,000 in the previous year? If there were, please extract the time, loan amount, and year-on-year change records.",
    "sql": "select enddate, subjectsum, yoy from ed_newincreasingloan where reportperiod = 'monthly' and subjectsum > 100000 and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select enddate , subjectsum , yoy from ed_newincreasingloan where reportperiod = 'monthly' and subjectsum > 100000 and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "enddate(deadline)",
          "yoy(year-on-year increase or decrease (%))",
          "subjectname(indicator name)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "subjectsum",
          "enddate",
          "yoy",
          "subjectname",
          "id"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "totalloans(various loans)",
          "totalsavings(all deposit accounts)",
          "domesticloans((one) domestic loan)",
          "moneyincirculation(currency in circulation)",
          "loantogov(financial borrowing)",
          "currencyname(currency unit code)"
        ],
        "column_names_original_en": [
          "enddate",
          "totalloans",
          "totalsavings",
          "domesticloans",
          "moneyincirculation",
          "loantogov",
          "currencyname"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "domesticloans(domestic credit)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "money1(currency (narrow money m1))",
          "quasimoney(quasi-currency)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "domesticloans",
          "moneyandquasimoney",
          "money1",
          "quasimoney"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can Li Gong be shown if there were any \"monthly\" recorded loan amounts exceeding 100,000 in the previous year? If there were, please extract the time, loan amount, and year-on-year change records. | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).id(record identifier) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select enddate , subjectsum , yoy from ed_newincreasingloan where reportperiod = 'monthly' and subjectsum > 100000 and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.id",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.quasimoney"
    ]
  },
  {
    "question": "Please list the monthly industrial added value data of \"all industrial enterprises\" within the \"national\" scope, retaining the time field. Thank you.",
    "sql": "select enddate, industrialvalueadded from ed_industryproduction where reportarea ='National' and statstandard ='All industrial enterprises' and reportperiod ='Monthly';",
    "norm_sql": "select enddate , industrialvalueadded from ed_industryproduction where reportarea = 'National' and statstandard = 'All industrial enterprises' and reportperiod = 'Monthly'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "reportarea(statistical area category)",
          "enddate(deadline)",
          "province(province)",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "statstandard",
          "industrialvalueadded",
          "reportarea",
          "enddate",
          "province",
          "industrialoutputvalueap"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "id",
          "reportperiod",
          "indextype",
          "indexname"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "reportarea(statistical area category)",
          "province(province and city)",
          "commercialtax(business tax revenue (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "reportarea",
          "province",
          "commercialtax",
          "valueaddedtax"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the monthly industrial added value data of \"all industrial enterprises\" within the \"national\" scope, retaining the time field. Thank you. | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select enddate , industrialvalueadded from ed_industryproduction where reportarea = 'National' and statstandard = 'All industrial enterprises' and reportperiod = 'Monthly'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.id",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.province",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.valueaddedtax"
    ]
  },
  {
    "question": "Can you calculate the total industrial output value in \"monthly\" for \"all industrial enterprises\" in the \"national\" level throughout these years? Thank you.",
    "sql": "select enddate, industrialoutputvalueap from ed_industryproduction where reportarea ='National' and statstandard ='All industrial enterprises' and reportperiod ='monthly';",
    "norm_sql": "select enddate , industrialoutputvalueap from ed_industryproduction where reportarea = 'National' and statstandard = 'All industrial enterprises' and reportperiod = 'monthly'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "reportarea(statistical area category)",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "enddate(deadline)",
          "province(province)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "statstandard",
          "reportarea",
          "industrialoutputvalueap",
          "enddate",
          "province",
          "industrialvalueadded"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "id",
          "reportperiod",
          "indextype",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you calculate the total industrial output value in \"monthly\" for \"all industrial enterprises\" in the \"national\" level throughout these years? Thank you. | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name)",
    "output_sequence": "select _ from _ where _ | select enddate , industrialoutputvalueap from ed_industryproduction where reportarea = 'National' and statstandard = 'All industrial enterprises' and reportperiod = 'monthly'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.industrialvalueadded",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname"
    ]
  },
  {
    "question": "What records do we have for total assets less than 10 million, specifically listing the records for time, forex amount, money and gold, and other foreign currencies? Thank you.",
    "sql": "select enddate, forex, moneyandgold, otherforeignassets from ed_moneyauthoritybs where totalassets < 10;",
    "norm_sql": "select enddate , forex , moneyandgold , otherforeignassets from ed_moneyauthoritybs where totalassets < 10",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "enddate(deadline)",
          "totalassets(total assets (in million of rmb).)",
          "moneyissuance(currency issuance (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))"
        ],
        "column_names_original_en": [
          "forex",
          "moneyandgold",
          "otherforeignassets",
          "enddate",
          "totalassets",
          "moneyissuance",
          "moneyreserves"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "netabroadassets(foreign net assets)",
          "enddate(deadline)",
          "money1(currency (narrow money m1))",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "domesticloans(domestic credit)",
          "fcdeposits(foreign currency deposit.)",
          "quasimoney(quasi-currency)"
        ],
        "column_names_original_en": [
          "netabroadassets",
          "enddate",
          "money1",
          "moneyandquasimoney",
          "domesticloans",
          "fcdeposits",
          "quasimoney"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "totalassets(total assets)",
          "foreignliabilities(foreign liabilities)"
        ],
        "column_names_original_en": [
          "enddate",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "totalassets",
          "foreignliabilities"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What records do we have for total assets less than 10 million, specifically listing the records for time, forex amount, money and gold, and other foreign currencies? Thank you. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities)",
    "output_sequence": "select _ from _ where _ | select enddate , forex , moneyandgold , otherforeignassets from ed_moneyauthoritybs where totalassets < 10",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.foreignliabilities"
    ]
  },
  {
    "question": "Hi, please help me find the annual statistical value of social retail sales for the wholesale and retail trade industry and the catering industry in Shanghai in 2004. Thank you.",
    "sql": "select wholesaleretailtrade, foodbeverage from ed_retailvalueofscgoods  where province='Shanghai' and reportperiod ='Annual' and strftime('%Y', enddate)='2004';",
    "norm_sql": "select wholesaleretailtrade , foodbeverage from ed_retailvalueofscgoods where province = 'Shanghai' and reportperiod = 'Annual' and strftime ( '%Y' , enddate ) = '2004'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "province(province and city)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "foodbeverage(catering industry)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "reportarea(statistical category of region)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "wholesaleretailtrade",
          "foodbeverage",
          "reportperiod",
          "enddate",
          "reportarea",
          "retailvalueofscgoods"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hi, please help me find the annual statistical value of social retail sales for the wholesale and retail trade industry and the catering industry in Shanghai in 2004. Thank you. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = _ | select wholesaleretailtrade , foodbeverage from ed_retailvalueofscgoods where province = 'Shanghai' and reportperiod = 'Annual' and strftime ( '%Y' , enddate ) = '2004'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "I would like to understand the data situation. In our table, what records do we have regarding \"Metal Products Industry\" in the \"National Economic Industry Index\"? Please list the relevant statistical periods and index values.",
    "sql": "select reportperiod, indexvalue from ed_producerpiformp where indextype='National Economic Industry Index' and indexname='Metal Products Industry';",
    "norm_sql": "select reportperiod , indexvalue from ed_producerpiformp where indextype = 'National Economic Industry Index' and indexname = 'Metal Products Industry'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "statstandard(statistical caliber)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "statstandard",
          "id",
          "reportarea",
          "reportperiod",
          "industrialvalueadded"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "indextitle",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I would like to understand the data situation. In our table, what records do we have regarding \"Metal Products Industry\" in the \"National Economic Industry Index\"? Please list the relevant statistical periods and index values. | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value)",
    "output_sequence": "select _ from _ where _ | select reportperiod , indexvalue from ed_producerpiformp where indextype = 'National Economic Industry Index' and indexname = 'Metal Products Industry'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.industrialvalueadded",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.indexvalue"
    ]
  },
  {
    "question": "In the year 2000, what was the value added of \"annual\" industrial production in \"all industrial enterprises\" in Shanghai?",
    "sql": "select industrialvalueadded from ed_industryproduction where province ='Shanghai' and statstandard ='all industrial enterprises' and reportperiod ='annual' and strftime('%Y', enddate)='2000';",
    "norm_sql": "select industrialvalueadded from ed_industryproduction where province = 'Shanghai' and statstandard = 'all industrial enterprises' and reportperiod = 'annual' and strftime ( '%Y' , enddate ) = '2000'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "reportperiod(data statistics interval)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "statstandard(statistical caliber)",
          "enddate(deadline)",
          "province(province)",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "reportarea(statistical area category)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "industrialvalueadded",
          "statstandard",
          "enddate",
          "province",
          "industrialoutputvalueap",
          "reportarea"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "id",
          "reportperiod",
          "indextype",
          "indexname"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "reportarea(statistical area category)",
          "province(province and city)",
          "commercialtax(business tax revenue (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "reportarea",
          "province",
          "commercialtax",
          "valueaddedtax"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In the year 2000, what was the value added of \"annual\" industrial production in \"all industrial enterprises\" in Shanghai? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).reportarea(statistical area category) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = _ | select industrialvalueadded from ed_industryproduction where province = 'Shanghai' and statstandard = 'all industrial enterprises' and reportperiod = 'annual' and strftime ( '%Y' , enddate ) = '2000'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.reportarea",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.id",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.province",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.valueaddedtax"
    ]
  },
  {
    "question": "How much is our paid-in capital amount in the balance sheet of other depositary companies? Please list it. Thank you.",
    "sql": "select paidincapital from ed_otherdepositorycorpbs;",
    "norm_sql": "select paidincapital from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "paidincapital(paid-up capital)",
          "enddate(deadline)",
          "claimsongovernment(claims on government (net))",
          "demanddeposits(current deposits for enterprises)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "liabilitiestocentralbank(liabilities to the central bank.)"
        ],
        "column_names_original_en": [
          "paidincapital",
          "enddate",
          "claimsongovernment",
          "demanddeposits",
          "liabtootherdepositcorp",
          "depositsincludedinm2",
          "liabilitiestocentralbank"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "capitalreceived(paid-up capital)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "capitalreceived",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "indextitle",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How much is our paid-in capital amount in the balance sheet of other depositary companies? Please list it. Thank you. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value)",
    "output_sequence": "select _ from _ | select paidincapital from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.indexvalue"
    ]
  },
  {
    "question": "Show the Gross Domestic Product (GDP) of China.",
    "sql": "select gdp from ed_grossdomesticproduct;",
    "norm_sql": "select gdp from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdp(gross domestic product (in million of rmb).)",
          "province(province and city)",
          "enddate(deadline)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "gdp",
          "province",
          "enddate",
          "gdppercapita",
          "gdpgrowthyoy",
          "primaryindustrygdp",
          "secondindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "reportarea(statistical area category)",
          "province(province and city)",
          "commercialtax(business tax revenue (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "reportarea",
          "province",
          "commercialtax",
          "valueaddedtax"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Show the Gross Domestic Product (GDP) of China. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb))",
    "output_sequence": "select _ from _ | select gdp from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.id",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.province",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.valueaddedtax"
    ]
  },
  {
    "question": "Display the total amount of retail sales of consumer goods in the \"annual\" social consumption in the whole country in the past three years, differentiated by time.",
    "sql": "select enddate, retailvalueofscgoods from ed_retailvalueofscgoods where reportarea ='National' and reportperiod ='Annual' and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select enddate , retailvalueofscgoods from ed_retailvalueofscgoods where reportarea = 'National' and reportperiod = 'Annual' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "enddate(deadline)",
          "reportarea(statistical category of region)",
          "province(province and city)",
          "city(city)",
          "county(county)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "retailvalueofscgoods",
          "enddate",
          "reportarea",
          "province",
          "city",
          "county"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Display the total amount of retail sales of consumer goods in the \"annual\" social consumption in the whole country in the past three years, differentiated by time. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , retailvalueofscgoods from ed_retailvalueofscgoods where reportarea = 'National' and reportperiod = 'Annual' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.county",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded"
    ]
  },
  {
    "question": "Please help me check the annual accumulated industrial output value of \"all industrial enterprises\" in each \"province or city.\" Thank you.",
    "sql": "select enddate, province, industrialoutputvalueap from ed_industryproduction where reportarea ='province or city' and statstandard ='all industrial enterprises' and reportperiod ='annual accumulated';",
    "norm_sql": "select enddate , province , industrialoutputvalueap from ed_industryproduction where reportarea = 'province or city' and statstandard = 'all industrial enterprises' and reportperiod = 'annual accumulated'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "enddate(deadline)",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "province(province)",
          "reportarea(statistical area category)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "statstandard",
          "enddate",
          "industrialoutputvalueap",
          "province",
          "reportarea",
          "industrialvalueadded"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "id",
          "reportperiod",
          "indextype",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me check the annual accumulated industrial output value of \"all industrial enterprises\" in each \"province or city.\" Thank you. | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name)",
    "output_sequence": "select _ from _ where _ | select enddate , province , industrialoutputvalueap from ed_industryproduction where reportarea = 'province or city' and statstandard = 'all industrial enterprises' and reportperiod = 'annual accumulated'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.enddate",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.province",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.industrialvalueadded",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname"
    ]
  },
  {
    "question": "List the data size of China's tertiary industry gross domestic product over the years.",
    "sql": "select thirdindustrygdp from ed_grossdomesticproduct;",
    "norm_sql": "select thirdindustrygdp from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "province(province and city)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "enddate(deadline)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "gdp(gross domestic product (in million of rmb).)"
        ],
        "column_names_original_en": [
          "thirdindustrygdp",
          "province",
          "primaryindustrygdp",
          "enddate",
          "secondindustrygdp",
          "gdppercapita",
          "gdp"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "List the data size of China's tertiary industry gross domestic product over the years. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ | select thirdindustrygdp from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.gdp",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "Wang Gong wants to know the year-on-year growth and decline data of our imports and exports over the years. Please provide it.",
    "sql": "select gyoyofimvaluegoods, gyoyofexvaluegoods from ed_exportimport ;",
    "norm_sql": "select gyoyofimvaluegoods , gyoyofexvaluegoods from ed_exportimport",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "commodity(product name)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "gyoyofimvaluegoods",
          "gyoyofexvaluegoods",
          "imvalueofgoods",
          "gyoyofeximvaluegoods",
          "exvalueofgoods",
          "commodity",
          "eximvalueofgoods"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "gdpgrowthyoy",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "enddate(deadline)",
          "quantity(quantity)",
          "eximvalue(amount)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "statecode(primary country)",
          "operatetype(import and export categories)"
        ],
        "column_names_original_en": [
          "enddate",
          "quantity",
          "eximvalue",
          "id",
          "reportperiod",
          "statecode",
          "operatetype"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Wang Gong wants to know the year-on-year growth and decline data of our imports and exports over the years. Please provide it. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).quantity(quantity) , ed_productexportimport(product import and export volume).eximvalue(amount) , ed_productexportimport(product import and export volume).id(record identifier) , ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).operatetype(import and export categories)",
    "output_sequence": "select _ from _ | select gyoyofimvaluegoods , gyoyofexvaluegoods from ed_exportimport",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.commodity",
      "ed_exportimport.eximvalueofgoods",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_productexportimport.*",
      "ed_productexportimport.enddate",
      "ed_productexportimport.quantity",
      "ed_productexportimport.eximvalue",
      "ed_productexportimport.id",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.statecode",
      "ed_productexportimport.operatetype"
    ]
  },
  {
    "question": "Is this something I can know, the annual data on Gross Domestic Product (GDP) and Gross Domestic Product per capita (GDPPC)?",
    "sql": "select gdp, gdppercapita from ed_grossdomesticproduct;",
    "norm_sql": "select gdp , gdppercapita from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdp(gross domestic product (in million of rmb).)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "enddate(deadline)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "province(province and city)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "gdp",
          "gdppercapita",
          "enddate",
          "gdpgrowthyoy",
          "province",
          "primaryindustrygdp",
          "secondindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Is this something I can know, the annual data on Gross Domestic Product (GDP) and Gross Domestic Product per capita (GDPPC)? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ | select gdp , gdppercapita from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "What is the annual amount of new loans added by our financial institution?",
    "sql": "select enddate, subjectsum from ed_newincreasingloan;",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "subjectsum(amount (in million of rmb))",
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectname(indicator name)",
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "subjectsum",
          "enddate",
          "reportperiod",
          "subjectname",
          "yoy",
          "id"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "totalloans(various loans)",
          "id(record identifier)",
          "datatype(data type code)",
          "currencyname(currency unit code)",
          "totalsavings(all deposit accounts)",
          "corporatesavings(unit deposit/corporate deposit)"
        ],
        "column_names_original_en": [
          "enddate",
          "totalloans",
          "id",
          "datatype",
          "currencyname",
          "totalsavings",
          "corporatesavings"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the annual amount of new loans added by our financial institution? | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector)",
    "output_sequence": "select _ from _ | select enddate , subjectsum from ed_newincreasingloan",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst"
    ]
  },
  {
    "question": "During the audit period, list the urban maintenance and construction fees and local financial expenditures in Sichuan Province over the years.",
    "sql": "select expenditurecitymc, operatingexpensescesh from ed_financialbalance where province ='Sichuan';",
    "norm_sql": "select expenditurecitymc , operatingexpensescesh from ed_financialbalance where province = 'Sichuan'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "province(province and city)",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "enddate(deadline)",
          "socialsecurity(social security expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "expenditurecitymc",
          "province",
          "localgovexpenditure",
          "operatingexpensescesh",
          "localgovrevenue",
          "enddate",
          "socialsecurity"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistics interval)",
          "reportarea(statistical region category)",
          "province(province and city)",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "rmbloans(rmb loans (in 100 million rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "reportarea",
          "province",
          "socialfinancing",
          "rmbloans"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "During the audit period, list the urban maintenance and construction fees and local financial expenditures in Sichuan Province over the years. | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ where _ | select expenditurecitymc , operatingexpensescesh from ed_financialbalance where province = 'Sichuan'",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.province",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.enddate",
      "ed_financialbalance.socialsecurity",
      "ed_socialfinancing.*",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.id",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.province",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.rmbloans",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "Provide Engineer Wang with the record of China's export amount reaching 40 million over the past ten years and the year-on-year growth rate of exports, including time, import amount, and export amount.",
    "sql": "select enddate, imvalueofgoods, exvalueofgoods from ed_exportimport where gyoyofexvaluegoods > 0 and exvalueofgoods > 40 and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-10 year'));",
    "norm_sql": "select enddate , imvalueofgoods , exvalueofgoods from ed_exportimport where gyoyofexvaluegoods > 0 and exvalueofgoods > 40 and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "enddate(deadline)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "gyoyofexvaluegoods",
          "enddate",
          "exvalueofgoods",
          "imvalueofgoods",
          "gyoyofimvaluegoods",
          "eximvalueofgoods",
          "gyoyofeximvaluegoods"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indexvalue(index value (points))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "indexname",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Provide Engineer Wang with the record of China's export amount reaching 40 million over the past ten years and the year-on-year growth rate of exports, including time, import amount, and export amount. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , imvalueofgoods , exvalueofgoods from ed_exportimport where gyoyofexvaluegoods > 0 and exvalueofgoods > 40 and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.enddate",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.indexvalue"
    ]
  },
  {
    "question": "Can you help me list the names of the top ten provinces and cities in terms of the gross domestic product of the primary industry in the past year?",
    "sql": "select province from ed_grossdomesticproduct where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year')) order by primaryindustrygdp desc limit 10;",
    "norm_sql": "select province from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) order by primaryindustrygdp desc limit 10",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) order by _ desc limit _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "province(province and city)",
          "enddate(deadline)",
          "gdp(gross domestic product (in million of rmb).)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))"
        ],
        "column_names_original_en": [
          "primaryindustrygdp",
          "province",
          "enddate",
          "gdp",
          "secondindustrygdp",
          "thirdindustrygdp",
          "gdppercapita"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "enddate(deadline)",
          "city(city)",
          "county(county)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "reportarea(statistical category of region)",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "enddate",
          "city",
          "county",
          "id",
          "reportperiod",
          "reportarea",
          "province"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you help me list the names of the top ten provinces and cities in terms of the gross domestic product of the primary industry in the past year? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) order by _ desc limit _ | select province from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) order by primaryindustrygdp desc limit 10",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.id",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.province",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded"
    ]
  },
  {
    "question": "Can you help me take a look at the detailed information of total liability in our historical data, sorted in descending order according to the total liability amount?",
    "sql": "select enddate, totalliability from ed_moneyauthoritybs order by totalliability desc;",
    "norm_sql": "select enddate , totalliability from ed_moneyauthoritybs order by totalliability desc",
    "sql_skeleton": "select _ from _ order by _ desc",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "totalliability(total liabilities (in million of rmb))",
          "enddate(deadline)",
          "totalassets(total assets (in million of rmb).)",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "forex(foreign exchange (in million of rmb))"
        ],
        "column_names_original_en": [
          "totalliability",
          "enddate",
          "totalassets",
          "claimtootherfinnonfininst",
          "claimtononfinancialinst",
          "nonfinancialorgdeposits",
          "forex"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "totalliabilities(total liabilities)",
          "claimsongovernment(claims on government (net))",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "otherliabilities(other liabilities)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)"
        ],
        "column_names_original_en": [
          "enddate",
          "totalliabilities",
          "claimsongovernment",
          "liabtootherdepositcorp",
          "otherliabilities",
          "reserveassets",
          "depositswithcentralbank"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "totalsavings(all deposit accounts)",
          "totalloans(various loans)",
          "loantogov(financial borrowing)",
          "financedeposits(financial deposit)",
          "othersavings(other deposits)",
          "savingsdeposits(savings deposits)"
        ],
        "column_names_original_en": [
          "enddate",
          "totalsavings",
          "totalloans",
          "loantogov",
          "financedeposits",
          "othersavings",
          "savingsdeposits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you help me take a look at the detailed information of total liability in our historical data, sorted in descending order according to the total liability amount? | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits)",
    "output_sequence": "select _ from _ order by _ desc | select enddate , totalliability from ed_moneyauthoritybs order by totalliability desc",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.forex",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.savingsdeposits"
    ]
  },
  {
    "question": "Can you quickly find the data for the amount of financial bonds, shares and other investments in the income and expenditure of financial institutions in China?",
    "sql": "select financialbonds, sharesandotherinvestments from ed_chinafibalancesheetrmb;",
    "norm_sql": "select financialbonds , sharesandotherinvestments from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "sharesandotherinvestments(equity and other investments)",
          "financialbonds(financial bonds)",
          "equityandotherinvestment(securities and investments)",
          "totalsavings(all deposit accounts)",
          "totalloans(various loans)",
          "loantogov(financial borrowing)",
          "assetsatifo(asset in international financial institutions)"
        ],
        "column_names_original_en": [
          "sharesandotherinvestments",
          "financialbonds",
          "equityandotherinvestment",
          "totalsavings",
          "totalloans",
          "loantogov",
          "assetsatifo"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "reportarea(statistical area category)",
          "province(province and city)",
          "commercialtax(business tax revenue (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "reportarea",
          "province",
          "commercialtax",
          "valueaddedtax"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you quickly find the data for the amount of financial bonds, shares and other investments in the income and expenditure of financial institutions in China? | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb))",
    "output_sequence": "select _ from _ | select financialbonds , sharesandotherinvestments from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.id",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.province",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.valueaddedtax"
    ]
  },
  {
    "question": "Please help me check the annual GDP and per capita GDP data of Shandong Province.",
    "sql": "select gdp, gdppercapita from ed_grossdomesticproduct where province ='Shandong';",
    "norm_sql": "select gdp , gdppercapita from ed_grossdomesticproduct where province = 'Shandong'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdppercapita(per capita gross domestic product (cny/person))",
          "gdp(gross domestic product (in million of rmb).)",
          "province(province and city)",
          "enddate(deadline)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "gdppercapita",
          "gdp",
          "province",
          "enddate",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "reportarea(statistical area category)",
          "province(province and city)",
          "commercialtax(business tax revenue (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "reportarea",
          "province",
          "commercialtax",
          "valueaddedtax"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me check the annual GDP and per capita GDP data of Shandong Province. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ where _ | select gdp , gdppercapita from ed_grossdomesticproduct where province = 'Shandong'",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.id",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.province",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.valueaddedtax",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "In recent years, what is the end-of-period cumulative industrial production value of light industry in \"national\" scope, \"state-owned and above-scale industrial enterprises\"?",
    "sql": "select enddate, livalueap from ed_industryproduction where reportarea = 'national' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'end-of-period cumulative';",
    "norm_sql": "select enddate , livalueap from ed_industryproduction where reportarea = 'national' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'end-of-period cumulative'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "reportarea(statistical area category)",
          "statstandard(statistical caliber)",
          "reportperiod(data statistics interval)",
          "livalueap(light industry (in million of rmb))",
          "enddate(deadline)",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "largecomap(large-scale enterprise (light industry))"
        ],
        "column_names_original_en": [
          "reportarea",
          "statstandard",
          "reportperiod",
          "livalueap",
          "enddate",
          "stateownedcontrolledcomap",
          "largecomap"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp",
          "province",
          "gdp"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "id",
          "reportperiod",
          "indextype",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In recent years, what is the end-of-period cumulative industrial production value of light industry in \"national\" scope, \"state-owned and above-scale industrial enterprises\"? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name)",
    "output_sequence": "select _ from _ where _ | select enddate , livalueap from ed_industryproduction where reportarea = 'national' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'end-of-period cumulative'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.enddate",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.largecomap",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname"
    ]
  },
  {
    "question": "Can you show the annual retail data of social consumer goods for joint ventures and self-employed units in Zhejiang province?",
    "sql": "select jointventures, selfemployed from ed_retailvalueofscgoods where province='Zhejiang' and reportperiod='annual';",
    "norm_sql": "select jointventures , selfemployed from ed_retailvalueofscgoods where province = 'Zhejiang' and reportperiod = 'annual'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "jointventures(joint operating unit)",
          "selfemployed(individual unit)",
          "province(province and city)",
          "reportperiod(data statistical period)",
          "collectiveunits(collective unit)",
          "enddate(deadline)",
          "stateownedunits(state-owned unit)"
        ],
        "column_names_original_en": [
          "jointventures",
          "selfemployed",
          "province",
          "reportperiod",
          "collectiveunits",
          "enddate",
          "stateownedunits"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "reportarea(statistical area category)",
          "province(province and city)",
          "commercialtax(business tax revenue (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "reportarea",
          "province",
          "commercialtax",
          "valueaddedtax"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you show the annual retail data of social consumer goods for joint ventures and self-employed units in Zhejiang province? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select jointventures , selfemployed from ed_retailvalueofscgoods where province = 'Zhejiang' and reportperiod = 'annual'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.id",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.province",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.valueaddedtax",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp"
    ]
  },
  {
    "question": "Help me find the data. Hey, can you please take a look at the amount of commodity exports and the year-on-year increase/decrease in commodity exports in our country last year?",
    "sql": "select exvalueofgoods, gyoyofexvaluegoods from ed_exportimport where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year'));",
    "norm_sql": "select exvalueofgoods , gyoyofexvaluegoods from ed_exportimport where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "enddate(deadline)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "commodity(product name)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "enddate",
          "gyoyofexvaluegoods",
          "exvalueofgoods",
          "imvalueofgoods",
          "gyoyofeximvaluegoods",
          "commodity",
          "eximvalueofgoods"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help me find the data. Hey, can you please take a look at the amount of commodity exports and the year-on-year increase/decrease in commodity exports in our country last year? | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector)",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) | select exvalueofgoods , gyoyofexvaluegoods from ed_exportimport where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.enddate",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.commodity",
      "ed_exportimport.eximvalueofgoods",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst"
    ]
  },
  {
    "question": "Hey, what is the per capita gross domestic product of our country in recent years?",
    "sql": "select gdppercapita from ed_grossdomesticproduct ;",
    "norm_sql": "select gdppercapita from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdppercapita(per capita gross domestic product (cny/person))",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "enddate(deadline)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "gdppercapita",
          "province",
          "gdp",
          "enddate",
          "thirdindustrygdp",
          "primaryindustrygdp",
          "secondindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "id(record identifier)",
          "effectivedate(effective date)",
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "secumarket(securities market)",
          "maturity(repurchase period)",
          "basiscode(billing baseline)"
        ],
        "column_names_original_en": [
          "id",
          "effectivedate",
          "itemname",
          "typename",
          "secumarket",
          "maturity",
          "basiscode"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hey, what is the per capita gross domestic product of our country in recent years? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).basiscode(billing baseline)",
    "output_sequence": "select _ from _ | select gdppercapita from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_taxrate.*",
      "ed_taxrate.id",
      "ed_taxrate.effectivedate",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.maturity",
      "ed_taxrate.basiscode"
    ]
  },
  {
    "question": "What is the amount of reserve deposits and cash in vault from 2008 to present, in the data table of other deposit-taking company's balance sheet?",
    "sql": "select enddate, depositswithcentralbank, cashinvault from ed_otherdepositorycorpbs where strftime('%Y', enddate)>='2008';",
    "norm_sql": "select enddate , depositswithcentralbank , cashinvault from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) >= '2008'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) >= _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "cashinvault(cash on hand)",
          "depositswithcentralbank(reserve deposit)",
          "enddate(deadline)",
          "reserveassets(reserve assets)",
          "demanddeposits(current deposits for enterprises)",
          "claimsongovernment(claims on government (net))",
          "liabilitiestocentralbank(liabilities to the central bank.)"
        ],
        "column_names_original_en": [
          "cashinvault",
          "depositswithcentralbank",
          "enddate",
          "reserveassets",
          "demanddeposits",
          "claimsongovernment",
          "liabilitiestocentralbank"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "reservedeposits(deposit of reserve funds)",
          "id(record identifier)",
          "datatype(data type code)",
          "currencyname(currency unit code)",
          "totalsavings(all deposit accounts)",
          "corporatesavings(unit deposit/corporate deposit)"
        ],
        "column_names_original_en": [
          "enddate",
          "reservedeposits",
          "id",
          "datatype",
          "currencyname",
          "totalsavings",
          "corporatesavings"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "forex",
          "moneyandgold",
          "otherforeignassets",
          "claimtogovernment",
          "claimtosavingsbanks"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the amount of reserve deposits and cash in vault from 2008 to present, in the data table of other deposit-taking company's balance sheet? | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) >= _ | select enddate , depositswithcentralbank , cashinvault from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) >= '2008'",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks"
    ]
  },
  {
    "question": "I want to understand the data situation. Can you help me check the size of the wholesale retail trade industry?",
    "sql": "select wholesaleretailtrade from ed_retailvalueofscgoods;",
    "norm_sql": "select wholesaleretailtrade from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "reportarea(statistical category of region)",
          "province(province and city)",
          "enddate(deadline)",
          "city(city)",
          "county(county)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "wholesaleretailtrade",
          "reportarea",
          "province",
          "enddate",
          "city",
          "county",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "qoqcpi(resident consumer price index (month-on-month))",
          "yoycpi(resident consumer price index (year-on-year))",
          "cumcpi(cumulative average of resident consumer price index)",
          "qoqcpifood(food price month-on-month)",
          "yoycpifood(food year-on-year)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "qoqcpi",
          "yoycpi",
          "cumcpi",
          "qoqcpifood",
          "yoycpifood"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to understand the data situation. Can you help me check the size of the wholesale retail trade industry? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).enddate(deadline) , ed_consumerpriceindex(consumer price index).id(record identifier) , ed_consumerpriceindex(consumer price index).qoqcpi(resident consumer price index (month-on-month)) , ed_consumerpriceindex(consumer price index).yoycpi(resident consumer price index (year-on-year)) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).qoqcpifood(food price month-on-month) , ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ | select wholesaleretailtrade from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.enddate",
      "ed_consumerpriceindex.id",
      "ed_consumerpriceindex.qoqcpi",
      "ed_consumerpriceindex.yoycpi",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.qoqcpifood",
      "ed_consumerpriceindex.yoycpifood",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "Hello, please help me check the total Gross Domestic Product (GDP) and per capita GDP amount in Shandong Province over the past five years.",
    "sql": "select gdp, gdppercapita from ed_grossdomesticproduct where province='Shandong' and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-5 year'));",
    "norm_sql": "select gdp , gdppercapita from ed_grossdomesticproduct where province = 'Shandong' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-5 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdp(gross domestic product (in million of rmb).)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "enddate(deadline)",
          "province(province and city)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)"
        ],
        "column_names_original_en": [
          "gdp",
          "gdppercapita",
          "enddate",
          "province",
          "thirdindustrygdp",
          "primaryindustrygdp",
          "gdpgrowthyoy"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hello, please help me check the total Gross Domestic Product (GDP) and per capita GDP amount in Shandong Province over the past five years. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select gdp , gdppercapita from ed_grossdomesticproduct where province = 'Shandong' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-5 year' ) )",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded"
    ]
  },
  {
    "question": "How much is the amount of deposits included in the broad money in the balance sheet of other depository corporations? Thank you.",
    "sql": "select depositsincludedinm2 from ed_otherdepositorycorpbs;",
    "norm_sql": "select depositsincludedinm2 from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "depositsexcludedfromm2(deposits not included in broad money)",
          "demanddeposits(current deposits for enterprises)",
          "transferabledeposits(transferable deposits)",
          "enddate(deadline)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "depositsincludedinm2",
          "depositsexcludedfromm2",
          "demanddeposits",
          "transferabledeposits",
          "enddate",
          "liabilitiestocentralbank",
          "claimsongovernment"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "datatype(data type code)",
          "currencyname(currency unit code)",
          "totalsavings(all deposit accounts)",
          "corporatesavings(unit deposit/corporate deposit)",
          "financedeposits(financial deposit)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "datatype",
          "currencyname",
          "totalsavings",
          "corporatesavings",
          "financedeposits"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How much is the amount of deposits included in the broad money in the balance sheet of other depository corporations? Thank you. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) , ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector)",
    "output_sequence": "select _ from _ | select depositsincludedinm2 from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst"
    ]
  },
  {
    "question": "Please display the annual value of industrial production for the light industry in \"China\" \"state-owned and above-scale industrial enterprises\" over the years.",
    "sql": "select enddate, livalueap from ed_industryproduction where reportarea = 'China' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'annual';",
    "norm_sql": "select enddate , livalueap from ed_industryproduction where reportarea = 'China' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'annual'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "statstandard(statistical caliber)",
          "reportarea(statistical area category)",
          "livalueap(light industry (in million of rmb))",
          "enddate(deadline)",
          "reportperiod(data statistics interval)",
          "province(province)",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))"
        ],
        "column_names_original_en": [
          "statstandard",
          "reportarea",
          "livalueap",
          "enddate",
          "reportperiod",
          "province",
          "stateownedcontrolledcomap"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "id",
          "reportperiod",
          "indextype",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please display the annual value of industrial production for the light industry in \"China\" \"state-owned and above-scale industrial enterprises\" over the years. | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name)",
    "output_sequence": "select _ from _ where _ | select enddate , livalueap from ed_industryproduction where reportarea = 'China' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'annual'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.province",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname"
    ]
  },
  {
    "question": "Help Teacher Li to check the general index value of \"Durable Consumer Goods\" in the \"Industrial Structure Classification Index\" for the \"Previous Year Same Period.\"",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod ='Previous Year Same Period' and indextype ='Industrial Structure Classification Index' and indexname ='Durable Consumer Goods';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'Previous Year Same Period' and indextype = 'Industrial Structure Classification Index' and indexname = 'Durable Consumer Goods'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indexvalue(index value (points))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "indexname",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help Teacher Li to check the general index value of \"Durable Consumer Goods\" in the \"Industrial Structure Classification Index\" for the \"Previous Year Same Period.\" | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points))",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'Previous Year Same Period' and indextype = 'Industrial Structure Classification Index' and indexname = 'Durable Consumer Goods'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.indexvalue"
    ]
  },
  {
    "question": "Please query the total amount of retail sales of consumer goods for the past three years in each province and city in China.",
    "sql": "select enddate, retailvalueofscgoods from ed_retailvalueofscgoods where reportarea='Province/City' and reportperiod='Year-end cumulative' and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select enddate , retailvalueofscgoods from ed_retailvalueofscgoods where reportarea = 'Province/City' and reportperiod = 'Year-end cumulative' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "enddate(deadline)",
          "province(province and city)",
          "reportperiod(data statistical period)",
          "reportarea(statistical category of region)",
          "city(city)",
          "county(county)"
        ],
        "column_names_original_en": [
          "retailvalueofscgoods",
          "enddate",
          "province",
          "reportperiod",
          "reportarea",
          "city",
          "county"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please query the total amount of retail sales of consumer goods for the past three years in each province and city in China. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , retailvalueofscgoods from ed_retailvalueofscgoods where reportarea = 'Province/City' and reportperiod = 'Year-end cumulative' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.county",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "What is the highest percentage of \"excess reserve requirement ratio\" for \"large Chinese banks\"?",
    "sql": "select ratioceiling from ed_taxrate where typename ='large Chinese banks' and itemname = 'excess reserve requirement ratio';",
    "norm_sql": "select ratioceiling from ed_taxrate where typename = 'large Chinese banks' and itemname = 'excess reserve requirement ratio'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "ratioceiling(maximum ratio (%))",
          "itemname(tax rate items)",
          "ratiofloor(minimum ratio (%))",
          "valuefloor(minimum value/starting point (rmb))",
          "valueceiling(maximum value (rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "typename",
          "ratioceiling",
          "itemname",
          "ratiofloor",
          "valuefloor",
          "valueceiling",
          "id"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "effectivedate(effective date)",
          "drrtype(reserve requirement ratio category)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "id",
          "effectivedate",
          "drrtype",
          "ratiofloor",
          "ratioceiling"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the highest percentage of \"excess reserve requirement ratio\" for \"large Chinese banks\"? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).id(record identifier) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%))",
    "output_sequence": "select _ from _ where _ | select ratioceiling from ed_taxrate where typename = 'large Chinese banks' and itemname = 'excess reserve requirement ratio'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.itemname",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.valuefloor",
      "ed_taxrate.valueceiling",
      "ed_taxrate.id",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.ratioceiling"
    ]
  },
  {
    "question": "Quickly find the data. Where are the records for \"Metallurgical Industry\"? Please display the related statistical periods, index values, and the index types it belongs to.",
    "sql": "select reportperiod, indextype, indexvalue from ed_producerpiformp where indexname='Metallurgical Industry';",
    "norm_sql": "select reportperiod , indextype , indexvalue from ed_producerpiformp where indexname = 'Metallurgical Industry'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "id",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "statstandard(statistical caliber)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "statstandard",
          "id",
          "reportarea",
          "reportperiod",
          "industrialvalueadded"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indexvalue(index value (points))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "indexname",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Quickly find the data. Where are the records for \"Metallurgical Industry\"? Please display the related statistical periods, index values, and the index types it belongs to. | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points))",
    "output_sequence": "select _ from _ where _ | select reportperiod , indextype , indexvalue from ed_producerpiformp where indexname = 'Metallurgical Industry'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.industrialvalueadded",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.indexvalue"
    ]
  },
  {
    "question": "Please help Wang Gong check the \"end-of-period accumulated\" industrial output value amount of \"national\" \"all industrial enterprises,\" and remember to include the time.",
    "sql": "select enddate, industrialoutputvalueap from ed_industryproduction where reportarea ='national' and statstandard ='all industrial enterprises' and reportperiod ='end-of-period accumulated';",
    "norm_sql": "select enddate , industrialoutputvalueap from ed_industryproduction where reportarea = 'national' and statstandard = 'all industrial enterprises' and reportperiod = 'end-of-period accumulated'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "enddate(deadline)",
          "reportarea(statistical area category)",
          "province(province)",
          "livalueap(light industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "statstandard",
          "industrialoutputvalueap",
          "enddate",
          "reportarea",
          "province",
          "livalueap"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "id",
          "reportperiod",
          "indextype",
          "indexname"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help Wang Gong check the \"end-of-period accumulated\" industrial output value amount of \"national\" \"all industrial enterprises,\" and remember to include the time. | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select enddate , industrialoutputvalueap from ed_industryproduction where reportarea = 'national' and statstandard = 'all industrial enterprises' and reportperiod = 'end-of-period accumulated'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.province",
      "ed_industryproduction.livalueap",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp"
    ]
  },
  {
    "question": "Can you provide the records of import amount data and import year-on-year growth rate from 10 years ago in our country?",
    "sql": "select enddate ,imvalueofgoods , gyoyofimvaluegoods from ed_exportimport where strftime('%Y', enddate) < strftime('%Y', DATE('now', '-10 year'));",
    "norm_sql": "select enddate , imvalueofgoods , gyoyofimvaluegoods from ed_exportimport where strftime ( '%Y' , enddate ) < strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) < strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "enddate(deadline)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "commodity(product name)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "gyoyofimvaluegoods",
          "enddate",
          "imvalueofgoods",
          "exvalueofgoods",
          "eximvalueofgoods",
          "commodity",
          "id"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you provide the records of import amount data and import year-on-year growth rate from 10 years ago in our country? | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).id(record identifier) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector)",
    "output_sequence": "select _ from _ where strftime ( _ ) < strftime ( _ , date ( _ ) ) | select enddate , imvalueofgoods , gyoyofimvaluegoods from ed_exportimport where strftime ( '%Y' , enddate ) < strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.enddate",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.commodity",
      "ed_exportimport.id",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst"
    ]
  },
  {
    "question": "What is the amount of our most recent registered domestic credit?",
    "sql": "select domesticloans from ed_chinamoneyandbanking order by enddate desc limit 1;",
    "norm_sql": "select domesticloans from ed_chinamoneyandbanking order by enddate desc limit 1",
    "sql_skeleton": "select _ from _ order by _ desc limit _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "domesticloans(domestic credit)",
          "enddate(deadline)",
          "claimstogov(claims on the government (net))",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "money1(currency (narrow money m1))",
          "bonds(bonds)",
          "fcdeposits(foreign currency deposit.)"
        ],
        "column_names_original_en": [
          "domesticloans",
          "enddate",
          "claimstogov",
          "moneyandquasimoney",
          "money1",
          "bonds",
          "fcdeposits"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "domesticloans((one) domestic loan)",
          "totalsavings(all deposit accounts)",
          "totalloans(various loans)",
          "moneyincirculation(currency in circulation)",
          "currencyname(currency unit code)",
          "corporatesavings(unit deposit/corporate deposit)"
        ],
        "column_names_original_en": [
          "enddate",
          "domesticloans",
          "totalsavings",
          "totalloans",
          "moneyincirculation",
          "currencyname",
          "corporatesavings"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(statistical period)",
          "subjectname(indicator name)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "subjectname",
          "subjectsum",
          "yoy"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the amount of our most recent registered domestic credit? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%))",
    "output_sequence": "select _ from _ order by _ desc limit _ | select domesticloans from ed_chinamoneyandbanking order by enddate desc limit 1",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy"
    ]
  },
  {
    "question": "I want to know the social retail sales records of our individual units in recent years.",
    "sql": "select selfemployed from ed_retailvalueofscgoods;",
    "norm_sql": "select selfemployed from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "selfemployed(individual unit)",
          "collectiveunits(collective unit)",
          "reportarea(statistical category of region)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "enddate(deadline)",
          "province(province and city)",
          "city(city)"
        ],
        "column_names_original_en": [
          "selfemployed",
          "collectiveunits",
          "reportarea",
          "retailvalueofscgoods",
          "enddate",
          "province",
          "city"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the social retail sales records of our individual units in recent years. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ | select selfemployed from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.city",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "Show the records of domestic and overseas loans in China's financial institutions' credit income and expenditure records before the year 2000, where the total loan amount exceeds 1 million. Thank you.",
    "sql": "select domesticloans, overseasloans, agriculturaldeposits from ed_chinafibalancesheetrmb where strftime('%Y', enddate)<='2000' and totalloans>1000000;",
    "norm_sql": "select domesticloans , overseasloans , agriculturaldeposits from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) <= '2000' and totalloans > 1000000",
    "sql_skeleton": "select _ from _ where strftime ( _ ) <= _ and _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "domesticloans((one) domestic loan)",
          "overseasloans((two) overseas loans)",
          "enddate(deadline)",
          "totalloans(various loans)",
          "totalsavings(all deposit accounts)",
          "mediumlongtermloans(medium-to-long term loans)",
          "datatype(data type code)"
        ],
        "column_names_original_en": [
          "domesticloans",
          "overseasloans",
          "enddate",
          "totalloans",
          "totalsavings",
          "mediumlongtermloans",
          "datatype"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "subjectname(indicator name)",
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "subjectsum",
          "subjectname",
          "id",
          "yoy"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "domesticloans(domestic credit)",
          "fcdeposits(foreign currency deposit.)",
          "netabroadassets(foreign net assets)",
          "claimstogov(claims on the government (net))",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "domesticloans",
          "fcdeposits",
          "netabroadassets",
          "claimstogov",
          "moneyandquasimoney"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Show the records of domestic and overseas loans in China's financial institutions' credit income and expenditure records before the year 2000, where the total loan amount exceeds 1 million. Thank you. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2))",
    "output_sequence": "select _ from _ where strftime ( _ ) <= _ and _ | select domesticloans , overseasloans , agriculturaldeposits from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) <= '2000' and totalloans > 1000000",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.moneyandquasimoney"
    ]
  },
  {
    "question": "Please provide the total retail sales of consumer goods in Jiangsu province since records have been kept.",
    "sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province='Jiangsu';",
    "norm_sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Jiangsu'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "province(province and city)",
          "enddate(deadline)",
          "reportarea(statistical category of region)",
          "city(city)",
          "county(county)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "retailvalueofscgoods",
          "province",
          "enddate",
          "reportarea",
          "city",
          "county",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "reportarea(statistical area category)",
          "province(province and city)",
          "commercialtax(business tax revenue (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "reportarea",
          "province",
          "commercialtax",
          "valueaddedtax"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please provide the total retail sales of consumer goods in Jiangsu province since records have been kept. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Jiangsu'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.id",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.province",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.valueaddedtax"
    ]
  },
  {
    "question": "Show the respective amounts of unit deposits and fiscal deposits in the financial institutions' credit and deposit transactions in China in 2004.",
    "sql": "select corporatesavings, financedeposits from ed_chinafibalancesheetrmb where strftime('%Y', enddate)='2004';",
    "norm_sql": "select corporatesavings , financedeposits from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) = '2004'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "financedeposits(financial deposit)",
          "enddate(deadline)",
          "corporatesavings(unit deposit/corporate deposit)",
          "totalsavings(all deposit accounts)",
          "loantogov(financial borrowing)",
          "currencyname(currency unit code)",
          "datatype(data type code)"
        ],
        "column_names_original_en": [
          "financedeposits",
          "enddate",
          "corporatesavings",
          "totalsavings",
          "loantogov",
          "currencyname",
          "datatype"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Show the respective amounts of unit deposits and fiscal deposits in the financial institutions' credit and deposit transactions in China in 2004. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select corporatesavings , financedeposits from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) = '2004'",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded"
    ]
  },
  {
    "question": "Which years in Jiangsu Province had local government revenue exceeding 100 million yuan and local government expenditure less than 100 million yuan?",
    "sql": "select enddate from ed_financialbalance where province ='Jiangsu' and localgovrevenue > 100 and localgovexpenditure < 100;",
    "norm_sql": "select enddate from ed_financialbalance where province = 'Jiangsu' and localgovrevenue > 100 and localgovexpenditure < 100",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "province(province and city)",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "enddate(deadline)",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "commercialtax(business tax revenue (in million of rmb))",
          "salestax(business tax (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "localgovexpenditure",
          "enddate",
          "localgovrevenue",
          "commercialtax",
          "salestax",
          "valueaddedtax"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Which years in Jiangsu Province had local government revenue exceeding 100 million yuan and local government expenditure less than 100 million yuan? | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector)",
    "output_sequence": "select _ from _ where _ | select enddate from ed_financialbalance where province = 'Jiangsu' and localgovrevenue > 100 and localgovexpenditure < 100",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.province",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.enddate",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.salestax",
      "ed_financialbalance.valueaddedtax",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst"
    ]
  },
  {
    "question": "What is the amount of specific deposit institution claims and claims to other financial non-financial institutions in the central bank's balance sheet?",
    "sql": "select claimtosavingsinst , claimtootherfinnonfininst from ed_moneyauthoritybs;",
    "norm_sql": "select claimtosavingsinst , claimtootherfinnonfininst from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "enddate(deadline)",
          "claimtogovernment(claims on the government (in million of rmb))"
        ],
        "column_names_original_en": [
          "claimtootherfinnonfininst",
          "claimtononfinancialinst",
          "claimtosavingsinst",
          "claimtosavingsbanks",
          "nonfinancialorgdeposits",
          "enddate",
          "claimtogovernment"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "claimsoncentralbank(claims on central bank)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)"
        ],
        "column_names_original_en": [
          "enddate",
          "claimsoncentralbank",
          "claimsonotherfinstitute",
          "claimsonothernfinstitute",
          "id",
          "foreignassets",
          "reserveassets"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "domesticloans(domestic credit)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "domesticloans",
          "claimstononfinancialinst",
          "claimstospecificsavingorg",
          "claimstootherinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the amount of specific deposit institution claims and claims to other financial non-financial institutions in the central bank's balance sheet? | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
    "output_sequence": "select _ from _ | select claimtosavingsinst , claimtootherfinnonfininst from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.claimstootherinst"
    ]
  },
  {
    "question": "Please briefly check the index value of \"Living Expenses - Food\" in our \"Industrial Structure Classification Index\" for the \"Same Period Last Year\".",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod ='Same Period Last Year' and indextype ='Industrial Structure Classification Index' and indexname ='Living Expenses - Food';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'Same Period Last Year' and indextype = 'Industrial Structure Classification Index' and indexname = 'Living Expenses - Food'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "qoqcpi(resident consumer price index (month-on-month))",
          "yoycpi(resident consumer price index (year-on-year))",
          "cumcpi(cumulative average of resident consumer price index)",
          "qoqcpifood(food price month-on-month)",
          "yoycpifood(food year-on-year)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "qoqcpi",
          "yoycpi",
          "cumcpi",
          "qoqcpifood",
          "yoycpifood"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please briefly check the index value of \"Living Expenses - Food\" in our \"Industrial Structure Classification Index\" for the \"Same Period Last Year\". | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).enddate(deadline) , ed_consumerpriceindex(consumer price index).id(record identifier) , ed_consumerpriceindex(consumer price index).qoqcpi(resident consumer price index (month-on-month)) , ed_consumerpriceindex(consumer price index).yoycpi(resident consumer price index (year-on-year)) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).qoqcpifood(food price month-on-month) , ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'Same Period Last Year' and indextype = 'Industrial Structure Classification Index' and indexname = 'Living Expenses - Food'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.enddate",
      "ed_consumerpriceindex.id",
      "ed_consumerpriceindex.qoqcpi",
      "ed_consumerpriceindex.yoycpi",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.qoqcpifood",
      "ed_consumerpriceindex.yoycpifood",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "Show the latest record in the balance sheet of other deposit-taking companies where the total assets exceed 50 million, and list the specific amounts of total assets, total liabilities, foreign assets, and foreign liabilities.",
    "sql": "select enddate, totalassets, totalliabilities, foreignassets, foreignliabilities from ed_otherdepositorycorpbs where totalassets > 50000000 order by enddate desc limit 1;",
    "norm_sql": "select enddate , totalassets , totalliabilities , foreignassets , foreignliabilities from ed_otherdepositorycorpbs where totalassets > 50000000 order by enddate desc limit 1",
    "sql_skeleton": "select _ from _ where _ order by _ desc limit _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "foreignassets(foreign net assets)",
          "totalassets(total assets)",
          "foreignliabilities(foreign liabilities)",
          "totalliabilities(total liabilities)",
          "enddate(deadline)",
          "reserveassets(reserve assets)",
          "depositsincludedinm2(inclusion of broad money deposits.)"
        ],
        "column_names_original_en": [
          "foreignassets",
          "totalassets",
          "foreignliabilities",
          "totalliabilities",
          "enddate",
          "reserveassets",
          "depositsincludedinm2"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "forex",
          "moneyandgold",
          "otherforeignassets",
          "claimtogovernment",
          "claimtosavingsbanks"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Show the latest record in the balance sheet of other deposit-taking companies where the total assets exceed 50 million, and list the specific amounts of total assets, total liabilities, foreign assets, and foreign liabilities. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector)",
    "output_sequence": "select _ from _ where _ order by _ desc limit _ | select enddate , totalassets , totalliabilities , foreignassets , foreignliabilities from ed_otherdepositorycorpbs where totalassets > 50000000 order by enddate desc limit 1",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.foreignliabilities",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst"
    ]
  },
  {
    "question": "Do you know the minimum ratio of \"Excess Deposit Reserve Requirement Rate\" for \"Rural Credit Cooperatives\"?",
    "sql": "select ratiofloor from ed_taxrate where typename ='Rural Credit Cooperatives' and itemname ='Excess Deposit Reserve Requirement Rate';",
    "norm_sql": "select ratiofloor from ed_taxrate where typename = 'Rural Credit Cooperatives' and itemname = 'Excess Deposit Reserve Requirement Rate'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "ratiofloor(minimum ratio (%))",
          "itemname(tax rate items)",
          "ratioceiling(maximum ratio (%))",
          "valuefloor(minimum value/starting point (rmb))",
          "valueceiling(maximum value (rmb))",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "typename",
          "ratiofloor",
          "itemname",
          "ratioceiling",
          "valuefloor",
          "valueceiling",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "effectivedate(effective date)",
          "drrtype(reserve requirement ratio category)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "id",
          "effectivedate",
          "drrtype",
          "ratiofloor",
          "ratioceiling"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "datatype(data type code)",
          "currencyname(currency unit code)",
          "totalsavings(all deposit accounts)",
          "corporatesavings(unit deposit/corporate deposit)",
          "financedeposits(financial deposit)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "datatype",
          "currencyname",
          "totalsavings",
          "corporatesavings",
          "financedeposits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Do you know the minimum ratio of \"Excess Deposit Reserve Requirement Rate\" for \"Rural Credit Cooperatives\"? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).effectivedate(effective date) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit)",
    "output_sequence": "select _ from _ where _ | select ratiofloor from ed_taxrate where typename = 'Rural Credit Cooperatives' and itemname = 'Excess Deposit Reserve Requirement Rate'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.itemname",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valuefloor",
      "ed_taxrate.valueceiling",
      "ed_taxrate.effectivedate",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.ratioceiling",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.financedeposits"
    ]
  },
  {
    "question": "What is the total amount of retail sales of social consumer goods for collective units?",
    "sql": "select collectiveunits from ed_retailvalueofscgoods;",
    "norm_sql": "select collectiveunits from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "collectiveunits(collective unit)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "reportarea(statistical category of region)",
          "province(province and city)",
          "enddate(deadline)",
          "city(city)",
          "county(county)"
        ],
        "column_names_original_en": [
          "collectiveunits",
          "retailvalueofscgoods",
          "reportarea",
          "province",
          "enddate",
          "city",
          "county"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the total amount of retail sales of social consumer goods for collective units? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb))",
    "output_sequence": "select _ from _ | select collectiveunits from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.county",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded"
    ]
  },
  {
    "question": "Please check the data before the year 2000, where the export amount exceeds 20 million and the year-on-year export growth is greater than 0. List the import amount and the year-on-year import growth.",
    "sql": "select imvalueofgoods, gyoyofimvaluegoods from ed_exportimport where gyoyofexvaluegoods > 0 and exvalueofgoods > 20 and strftime('%Y', enddate)<'2000';",
    "norm_sql": "select imvalueofgoods , gyoyofimvaluegoods from ed_exportimport where gyoyofexvaluegoods > 0 and exvalueofgoods > 20 and strftime ( '%Y' , enddate ) < '2000'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) < _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "enddate(deadline)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "gyoyofexvaluegoods",
          "gyoyofimvaluegoods",
          "enddate",
          "exvalueofgoods",
          "imvalueofgoods",
          "eximvalueofgoods",
          "gyoyofeximvaluegoods"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "money1(currency (narrow money m1))"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "domesticloans",
          "claimstogov",
          "moneyandquasimoney",
          "money1"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "gdpgrowthyoy",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please check the data before the year 2000, where the export amount exceeds 20 million and the year-on-year export growth is greater than 0. List the import amount and the year-on-year import growth. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) < _ | select imvalueofgoods , gyoyofimvaluegoods from ed_exportimport where gyoyofexvaluegoods > 0 and exvalueofgoods > 20 and strftime ( '%Y' , enddate ) < '2000'",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.enddate",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.money1",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp"
    ]
  },
  {
    "question": "Please display the annual statistical data of the total retail sales of social consumer goods in Tianjin.",
    "sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province ='Tianjin' and reportperiod ='Annual';",
    "norm_sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Tianjin' and reportperiod = 'Annual'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "province(province and city)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "city(city)",
          "reportarea(statistical category of region)",
          "county(county)"
        ],
        "column_names_original_en": [
          "province",
          "retailvalueofscgoods",
          "reportperiod",
          "enddate",
          "city",
          "reportarea",
          "county"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "reportarea(statistical area category)",
          "province(province and city)",
          "commercialtax(business tax revenue (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "reportarea",
          "province",
          "commercialtax",
          "valueaddedtax"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please display the annual statistical data of the total retail sales of social consumer goods in Tianjin. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Tianjin' and reportperiod = 'Annual'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.county",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.id",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.province",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.valueaddedtax"
    ]
  },
  {
    "question": "Please help Li Gong retrieve the index value of \"Beverage Manufacturing\" for the \"previous year same period.\"",
    "sql": "select indexvalue from ed_producerpiformp where indexname = 'Beverage Manufacturing' and reportperiod = 'previous year same period' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year'));",
    "norm_sql": "select indexvalue from ed_producerpiformp where indexname = 'Beverage Manufacturing' and reportperiod = 'previous year same period' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indexvalue(index)",
          "indextype(index category)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indexname",
          "indexvalue",
          "indextype",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "qoqcpi(resident consumer price index (month-on-month))",
          "yoycpi(resident consumer price index (year-on-year))",
          "cumcpi(cumulative average of resident consumer price index)",
          "qoqcpifood(food price month-on-month)",
          "yoycpifood(food year-on-year)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "qoqcpi",
          "yoycpi",
          "cumcpi",
          "qoqcpifood",
          "yoycpifood"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "datatype(data type code)",
          "currencyname(currency unit code)",
          "totalsavings(all deposit accounts)",
          "corporatesavings(unit deposit/corporate deposit)",
          "financedeposits(financial deposit)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "datatype",
          "currencyname",
          "totalsavings",
          "corporatesavings",
          "financedeposits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help Li Gong retrieve the index value of \"Beverage Manufacturing\" for the \"previous year same period.\" | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).enddate(deadline) , ed_consumerpriceindex(consumer price index).id(record identifier) , ed_consumerpriceindex(consumer price index).qoqcpi(resident consumer price index (month-on-month)) , ed_consumerpriceindex(consumer price index).yoycpi(resident consumer price index (year-on-year)) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).qoqcpifood(food price month-on-month) , ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select indexvalue from ed_producerpiformp where indexname = 'Beverage Manufacturing' and reportperiod = 'previous year same period' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.enddate",
      "ed_consumerpriceindex.id",
      "ed_consumerpriceindex.qoqcpi",
      "ed_consumerpriceindex.yoycpi",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.qoqcpifood",
      "ed_consumerpriceindex.yoycpifood",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.financedeposits"
    ]
  },
  {
    "question": "Li Gong wants to know the respective amounts of claims on non-financial institutions and liabilities to non-financial institutions on the balance sheet of other depositary companies this year, including the time field. Thank you.",
    "sql": "select enddate, claimsonothernfinstitute, liabilitiestonfinst from ed_otherdepositorycorpbs where strftime('%Y', enddate) = strftime('%Y', date());",
    "norm_sql": "select enddate , claimsonothernfinstitute , liabilitiestonfinst from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsonothernfinstitute(claims on non-financial institution)",
          "enddate(deadline)",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "claimsonothernfinstitute",
          "enddate",
          "liabilitiestonfinst",
          "claimsonotherfinstitute",
          "claimsonotherdepositcorp",
          "depositsincludedinm2",
          "claimsongovernment"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "forex",
          "moneyandgold",
          "otherforeignassets",
          "claimtogovernment",
          "claimtosavingsbanks"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Li Gong wants to know the respective amounts of claims on non-financial institutions and liabilities to non-financial institutions on the balance sheet of other depositary companies this year, including the time field. Thank you. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( ) ) | select enddate , claimsonothernfinstitute , liabilitiestonfinst from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( ) )",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks"
    ]
  },
  {
    "question": "Hi, can you display the types of indices in our Industrial Producer Price Index table?",
    "sql": "select indextype from ed_producerpiformp ;",
    "norm_sql": "select indextype from ed_producerpiformp",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indextype",
          "indexname",
          "indexvalue",
          "enddate",
          "id",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "basiscode(billing baseline)",
          "secumarket(securities market)",
          "maturity(repurchase period)",
          "id(record identifier)",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "basiscode",
          "secumarket",
          "maturity",
          "id",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "province(province)",
          "enddate(deadline)",
          "statstandard(statistical caliber)",
          "reportperiod(data statistics interval)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "livalueap(light industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "enddate",
          "statstandard",
          "reportperiod",
          "industrialvalueadded",
          "industrialoutputvalueap",
          "livalueap"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hi, can you display the types of indices in our Industrial Producer Price Index table? | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).effectivedate(effective date) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb))",
    "output_sequence": "select _ from _ | select indextype from ed_producerpiformp",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.basiscode",
      "ed_taxrate.secumarket",
      "ed_taxrate.maturity",
      "ed_taxrate.id",
      "ed_taxrate.effectivedate",
      "ed_industryproduction.*",
      "ed_industryproduction.province",
      "ed_industryproduction.enddate",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.livalueap"
    ]
  },
  {
    "question": "Hello, in our currency and banking system, how much is the government claim?",
    "sql": "select claimstogov from ed_chinamoneyandbanking;",
    "norm_sql": "select claimstogov from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "claimstogov(claims on the government (net))",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "money1(currency (narrow money m1))",
          "quasimoney(quasi-currency)",
          "bonds(bonds)",
          "enddate(deadline)",
          "fcdeposits(foreign currency deposit.)"
        ],
        "column_names_original_en": [
          "claimstogov",
          "moneyandquasimoney",
          "money1",
          "quasimoney",
          "bonds",
          "enddate",
          "fcdeposits"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "governmentsavings(government deposits (in million of rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "claimtogovernment",
          "claimtosavingsbanks",
          "claimtosavingsinst",
          "totalassets",
          "governmentsavings",
          "id"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "id(record identifier)",
          "effectivedate(effective date)",
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "secumarket(securities market)",
          "maturity(repurchase period)",
          "basiscode(billing baseline)"
        ],
        "column_names_original_en": [
          "id",
          "effectivedate",
          "itemname",
          "typename",
          "secumarket",
          "maturity",
          "basiscode"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hello, in our currency and banking system, how much is the government claim? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).basiscode(billing baseline)",
    "output_sequence": "select _ from _ | select claimstogov from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.id",
      "ed_taxrate.*",
      "ed_taxrate.id",
      "ed_taxrate.effectivedate",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.maturity",
      "ed_taxrate.basiscode"
    ]
  },
  {
    "question": "Help me find the data! What are the amounts of savings deposits and agricultural deposits in China's financial institution credit situation?",
    "sql": "select savingsdeposits, agriculturaldeposits from ed_chinafibalancesheetrmb;",
    "norm_sql": "select savingsdeposits , agriculturaldeposits from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "savingsdeposits(savings deposits)",
          "agriculturaldeposits(agricultural deposit)",
          "totalsavings(all deposit accounts)",
          "totalloans(various loans)",
          "datatype(data type code)",
          "enddate(deadline)",
          "financialbonds(financial bonds)"
        ],
        "column_names_original_en": [
          "savingsdeposits",
          "agriculturaldeposits",
          "totalsavings",
          "totalloans",
          "datatype",
          "enddate",
          "financialbonds"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "domesticloans(domestic credit)",
          "netabroadassets(foreign net assets)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "domesticloans",
          "netabroadassets",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(statistical period)",
          "subjectname(indicator name)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportperiod",
          "subjectname",
          "subjectsum",
          "yoy"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help me find the data! What are the amounts of savings deposits and agricultural deposits in China's financial institution credit situation? | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%))",
    "output_sequence": "select _ from _ | select savingsdeposits , agriculturaldeposits from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy"
    ]
  },
  {
    "question": "What is the total value of goods imported and exported in our customs import and export records over the years?",
    "sql": "select imvalueofgoods, exvalueofgoods from ed_exportimport;",
    "norm_sql": "select imvalueofgoods , exvalueofgoods from ed_exportimport",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "enddate(deadline)",
          "sovereigntycountry(the subject country)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "commodity(product name)"
        ],
        "column_names_original_en": [
          "imvalueofgoods",
          "exvalueofgoods",
          "eximvalueofgoods",
          "enddate",
          "sovereigntycountry",
          "gyoyofexvaluegoods",
          "commodity"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "qoqcpi(resident consumer price index (month-on-month))",
          "yoycpi(resident consumer price index (year-on-year))",
          "cumcpi(cumulative average of resident consumer price index)",
          "qoqcpifood(food price month-on-month)",
          "yoycpifood(food year-on-year)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "qoqcpi",
          "yoycpi",
          "cumcpi",
          "qoqcpifood",
          "yoycpifood"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "id",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the total value of goods imported and exported in our customs import and export records over the years? | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).commodity(product name) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).enddate(deadline) , ed_consumerpriceindex(consumer price index).id(record identifier) , ed_consumerpriceindex(consumer price index).qoqcpi(resident consumer price index (month-on-month)) , ed_consumerpriceindex(consumer price index).yoycpi(resident consumer price index (year-on-year)) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).qoqcpifood(food price month-on-month) , ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb))",
    "output_sequence": "select _ from _ | select imvalueofgoods , exvalueofgoods from ed_exportimport",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.enddate",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.commodity",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.enddate",
      "ed_consumerpriceindex.id",
      "ed_consumerpriceindex.qoqcpi",
      "ed_consumerpriceindex.yoycpi",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.qoqcpifood",
      "ed_consumerpriceindex.yoycpifood",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded"
    ]
  },
  {
    "question": "Help Teacher Li check how much our capital received, net foreign assets, and domestic loans have respectively lost in the last two years.",
    "sql": "select capitalreceived, netabroadassets, domesticloans from ed_chinamoneyandbanking where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select capitalreceived , netabroadassets , domesticloans from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "capitalreceived(paid-up capital)",
          "enddate(deadline)",
          "claimstogov(claims on the government (net))",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "money1(currency (narrow money m1))"
        ],
        "column_names_original_en": [
          "netabroadassets",
          "domesticloans",
          "capitalreceived",
          "enddate",
          "claimstogov",
          "moneyandquasimoney",
          "money1"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "datatype(data type code)",
          "currencyname(currency unit code)",
          "totalsavings(all deposit accounts)",
          "corporatesavings(unit deposit/corporate deposit)",
          "financedeposits(financial deposit)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "datatype",
          "currencyname",
          "totalsavings",
          "corporatesavings",
          "financedeposits"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "foreignassets",
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help Teacher Li check how much our capital received, net foreign assets, and domestic loans have respectively lost in the last two years. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select capitalreceived , netabroadassets , domesticloans from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.money1",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "Help me find the data. Please check the amount of goods imported to our country in the previous year and the year-on-year growth and shrinkage data of goods imports.",
    "sql": "select imvalueofgoods, gyoyofimvaluegoods from ed_exportimport  where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select imvalueofgoods , gyoyofimvaluegoods from ed_exportimport where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "enddate(deadline)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "gyoyofimvaluegoods",
          "enddate",
          "imvalueofgoods",
          "eximvalueofgoods",
          "exvalueofgoods",
          "gyoyofeximvaluegoods",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "province",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help me find the data. Please check the amount of goods imported to our country in the previous year and the year-on-year growth and shrinkage data of goods imports. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).reportperiod(data statistical period) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector)",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) | select imvalueofgoods , gyoyofimvaluegoods from ed_exportimport where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.enddate",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.reportperiod",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst"
    ]
  },
  {
    "question": "Show me the data, I want to know how our records of claims on other financial institutions appear on the balance sheet of other deposit-taking companies. Please list them.",
    "sql": "select claimsonotherfinstitute from ed_otherdepositorycorpbs ;",
    "norm_sql": "select claimsonotherfinstitute from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsonotherfinstitute(claims on other financial institutions)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "enddate(deadline)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "demanddeposits(current deposits for enterprises)"
        ],
        "column_names_original_en": [
          "claimsonotherfinstitute",
          "claimsonotherdepositcorp",
          "depositsincludedinm2",
          "liabtootherdepositcorp",
          "enddate",
          "claimsonothernfinstitute",
          "demanddeposits"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "id",
          "netabroadassets",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "forex",
          "moneyandgold",
          "otherforeignassets",
          "claimtogovernment",
          "claimtosavingsbanks"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Show me the data, I want to know how our records of claims on other financial institutions appear on the balance sheet of other deposit-taking companies. Please list them. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
    "output_sequence": "select _ from _ | select claimsonotherfinstitute from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks"
    ]
  }
]