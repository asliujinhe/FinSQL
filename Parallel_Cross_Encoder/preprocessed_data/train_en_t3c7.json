[
  {
    "question": "What is the minimum payment ratio of \"Securities Trading Stamp Tax\" for \"A-share\" on the \"Zhengzhou Commodity Exchange\"?",
    "sql": "select ratiofloor from ed_taxrate where typename = 'A-share' and itemname = 'Securities Trading Stamp Tax' and secumarket = 'Zhengzhou Commodity Exchange';",
    "norm_sql": "select ratiofloor from ed_taxrate where typename = 'A-share' and itemname = 'Securities Trading Stamp Tax' and secumarket = 'Zhengzhou Commodity Exchange'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "secumarket(securities market)",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)",
          "valueceiling(maximum value (rmb))",
          "valuefloor(minimum value/starting point (rmb))"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "secumarket",
          "ratiofloor",
          "effectivedate",
          "valueceiling",
          "valuefloor"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "enddate(deadline)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "id(record identifier)",
          "exvalueofgoods(total export amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "gyoyofexvaluegoods",
          "gyoyofimvaluegoods",
          "imvalueofgoods",
          "enddate",
          "eximvalueofgoods",
          "id",
          "exvalueofgoods"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "shorttermloans(short-term loan)",
          "equityandotherinvestment(securities and investments)",
          "id(record identifier)",
          "mediumlongtermloans(medium-to-long term loans)",
          "financedeposits(financial deposit)",
          "reservedeposits(deposit of reserve funds)"
        ],
        "column_names_original_en": [
          "trustedandcreditdeposits",
          "shorttermloans",
          "equityandotherinvestment",
          "id",
          "mediumlongtermloans",
          "financedeposits",
          "reservedeposits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the minimum payment ratio of \"Securities Trading Stamp Tax\" for \"A-share\" on the \"Zhengzhou Commodity Exchange\"? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds)",
    "output_sequence": "select _ from _ where _ | select ratiofloor from ed_taxrate where typename = 'A-share' and itemname = 'Securities Trading Stamp Tax' and secumarket = 'Zhengzhou Commodity Exchange'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.effectivedate",
      "ed_taxrate.valueceiling",
      "ed_taxrate.valuefloor",
      "ed_exportimport.*",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.enddate",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.id",
      "ed_exportimport.exvalueofgoods",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.reservedeposits"
    ]
  },
  {
    "question": "What is the highest payment ratio for \"Securities Trading Stamp Tax\" of \"A-shares\" on the \"Shanghai Futures Exchange\"?",
    "sql": "select ratioceiling from ed_taxrate where typename = 'A-shares' and itemname = 'Securities Trading Stamp Tax' and secumarket = 'Shanghai Futures Exchange';",
    "norm_sql": "select ratioceiling from ed_taxrate where typename = 'A-shares' and itemname = 'Securities Trading Stamp Tax' and secumarket = 'Shanghai Futures Exchange'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "secumarket(securities market)",
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)",
          "effectivedate(effective date)",
          "basiscode(billing baseline)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "secumarket",
          "ratioceiling",
          "id",
          "effectivedate",
          "basiscode"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "drrtype(reserve requirement ratio category)",
          "id(record identifier)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "drrtype",
          "id",
          "ratiofloor",
          "ratioceiling",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "yoy(year-on-year increase or decrease (%))",
          "enddate(deadline)",
          "subjectname(indicator name)",
          "subjectsum(amount (in million of rmb))",
          "reportperiod(statistical period)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "yoy",
          "enddate",
          "subjectname",
          "subjectsum",
          "reportperiod",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the highest payment ratio for \"Securities Trading Stamp Tax\" of \"A-shares\" on the \"Shanghai Futures Exchange\"? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).basiscode(billing baseline) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).id(record identifier)",
    "output_sequence": "select _ from _ where _ | select ratioceiling from ed_taxrate where typename = 'A-shares' and itemname = 'Securities Trading Stamp Tax' and secumarket = 'Shanghai Futures Exchange'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.id",
      "ed_taxrate.effectivedate",
      "ed_taxrate.basiscode",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.effectivedate",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.id"
    ]
  },
  {
    "question": "Please query the highest and lowest payment ratios of \"B shares\" for \"Securities Transaction Stamp Duty\" on the \"Dalian Commodity Exchange\".",
    "sql": "select ratioceiling, ratiofloor from ed_taxrate where typename ='B shares' and itemname = 'Securities Transaction Stamp Duty' and secumarket ='Dalian Commodity Exchange' ;",
    "norm_sql": "select ratioceiling , ratiofloor from ed_taxrate where typename = 'B shares' and itemname = 'Securities Transaction Stamp Duty' and secumarket = 'Dalian Commodity Exchange'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "secumarket(securities market)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "basiscode(billing baseline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "secumarket",
          "ratiofloor",
          "ratioceiling",
          "basiscode",
          "id"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "effectivedate(effective date)",
          "id(record identifier)",
          "ratiofloor(minimum ratio (%))",
          "drrtype(reserve requirement ratio category)",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "effectivedate",
          "id",
          "ratiofloor",
          "drrtype",
          "ratioceiling"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "id(record identifier)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "sovereigntycountry(the subject country)",
          "reportarea(statistical category of the region)",
          "enddate(deadline)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "id",
          "gyoyofexvaluegoods",
          "sovereigntycountry",
          "reportarea",
          "enddate",
          "gyoyofimvaluegoods",
          "eximvalueofgoods"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please query the highest and lowest payment ratios of \"B shares\" for \"Securities Transaction Stamp Duty\" on the \"Dalian Commodity Exchange\". | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).id(record identifier) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars))",
    "output_sequence": "select _ from _ where _ | select ratioceiling , ratiofloor from ed_taxrate where typename = 'B shares' and itemname = 'Securities Transaction Stamp Duty' and secumarket = 'Dalian Commodity Exchange'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.basiscode",
      "ed_taxrate.id",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratioceiling",
      "ed_exportimport.*",
      "ed_exportimport.id",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.reportarea",
      "ed_exportimport.enddate",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.eximvalueofgoods"
    ]
  },
  {
    "question": "Search for the values of the minimum and maximum payment ratios for \"Securities Transaction Stamp Duty\" on \"Shanghai Gold Exchange\" for \"A-shares\".",
    "sql": "select ratiofloor, ratioceiling from ed_taxrate where typename ='A-shares' and itemname = 'Securities Transaction Stamp Duty' and secumarket ='Shanghai Gold Exchange';",
    "norm_sql": "select ratiofloor , ratioceiling from ed_taxrate where typename = 'A-shares' and itemname = 'Securities Transaction Stamp Duty' and secumarket = 'Shanghai Gold Exchange'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "secumarket(securities market)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "maturity(repurchase period)",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "secumarket",
          "ratiofloor",
          "ratioceiling",
          "maturity",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "yoy(year-on-year increase or decrease (%))",
          "subjectname(indicator name)",
          "subjectsum(amount (in million of rmb))",
          "id(record identifier)",
          "reportperiod(statistical period)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "yoy",
          "subjectname",
          "subjectsum",
          "id",
          "reportperiod",
          "enddate"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "drrtype(reserve requirement ratio category)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "id",
          "drrtype",
          "ratiofloor",
          "ratioceiling",
          "effectivedate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Search for the values of the minimum and maximum payment ratios for \"Securities Transaction Stamp Duty\" on \"Shanghai Gold Exchange\" for \"A-shares\". | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).effectivedate(effective date) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date)",
    "output_sequence": "select _ from _ where _ | select ratiofloor , ratioceiling from ed_taxrate where typename = 'A-shares' and itemname = 'Securities Transaction Stamp Duty' and secumarket = 'Shanghai Gold Exchange'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.maturity",
      "ed_taxrate.effectivedate",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.enddate",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.effectivedate"
    ]
  },
  {
    "question": "Help me see the records of the national defense expenditure growth rate reaching 5% in various parts of our country over the past ten years. List the time, national defense expenditure, and national defense expenditure growth rate.",
    "sql": "select enddate, nationaldefense, gnationaldefense from ed_financialbalance where gnationaldefense > 5 and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-10 year'));",
    "norm_sql": "select enddate , nationaldefense , gnationaldefense from ed_financialbalance where gnationaldefense > 5 and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "nationaldefense(defense expenditure (in million of rmb))",
          "gnationaldefense(defense expenditure growth rate)",
          "gsupportunderdevelopedarea(policy subsidy expenditure growth rate)",
          "reportperiod(data statistical period)",
          "individualincometax(personal income tax (in million of rmb))",
          "enterpriseincome(enterprise income (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "nationaldefense",
          "gnationaldefense",
          "gsupportunderdevelopedarea",
          "reportperiod",
          "individualincometax",
          "enterpriseincome"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "indexname",
          "reportperiod",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "reportperiod(statistical period)",
          "enddate(deadline)",
          "id(record identifier)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "enddate",
          "id",
          "subjectsum",
          "yoy",
          "subjectname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help me see the records of the national defense expenditure growth rate reaching 5% in various parts of our country over the past ten years. List the time, national defense expenditure, and national defense expenditure growth rate. | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).gsupportunderdevelopedarea(policy subsidy expenditure growth rate) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , nationaldefense , gnationaldefense from ed_financialbalance where gnationaldefense > 5 and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.nationaldefense",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.gsupportunderdevelopedarea",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.individualincometax",
      "ed_financialbalance.enterpriseincome",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.id",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectname"
    ]
  },
  {
    "question": "Please list the data records of the accumulated new loan amount recorded under \"End of period\" that exceed 100,000. Display the time and the record of the new loan amount.",
    "sql": "select enddate, subjectsum from ed_newincreasingloan where reportperiod ='End of period' and subjectsum > 100000;",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'End of period' and subjectsum > 100000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "subjectsum",
          "id",
          "yoy",
          "subjectname"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "indexname(index name)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "reportperiod",
          "id",
          "indexname",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "depositswithcentralbank(reserve deposit)",
          "transferabledeposits(transferable deposits)",
          "cashinvault(cash on hand)",
          "bondissue(bond issuance)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "totalassets(total assets)",
          "depositsexcludedfromm2(deposits not included in broad money)"
        ],
        "column_names_original_en": [
          "depositswithcentralbank",
          "transferabledeposits",
          "cashinvault",
          "bondissue",
          "liabilitiestocentralbank",
          "totalassets",
          "depositsexcludedfromm2"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the data records of the accumulated new loan amount recorded under \"End of period\" that exceed 100,000. Display the time and the record of the new loan amount. | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money)",
    "output_sequence": "select _ from _ where _ | select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'End of period' and subjectsum > 100000",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectname",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.enddate",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2"
    ]
  },
  {
    "question": "Wang Gong, please show us the net assets of our foreign counterparts during the 2018 financial crisis.",
    "sql": "select netabroadassets from ed_chinamoneyandbanking where strftime('%Y', enddate)='2018';",
    "norm_sql": "select netabroadassets from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = '2018'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "netabroadassets(foreign net assets)",
          "quasimoney(quasi-currency)",
          "id(record identifier)",
          "bonds(bonds)",
          "domesticloans(domestic credit)",
          "capitalreceived(paid-up capital)"
        ],
        "column_names_original_en": [
          "enddate",
          "netabroadassets",
          "quasimoney",
          "id",
          "bonds",
          "domesticloans",
          "capitalreceived"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "enddate(deadline)",
          "province(province and city)",
          "rmbloans(rmb loans (in 100 million rmb))",
          "entrustedloans(trust loan (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "definancingofnonfe",
          "undiscountedbacceptances",
          "socialfinancing",
          "enddate",
          "province",
          "rmbloans",
          "entrustedloans"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "ratiofloor(minimum ratio (%))",
          "id(record identifier)",
          "ratioceiling(maximum ratio (%))",
          "effectivedate(effective date)",
          "drrtype(reserve requirement ratio category)"
        ],
        "column_names_original_en": [
          "ratiofloor",
          "id",
          "ratioceiling",
          "effectivedate",
          "drrtype"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Wang Gong, please show us the net assets of our foreign counterparts during the 2018 financial crisis. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category)",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select netabroadassets from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = '2018'",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_socialfinancing.*",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.province",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.entrustedloans",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.drrtype"
    ]
  },
  {
    "question": "Display the name of the province with the highest GDP last year.",
    "sql": "select province from ed_grossdomesticproduct where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year')) order by gdp desc limit 1;",
    "norm_sql": "select province from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) order by gdp desc limit 1",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) order by _ desc limit _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "enddate(deadline)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "gdppercapita(per capita gross domestic product (cny/person))"
        ],
        "column_names_original_en": [
          "province",
          "enddate",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "gdpgrowthyoy",
          "gdppercapita"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indextype(index category)",
          "indexvalue(index)",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "indextype",
          "indexvalue",
          "enddate",
          "reportperiod",
          "id",
          "indexname"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "indexcode(index code)",
          "indexvalue(index value)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "id(record identifier)",
          "reportarea(statistical region category)",
          "comparetolastmonth(index month-on-month change (points))"
        ],
        "column_names_original_en": [
          "indexcode",
          "indexvalue",
          "reportperiod",
          "enddate",
          "id",
          "reportarea",
          "comparetolastmonth"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Display the name of the province with the highest GDP last year. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexname(index name) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points))",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) order by _ desc limit _ | select province from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) order by gdp desc limit 1",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexname",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.comparetolastmonth"
    ]
  },
  {
    "question": "What is the social retail sales data of \"national\" state-owned and collective industries in the year 2000?",
    "sql": "select stateownedunits, collectiveunits from ed_retailvalueofscgoods where reportarea = 'national' and reportperiod = 'annual' and strftime('%Y', enddate) = '2000';",
    "norm_sql": "select stateownedunits , collectiveunits from ed_retailvalueofscgoods where reportarea = 'national' and reportperiod = 'annual' and strftime ( '%Y' , enddate ) = '2000'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "enddate(deadline)",
          "othersindustry(other industries)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "reportarea(statistical category of region)",
          "reportperiod(data statistical period)",
          "collectiveunits(collective unit)",
          "stateownedunits(state-owned unit)"
        ],
        "column_names_original_en": [
          "enddate",
          "othersindustry",
          "retailvalueofscgoods",
          "reportarea",
          "reportperiod",
          "collectiveunits",
          "stateownedunits"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "indextitle(index name)",
          "reportperiod(data statistical period)",
          "indexvalue(index value)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "id",
          "indextitle",
          "reportperiod",
          "indexvalue",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpitrafficcommunication(transportation and communication year-over-year)",
          "qoqcpitrafficcommunication(transportation and communication month-on-month)",
          "qoqcpicloth(clothing month-on-month)",
          "qoqcpifamilyequipmentservice(household equipment and services month-on-month)",
          "cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services)",
          "cumcpientertainmentservice(accumulated average of entertainment, education, cultural goods and services)",
          "yoycpi(resident consumer price index (year-on-year))"
        ],
        "column_names_original_en": [
          "yoycpitrafficcommunication",
          "qoqcpitrafficcommunication",
          "qoqcpicloth",
          "qoqcpifamilyequipmentservice",
          "cumcpifamilyequipmentservice",
          "cumcpientertainmentservice",
          "yoycpi"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the social retail sales data of \"national\" state-owned and collective industries in the year 2000? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpitrafficcommunication(transportation and communication year-over-year) , ed_consumerpriceindex(consumer price index).qoqcpitrafficcommunication(transportation and communication month-on-month) , ed_consumerpriceindex(consumer price index).qoqcpicloth(clothing month-on-month) , ed_consumerpriceindex(consumer price index).qoqcpifamilyequipmentservice(household equipment and services month-on-month) , ed_consumerpriceindex(consumer price index).cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services) , ed_consumerpriceindex(consumer price index).cumcpientertainmentservice(accumulated average of entertainment, education, cultural goods and services) , ed_consumerpriceindex(consumer price index).yoycpi(resident consumer price index (year-on-year))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = _ | select stateownedunits , collectiveunits from ed_retailvalueofscgoods where reportarea = 'national' and reportperiod = 'annual' and strftime ( '%Y' , enddate ) = '2000'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.stateownedunits",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.enddate",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpitrafficcommunication",
      "ed_consumerpriceindex.qoqcpitrafficcommunication",
      "ed_consumerpriceindex.qoqcpicloth",
      "ed_consumerpriceindex.qoqcpifamilyequipmentservice",
      "ed_consumerpriceindex.cumcpifamilyequipmentservice",
      "ed_consumerpriceindex.cumcpientertainmentservice",
      "ed_consumerpriceindex.yoycpi"
    ]
  },
  {
    "question": "Hi, please help me look into the number of records for other foreign currencies and government deposits in the central bank's balance sheet.",
    "sql": "select otherforeignassets, governmentsavings from ed_moneyauthoritybs;",
    "norm_sql": "select otherforeignassets , governmentsavings from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpimedicare(medical care and personal care products year-on-year)",
          "cumcpifood(accumulated average of food)",
          "id(record identifier)",
          "qoqcpi(resident consumer price index (month-on-month))",
          "cumcpitrafficcommunication(cumulative average of transportation and communication)",
          "qoqcpitrafficcommunication(transportation and communication month-on-month)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "yoycpimedicare",
          "cumcpifood",
          "id",
          "qoqcpi",
          "cumcpitrafficcommunication",
          "qoqcpitrafficcommunication",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "otherforeignassets(other foreign assets (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "enddate(deadline)",
          "moneyreserves(reserve currency (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))"
        ],
        "column_names_original_en": [
          "otherforeignassets",
          "governmentsavings",
          "enddate",
          "moneyreserves",
          "forex",
          "claimtootherfinnonfininst",
          "claimtogovernment"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "statecode(primary country)",
          "currencycode(currency unit)",
          "reportperiod(data statistical period)",
          "avgprice(average price)",
          "quantity(quantity)",
          "eximvalue(amount)",
          "unitname(company name)"
        ],
        "column_names_original_en": [
          "statecode",
          "currencycode",
          "reportperiod",
          "avgprice",
          "quantity",
          "eximvalue",
          "unitname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hi, please help me look into the number of records for other foreign currencies and government deposits in the central bank's balance sheet. | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpimedicare(medical care and personal care products year-on-year) , ed_consumerpriceindex(consumer price index).cumcpifood(accumulated average of food) , ed_consumerpriceindex(consumer price index).id(record identifier) , ed_consumerpriceindex(consumer price index).qoqcpi(resident consumer price index (month-on-month)) , ed_consumerpriceindex(consumer price index).cumcpitrafficcommunication(cumulative average of transportation and communication) , ed_consumerpriceindex(consumer price index).qoqcpitrafficcommunication(transportation and communication month-on-month) , ed_consumerpriceindex(consumer price index).enddate(deadline) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).currencycode(currency unit) , ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).avgprice(average price) , ed_productexportimport(product import and export volume).quantity(quantity) , ed_productexportimport(product import and export volume).eximvalue(amount) , ed_productexportimport(product import and export volume).unitname(company name)",
    "output_sequence": "select _ from _ | select otherforeignassets , governmentsavings from ed_moneyauthoritybs",
    "tc_original": [
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpimedicare",
      "ed_consumerpriceindex.cumcpifood",
      "ed_consumerpriceindex.id",
      "ed_consumerpriceindex.qoqcpi",
      "ed_consumerpriceindex.cumcpitrafficcommunication",
      "ed_consumerpriceindex.qoqcpitrafficcommunication",
      "ed_consumerpriceindex.enddate",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_productexportimport.*",
      "ed_productexportimport.statecode",
      "ed_productexportimport.currencycode",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.avgprice",
      "ed_productexportimport.quantity",
      "ed_productexportimport.eximvalue",
      "ed_productexportimport.unitname"
    ]
  },
  {
    "question": "Show me the data of foreign assets and foreign liabilities in the balance sheet of other depositary corporations in the year 2000.",
    "sql": "select foreignassets, foreignliabilities from ed_otherdepositorycorpbs where strftime('%Y', enddate)='2000';",
    "norm_sql": "select foreignassets , foreignliabilities from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = '2000'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "maturity(repurchase period)",
          "basiscode(billing baseline)",
          "valuefloor(minimum value/starting point (rmb))",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "valueceiling(maximum value (rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "maturity",
          "basiscode",
          "valuefloor",
          "ratiofloor",
          "ratioceiling",
          "valueceiling",
          "id"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indextitle(index name)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexvalue(index value)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "indextitle",
          "reportperiod",
          "enddate",
          "indexvalue",
          "id"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "foreignassets(foreign net assets)",
          "foreignliabilities(foreign liabilities)",
          "cashinvault(cash on hand)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "depositsexcludedfromm2(deposits not included in broad money)"
        ],
        "column_names_original_en": [
          "enddate",
          "foreignassets",
          "foreignliabilities",
          "cashinvault",
          "claimsonotherfinstitute",
          "claimsonotherdepositcorp",
          "depositsexcludedfromm2"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Show me the data of foreign assets and foreign liabilities in the balance sheet of other depositary corporations in the year 2000. | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).id(record identifier) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money)",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select foreignassets , foreignliabilities from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = '2000'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.maturity",
      "ed_taxrate.basiscode",
      "ed_taxrate.valuefloor",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valueceiling",
      "ed_taxrate.id",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.id",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.foreignliabilities",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2"
    ]
  },
  {
    "question": "Please list the names and corresponding values of each \"National Economic Industry Index\" for the \"previous year same period\" during Li's recent work inspection.",
    "sql": "select indexname, indexvalue from ed_producerpiformp where reportperiod ='previous year same period' and indextype ='National Economic Industry Index';",
    "norm_sql": "select indexname , indexvalue from ed_producerpiformp where reportperiod = 'previous year same period' and indextype = 'National Economic Industry Index'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "effectivedate(effective date)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "valueceiling(maximum value (rmb))",
          "id(record identifier)",
          "maturity(repurchase period)",
          "secumarket(securities market)"
        ],
        "column_names_original_en": [
          "effectivedate",
          "ratiofloor",
          "ratioceiling",
          "valueceiling",
          "id",
          "maturity",
          "secumarket"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "province",
          "gdp",
          "gdpgrowthyoy",
          "gdppercapita",
          "secondindustrygdp",
          "primaryindustrygdp",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the names and corresponding values of each \"National Economic Industry Index\" for the \"previous year same period\" during Li's recent work inspection. | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).secumarket(securities market) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier)",
    "output_sequence": "select _ from _ where _ | select indexname , indexvalue from ed_producerpiformp where reportperiod = 'previous year same period' and indextype = 'National Economic Industry Index'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_taxrate.*",
      "ed_taxrate.effectivedate",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valueceiling",
      "ed_taxrate.id",
      "ed_taxrate.maturity",
      "ed_taxrate.secumarket",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.id"
    ]
  },
  {
    "question": "How much is the total amount of money and quasimoney in Chinese currency?",
    "sql": "select moneyandquasimoney from ed_chinamoneyandbanking;",
    "norm_sql": "select moneyandquasimoney from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "claimstogov(claims on the government (net))",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "centralbankbonds(central bank bonds)",
          "capitalreceived(paid-up capital)",
          "money1(currency (narrow money m1))"
        ],
        "column_names_original_en": [
          "moneyandquasimoney",
          "claimstospecificsavingorg",
          "claimstogov",
          "claimstootherinst",
          "centralbankbonds",
          "capitalreceived",
          "money1"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)",
          "cumcpi(cumulative average of resident consumer price index)",
          "yoycpifood(food year-on-year)",
          "yoycpitobacco(tobacco, alcohol, and supplies year-on-year)",
          "qoqcpihousing(residential month-to-month)",
          "enddate(deadline)",
          "yoycpimedicare(medical care and personal care products year-on-year)"
        ],
        "column_names_original_en": [
          "yoycpifamilyequipmentservice",
          "cumcpi",
          "yoycpifood",
          "yoycpitobacco",
          "qoqcpihousing",
          "enddate",
          "yoycpimedicare"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "id(record identifier)",
          "collectivecomap(collective enterprise (light industry))",
          "statstandard(statistical caliber)",
          "minitypecomap(small-scale enterprise (light industry))",
          "mediumcomap(medium-sized enterprise (light industry))",
          "hivalueap(heavy industry (in million of rmb))",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))"
        ],
        "column_names_original_en": [
          "id",
          "collectivecomap",
          "statstandard",
          "minitypecomap",
          "mediumcomap",
          "hivalueap",
          "industrialoutputvalueap"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How much is the total amount of money and quasimoney in Chinese currency? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) , ed_consumerpriceindex(consumer price index).yoycpitobacco(tobacco, alcohol, and supplies year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpihousing(residential month-to-month) , ed_consumerpriceindex(consumer price index).enddate(deadline) , ed_consumerpriceindex(consumer price index).yoycpimedicare(medical care and personal care products year-on-year) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
    "output_sequence": "select _ from _ | select moneyandquasimoney from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.money1",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.yoycpifood",
      "ed_consumerpriceindex.yoycpitobacco",
      "ed_consumerpriceindex.qoqcpihousing",
      "ed_consumerpriceindex.enddate",
      "ed_consumerpriceindex.yoycpimedicare",
      "ed_industryproduction.*",
      "ed_industryproduction.id",
      "ed_industryproduction.collectivecomap",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.minitypecomap",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.industrialoutputvalueap"
    ]
  },
  {
    "question": "Are there any records of fiscal revenue and expenditure? Please display the historical policy subsidy expenditure of various provinces and cities.",
    "sql": "select province, supportunderdevelopedarea from ed_financialbalance;",
    "norm_sql": "select province , supportunderdevelopedarea from ed_financialbalance",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "indextitle(index name)",
          "indexvalue(index value)",
          "enddate(deadline)",
          "reportarea(statistical region category)",
          "indexcode(index code)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "id",
          "indextitle",
          "indexvalue",
          "enddate",
          "reportarea",
          "indexcode"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "province(province and city)",
          "supportunderdevelopedarea(policy subsidy expenditure (in million of rmb))",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "individualincometax(personal income tax (in million of rmb))",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "enddate(deadline)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "province",
          "supportunderdevelopedarea",
          "localgovexpenditure",
          "individualincometax",
          "gfinancialrevenue",
          "enddate",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "hivalueap(heavy industry (in million of rmb))",
          "minitypecomap(small-scale enterprise (light industry))",
          "livalueap(light industry (in million of rmb))",
          "statstandard(statistical caliber)",
          "province(province)",
          "reportperiod(data statistics interval)",
          "collectivecomap(collective enterprise (light industry))"
        ],
        "column_names_original_en": [
          "hivalueap",
          "minitypecomap",
          "livalueap",
          "statstandard",
          "province",
          "reportperiod",
          "collectivecomap"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Are there any records of fiscal revenue and expenditure? Please display the historical policy subsidy expenditure of various provinces and cities. | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).indexcode(index code) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).supportunderdevelopedarea(policy subsidy expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry))",
    "output_sequence": "select _ from _ | select province , supportunderdevelopedarea from ed_financialbalance",
    "tc_original": [
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.indexcode",
      "ed_financialbalance.*",
      "ed_financialbalance.province",
      "ed_financialbalance.supportunderdevelopedarea",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.individualincometax",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.enddate",
      "ed_financialbalance.reportperiod",
      "ed_industryproduction.*",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.minitypecomap",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.province",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.collectivecomap"
    ]
  },
  {
    "question": "Display the historical record of credit income and expenditure for financial institutions, retaining the total amount of deposits and loans.",
    "sql": "select totalsavings , totalloans from ed_chinafibalancesheetrmb;",
    "norm_sql": "select totalsavings , totalloans from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "totalsavings(all deposit accounts)",
          "totalloans(various loans)",
          "savingsdeposits(savings deposits)",
          "shorttermloans(short-term loan)",
          "agriculturaldeposits(agricultural deposit)",
          "currencyname(currency unit code)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "totalsavings",
          "totalloans",
          "savingsdeposits",
          "shorttermloans",
          "agriculturaldeposits",
          "currencyname",
          "id"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "entrustedloans(trust loan (in 100 million of rmb))",
          "enddate(deadline)",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "creditloans(trust loan (in 100 million rmb))",
          "reportarea(statistical region category)",
          "province(province and city)",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "entrustedloans",
          "enddate",
          "corporatebonds",
          "creditloans",
          "reportarea",
          "province",
          "undiscountedbacceptances"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "enddate(deadline)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "gdp",
          "enddate",
          "thirdindustrygdp",
          "gdpgrowthyoy",
          "gdppercapita",
          "secondindustrygdp"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Display the historical record of credit income and expenditure for financial institutions, retaining the total amount of deposits and loans. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb))",
    "output_sequence": "select _ from _ | select totalsavings , totalloans from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.id",
      "ed_socialfinancing.*",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.creditloans",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.province",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.secondindustrygdp"
    ]
  },
  {
    "question": "Please list the repurchase term of \"Government Bond Buyback\" in different trading markets, and list the fields of trading market and repurchase term.",
    "sql": "select secumarket, maturity from ed_taxrate where typename ='Government Bond Buyback';",
    "norm_sql": "select secumarket , maturity from ed_taxrate where typename = 'Government Bond Buyback'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "secumarket(securities market)",
          "maturity(repurchase period)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "typename",
          "secumarket",
          "maturity",
          "ratiofloor",
          "ratioceiling",
          "id",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "enddate(deadline)",
          "indexcode(index code)",
          "indextitle(index name)",
          "comparetolastmonth(index month-on-month change (points))",
          "reportperiod(data statistical period)",
          "indexvalue(index value)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexcode",
          "indextitle",
          "comparetolastmonth",
          "reportperiod",
          "indexvalue",
          "id"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "financedeposits(financial deposit)",
          "reservedeposits(deposit of reserve funds)",
          "sharesandotherinvestments(equity and other investments)",
          "othersavings(other deposits)",
          "shorttermloans(short-term loan)",
          "domesticloans((one) domestic loan)",
          "assetsatifo(asset in international financial institutions)"
        ],
        "column_names_original_en": [
          "financedeposits",
          "reservedeposits",
          "sharesandotherinvestments",
          "othersavings",
          "shorttermloans",
          "domesticloans",
          "assetsatifo"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the repurchase term of \"Government Bond Buyback\" in different trading markets, and list the fields of trading market and repurchase term. | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).effectivedate(effective date) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).id(record identifier) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions)",
    "output_sequence": "select _ from _ where _ | select secumarket , maturity from ed_taxrate where typename = 'Government Bond Buyback'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.maturity",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.id",
      "ed_taxrate.effectivedate",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.id",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.assetsatifo"
    ]
  },
  {
    "question": "Oh, Xiaoli, I'm in a hurry. Please help me search for the names and values of various indexes in \"Last year same month\" under the \"National Economic Industry Index\".",
    "sql": "select indexname, indexvalue from ed_producerpiformp where reportperiod ='Last year same month' and indextype ='National Economic Industry Index';",
    "norm_sql": "select indexname , indexvalue from ed_producerpiformp where reportperiod = 'Last year same month' and indextype = 'National Economic Industry Index'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexvalue(index)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indextype(index category)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "id",
          "reportperiod",
          "enddate",
          "indextype",
          "indexname"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "fcdeposits(foreign currency deposit.)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "capitalreceived(paid-up capital)",
          "id(record identifier)",
          "enddate(deadline)",
          "money1(currency (narrow money m1))"
        ],
        "column_names_original_en": [
          "moneyandquasimoney",
          "fcdeposits",
          "claimstospecificsavingorg",
          "capitalreceived",
          "id",
          "enddate",
          "money1"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "cumcpitrafficcommunication(cumulative average of transportation and communication)",
          "cumcpi(cumulative average of resident consumer price index)",
          "qoqcpimedicare(healthcare and personal care products month-on-month)",
          "enddate(deadline)",
          "qoqcpicloth(clothing month-on-month)",
          "yoycpimedicare(medical care and personal care products year-on-year)",
          "qoqcpihousing(residential month-to-month)"
        ],
        "column_names_original_en": [
          "cumcpitrafficcommunication",
          "cumcpi",
          "qoqcpimedicare",
          "enddate",
          "qoqcpicloth",
          "yoycpimedicare",
          "qoqcpihousing"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Oh, Xiaoli, I'm in a hurry. Please help me search for the names and values of various indexes in \"Last year same month\" under the \"National Economic Industry Index\". | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).cumcpitrafficcommunication(cumulative average of transportation and communication) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).qoqcpimedicare(healthcare and personal care products month-on-month) , ed_consumerpriceindex(consumer price index).enddate(deadline) , ed_consumerpriceindex(consumer price index).qoqcpicloth(clothing month-on-month) , ed_consumerpriceindex(consumer price index).yoycpimedicare(medical care and personal care products year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpihousing(residential month-to-month)",
    "output_sequence": "select _ from _ where _ | select indexname , indexvalue from ed_producerpiformp where reportperiod = 'Last year same month' and indextype = 'National Economic Industry Index'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.money1",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.cumcpitrafficcommunication",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.qoqcpimedicare",
      "ed_consumerpriceindex.enddate",
      "ed_consumerpriceindex.qoqcpicloth",
      "ed_consumerpriceindex.yoycpimedicare",
      "ed_consumerpriceindex.qoqcpihousing"
    ]
  },
  {
    "question": "What are the records for claims on central bank and claims on government in the balance sheet of other deposit-taking corporations?",
    "sql": "select claimsoncentralbank, claimsongovernment from ed_otherdepositorycorpbs;",
    "norm_sql": "select claimsoncentralbank , claimsongovernment from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsongovernment(claims on government (net))",
          "claimsoncentralbank(claims on central bank)",
          "otherliabilities(other liabilities)",
          "enddate(deadline)",
          "totalassets(total assets)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "liabtootherfinancialcorp(liabilities to other financial companies)"
        ],
        "column_names_original_en": [
          "claimsongovernment",
          "claimsoncentralbank",
          "otherliabilities",
          "enddate",
          "totalassets",
          "claimsonotherdepositcorp",
          "liabtootherfinancialcorp"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "reportarea(statistical area category)",
          "enterpriseincome(enterprise income (in million of rmb))",
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "centralgovrevenue(central fiscal revenue (in million of yuan))",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "reportarea",
          "enterpriseincome",
          "gfinancialexpenditure",
          "centralgovrevenue",
          "operatingexpensescesh",
          "centralgovexpenditure",
          "province"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "domesticloans(domestic credit)",
          "centralbankbonds(central bank bonds)",
          "netabroadassets(foreign net assets)",
          "bonds(bonds)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "id(record identifier)",
          "fcdeposits(foreign currency deposit.)"
        ],
        "column_names_original_en": [
          "domesticloans",
          "centralbankbonds",
          "netabroadassets",
          "bonds",
          "claimstospecificsavingorg",
          "id",
          "fcdeposits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the records for claims on central bank and claims on government in the balance sheet of other deposit-taking corporations? | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).centralgovrevenue(central fiscal revenue (in million of yuan)) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).province(province and city) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.)",
    "output_sequence": "select _ from _ | select claimsoncentralbank , claimsongovernment from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_financialbalance.*",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.enterpriseincome",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.centralgovrevenue",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.centralgovexpenditure",
      "ed_financialbalance.province",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.fcdeposits"
    ]
  },
  {
    "question": "Please list the maximum and minimum ratio of \"Deposit Reserve Ratio\" for \"Urban Credit Cooperatives\", using the highest and lowest values.",
    "sql": "select ratiofloor, ratioceiling, valueceiling,  valuefloor from ed_taxrate where typename ='Urban Credit Cooperatives' and itemname = 'Deposit Reserve Ratio';",
    "norm_sql": "select ratiofloor , ratioceiling , valueceiling , valuefloor from ed_taxrate where typename = 'Urban Credit Cooperatives' and itemname = 'Deposit Reserve Ratio'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "valuefloor(minimum value/starting point (rmb))",
          "valueceiling(maximum value (rmb))",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "ratiofloor",
          "ratioceiling",
          "valuefloor",
          "valueceiling",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexname(index name)",
          "indextype(index category)",
          "id(record identifier)",
          "indexvalue(index)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "enddate",
          "indexname",
          "indextype",
          "id",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "province(province and city)",
          "reportarea(statistical region category)",
          "entrustedloans(trust loan (in 100 million of rmb))",
          "id(record identifier)",
          "corporatebonds(corporate bonds (in hundred million rmb))"
        ],
        "column_names_original_en": [
          "foreigncurrencyloans",
          "socialfinancing",
          "province",
          "reportarea",
          "entrustedloans",
          "id",
          "corporatebonds"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the maximum and minimum ratio of \"Deposit Reserve Ratio\" for \"Urban Credit Cooperatives\", using the highest and lowest values. | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).effectivedate(effective date) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexvalue(index) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb))",
    "output_sequence": "select _ from _ where _ | select ratiofloor , ratioceiling , valueceiling , valuefloor from ed_taxrate where typename = 'Urban Credit Cooperatives' and itemname = 'Deposit Reserve Ratio'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valuefloor",
      "ed_taxrate.valueceiling",
      "ed_taxrate.effectivedate",
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexvalue",
      "ed_socialfinancing.*",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.province",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.id",
      "ed_socialfinancing.corporatebonds"
    ]
  },
  {
    "question": "What is the total amount of deposits and total amount of loans in the RMB credit balances of financial institutions in our country over the years?",
    "sql": "select totalsavings, totalloans from ed_chinafibalancesheetrmb;",
    "norm_sql": "select totalsavings , totalloans from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "totalsavings(all deposit accounts)",
          "totalloans(various loans)",
          "orgdeposits(government and institutional deposits)",
          "financialbonds(financial bonds)",
          "assetsatifo(asset in international financial institutions)",
          "overseasloans((two) overseas loans)",
          "moneyincirculation(currency in circulation)"
        ],
        "column_names_original_en": [
          "totalsavings",
          "totalloans",
          "orgdeposits",
          "financialbonds",
          "assetsatifo",
          "overseasloans",
          "moneyincirculation"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "accueximvalue(accumulated amount)",
          "currencycode(currency unit)",
          "category(product category)",
          "id(record identifier)",
          "enddate(deadline)",
          "operatetype(import and export categories)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "accueximvalue",
          "currencycode",
          "category",
          "id",
          "enddate",
          "operatetype",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "enddate(deadline)",
          "reserveassets(reserve assets)",
          "depositsexcludedfromm2(deposits not included in broad money)",
          "totalassets(total assets)",
          "claimsonotherresidentsec(claims on other resident sectors)",
          "claimsonothernfinstitute(claims on non-financial institution)"
        ],
        "column_names_original_en": [
          "claimsonotherdepositcorp",
          "enddate",
          "reserveassets",
          "depositsexcludedfromm2",
          "totalassets",
          "claimsonotherresidentsec",
          "claimsonothernfinstitute"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the total amount of deposits and total amount of loans in the RMB credit balances of financial institutions in our country over the years? | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).orgdeposits(government and institutional deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).accueximvalue(accumulated amount) , ed_productexportimport(product import and export volume).currencycode(currency unit) , ed_productexportimport(product import and export volume).category(product category) , ed_productexportimport(product import and export volume).id(record identifier) , ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).operatetype(import and export categories) , ed_productexportimport(product import and export volume).reportperiod(data statistical period) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution)",
    "output_sequence": "select _ from _ | select totalsavings , totalloans from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.orgdeposits",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_productexportimport.*",
      "ed_productexportimport.accueximvalue",
      "ed_productexportimport.currencycode",
      "ed_productexportimport.category",
      "ed_productexportimport.id",
      "ed_productexportimport.enddate",
      "ed_productexportimport.operatetype",
      "ed_productexportimport.reportperiod",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute"
    ]
  },
  {
    "question": "Please check the index value of \"Production Materials - Raw Materials\" in our \"Industrial Structure Classification Index\" for the \"same period last year.\"",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod ='same period last year' and indextype ='Industrial Structure Classification Index' and indexname ='Production Materials - Raw Materials';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'same period last year' and indextype = 'Industrial Structure Classification Index' and indexname = 'Production Materials - Raw Materials'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "indexvalue(index value)",
          "id(record identifier)",
          "indextitle(index name)",
          "indexcode(index code)",
          "enddate(deadline)",
          "reportarea(statistical region category)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "id",
          "indextitle",
          "indexcode",
          "enddate",
          "reportarea",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "province(province and city)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "enddate(deadline)",
          "reportarea(statistical category of the region)",
          "exvalueofgoods(total export amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "gyoyofexvaluegoods",
          "province",
          "gyoyofeximvaluegoods",
          "gyoyofimvaluegoods",
          "enddate",
          "reportarea",
          "exvalueofgoods"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please check the index value of \"Production Materials - Raw Materials\" in our \"Industrial Structure Classification Index\" for the \"same period last year.\" | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars))",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'same period last year' and indextype = 'Industrial Structure Classification Index' and indexname = 'Production Materials - Raw Materials'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.reportperiod",
      "ed_exportimport.*",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.province",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.enddate",
      "ed_exportimport.reportarea",
      "ed_exportimport.exvalueofgoods"
    ]
  },
  {
    "question": "List the records of claims on central bank in the balance sheets of other deposit-taking institutions.",
    "sql": "select claimsoncentralbank from ed_otherdepositorycorpbs;",
    "norm_sql": "select claimsoncentralbank from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsoncentralbank(claims on central bank)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "savingdeposits(resident savings deposits)",
          "depositswithcentralbank(reserve deposit)",
          "claimsongovernment(claims on government (net))",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)"
        ],
        "column_names_original_en": [
          "claimsoncentralbank",
          "claimsonothernfinstitute",
          "savingdeposits",
          "depositswithcentralbank",
          "claimsongovernment",
          "liabilitiestonfinst",
          "liabtootherdepositcorp"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "valueceiling(maximum value (rmb))",
          "itemname(tax rate items)",
          "secumarket(securities market)",
          "basiscode(billing baseline)",
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)",
          "valuefloor(minimum value/starting point (rmb))"
        ],
        "column_names_original_en": [
          "valueceiling",
          "itemname",
          "secumarket",
          "basiscode",
          "ratioceiling",
          "id",
          "valuefloor"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "productname(product name)",
          "accuquantity(accumulated quantity)",
          "quantity(quantity)",
          "accueximvalue(accumulated amount)",
          "eximvalue(amount)",
          "category(product category)",
          "unitname(company name)"
        ],
        "column_names_original_en": [
          "productname",
          "accuquantity",
          "quantity",
          "accueximvalue",
          "eximvalue",
          "category",
          "unitname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "List the records of claims on central bank in the balance sheets of other deposit-taking institutions. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).productname(product name) , ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).quantity(quantity) , ed_productexportimport(product import and export volume).accueximvalue(accumulated amount) , ed_productexportimport(product import and export volume).eximvalue(amount) , ed_productexportimport(product import and export volume).category(product category) , ed_productexportimport(product import and export volume).unitname(company name)",
    "output_sequence": "select _ from _ | select claimsoncentralbank from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_taxrate.*",
      "ed_taxrate.valueceiling",
      "ed_taxrate.itemname",
      "ed_taxrate.secumarket",
      "ed_taxrate.basiscode",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.id",
      "ed_taxrate.valuefloor",
      "ed_productexportimport.*",
      "ed_productexportimport.productname",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.quantity",
      "ed_productexportimport.accueximvalue",
      "ed_productexportimport.eximvalue",
      "ed_productexportimport.category",
      "ed_productexportimport.unitname"
    ]
  },
  {
    "question": "Please list the amount of total assets and total liabilities for each year in the balance sheet of other deposit-taking financial companies in 2000.",
    "sql": "select enddate, totalassets, totalliabilities from ed_otherdepositorycorpbs where strftime('%Y', enddate)='2000';",
    "norm_sql": "select enddate , totalassets , totalliabilities from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = '2000'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "totalassets(total assets)",
          "otherliabilities(other liabilities)",
          "enddate(deadline)",
          "totalliabilities(total liabilities)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "claimsongovernment(claims on government (net))",
          "bondissue(bond issuance)"
        ],
        "column_names_original_en": [
          "totalassets",
          "otherliabilities",
          "enddate",
          "totalliabilities",
          "liabtootherfinancialcorp",
          "claimsongovernment",
          "bondissue"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "province(province)",
          "reportperiod(data statistics interval)",
          "largecomap(large-scale enterprise (light industry))",
          "reportarea(statistical area category)",
          "id(record identifier)",
          "hivalueap(heavy industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "stateownedcontrolledcomap",
          "province",
          "reportperiod",
          "largecomap",
          "reportarea",
          "id",
          "hivalueap"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "comparetolastmonth(index month-on-month change (points))",
          "indextitle(index name)",
          "id(record identifier)",
          "reportarea(statistical region category)",
          "indexvalue(index value)",
          "reportperiod(data statistical period)",
          "indexcode(index code)"
        ],
        "column_names_original_en": [
          "comparetolastmonth",
          "indextitle",
          "id",
          "reportarea",
          "indexvalue",
          "reportperiod",
          "indexcode"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the amount of total assets and total liabilities for each year in the balance sheet of other deposit-taking financial companies in 2000. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).indexcode(index code)",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select enddate , totalassets , totalliabilities from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = '2000'",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_industryproduction.*",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.province",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.id",
      "ed_industryproduction.hivalueap",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.indexcode"
    ]
  },
  {
    "question": "Since 2010, what are the names of each index and their respective values in the \"Industrial Structure Classification Index\"? Please display the data for the \"same period last year.\"",
    "sql": "select indexname, indexvalue from ed_producerpiformp where indextype ='Industrial Structure Classification Index' and reportperiod ='same period last year' and strftime('%Y', enddate)>='2010';",
    "norm_sql": "select indexname , indexvalue from ed_producerpiformp where indextype = 'Industrial Structure Classification Index' and reportperiod = 'same period last year' and strftime ( '%Y' , enddate ) >= '2010'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) >= _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indextype(index category)",
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "indexvalue(index)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "indextype",
          "indexname",
          "reportperiod",
          "indexvalue",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "reportperiod(data statistics interval)",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "creditloans(trust loan (in 100 million rmb))",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "id(record identifier)",
          "reportarea(statistical region category)",
          "rmbloans(rmb loans (in 100 million rmb))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "corporatebonds",
          "creditloans",
          "foreigncurrencyloans",
          "id",
          "reportarea",
          "rmbloans"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "indexvalue(index value)",
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "id",
          "indexvalue",
          "reportperiod",
          "indextitle",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Since 2010, what are the names of each index and their respective values in the \"Industrial Structure Classification Index\"? Please display the data for the \"same period last year.\" | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) >= _ | select indexname , indexvalue from ed_producerpiformp where indextype = 'Industrial Structure Classification Index' and reportperiod = 'same period last year' and strftime ( '%Y' , enddate ) >= '2010'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_socialfinancing.*",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.creditloans",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.id",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.rmbloans",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.enddate"
    ]
  },
  {
    "question": "Can you check the value of the \"Food manufacturing industry\" index in the \"National Economic Industry Index\" for the \"same month last year\"?",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod ='same month last year' and indextype ='National Economic Industry Index' and indexname ='Food manufacturing industry';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'same month last year' and indextype = 'National Economic Industry Index' and indexname = 'Food manufacturing industry'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "id",
          "enddate"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "drrtype(reserve requirement ratio category)",
          "id(record identifier)",
          "effectivedate(effective date)",
          "ratioceiling(maximum ratio (%))",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "drrtype",
          "id",
          "effectivedate",
          "ratioceiling",
          "ratiofloor"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "indextitle(index name)",
          "indexvalue(index value)",
          "comparetolastmonth(index month-on-month change (points))",
          "reportarea(statistical region category)",
          "enddate(deadline)",
          "indexcode(index code)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indextitle",
          "indexvalue",
          "comparetolastmonth",
          "reportarea",
          "enddate",
          "indexcode",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you check the value of the \"Food manufacturing industry\" index in the \"National Economic Industry Index\" for the \"same month last year\"? | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period)",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'same month last year' and indextype = 'National Economic Industry Index' and indexname = 'Food manufacturing industry'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.ratiofloor",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.reportperiod"
    ]
  },
  {
    "question": "Do you know the repurchase period of \"Corporate Bonds\"?",
    "sql": "select maturity from ed_taxrate where typename ='Corporate Bonds';",
    "norm_sql": "select maturity from ed_taxrate where typename = 'Corporate Bonds'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "maturity(repurchase period)",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)",
          "valuefloor(minimum value/starting point (rmb))",
          "ratioceiling(maximum ratio (%))",
          "valueceiling(maximum value (rmb))"
        ],
        "column_names_original_en": [
          "typename",
          "maturity",
          "ratiofloor",
          "effectivedate",
          "valuefloor",
          "ratioceiling",
          "valueceiling"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "depositswithcentralbank(reserve deposit)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "claimsongovernment(claims on government (net))",
          "foreignassets(foreign net assets)",
          "totalassets(total assets)",
          "foreignliabilities(foreign liabilities)",
          "claimsonothernfinstitute(claims on non-financial institution)"
        ],
        "column_names_original_en": [
          "depositswithcentralbank",
          "liabtootherdepositcorp",
          "claimsongovernment",
          "foreignassets",
          "totalassets",
          "foreignliabilities",
          "claimsonothernfinstitute"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "reservedeposits(reserve deposit (in million of rmb))",
          "enddate(deadline)",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "totalliability(total liabilities (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "id(record identifier)",
          "governmentsavings(government deposits (in million of rmb))"
        ],
        "column_names_original_en": [
          "reservedeposits",
          "enddate",
          "claimtosavingsbanks",
          "totalliability",
          "moneyissuance",
          "id",
          "governmentsavings"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Do you know the repurchase period of \"Corporate Bonds\"? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select maturity from ed_taxrate where typename = 'Corporate Bonds'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.maturity",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.effectivedate",
      "ed_taxrate.valuefloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valueceiling",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.foreignliabilities",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.governmentsavings"
    ]
  },
  {
    "question": "Can you please provide detailed data on net abroad assets, domestic loans, and foreign currency deposits for the year 2010?",
    "sql": "select netabroadassets, domesticloans, fcdeposits from ed_chinamoneyandbanking where strftime('%Y', enddate)='2010';",
    "norm_sql": "select netabroadassets , domesticloans , fcdeposits from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = '2010'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "fcdeposits(foreign currency deposit.)",
          "money1(currency (narrow money m1))",
          "capitalreceived(paid-up capital)",
          "bonds(bonds)"
        ],
        "column_names_original_en": [
          "enddate",
          "netabroadassets",
          "domesticloans",
          "fcdeposits",
          "money1",
          "capitalreceived",
          "bonds"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "indextitle(index name)",
          "enddate(deadline)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "id",
          "indextitle",
          "enddate",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "id(record identifier)",
          "rmbloans(rmb loans (in 100 million rmb))",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "reportperiod(data statistics interval)",
          "creditloans(trust loan (in 100 million rmb))"
        ],
        "column_names_original_en": [
          "foreigncurrencyloans",
          "id",
          "rmbloans",
          "socialfinancing",
          "undiscountedbacceptances",
          "reportperiod",
          "creditloans"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you please provide detailed data on net abroad assets, domestic loans, and foreign currency deposits for the year 2010? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select netabroadassets , domesticloans , fcdeposits from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = '2010'",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.bonds",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indexvalue",
      "ed_socialfinancing.*",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.id",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.creditloans"
    ]
  },
  {
    "question": "What are the records of China's foreign currency deposits exceeding 1 million yuan in history, and list the details of the time and foreign currency deposit amounts.",
    "sql": "select enddate, fcdeposits from ed_chinamoneyandbanking where fcdeposits > 1000000;",
    "norm_sql": "select enddate , fcdeposits from ed_chinamoneyandbanking where fcdeposits > 1000000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "fcdeposits(foreign currency deposit.)",
          "quasimoney(quasi-currency)",
          "capitalreceived(paid-up capital)",
          "bonds(bonds)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)"
        ],
        "column_names_original_en": [
          "enddate",
          "fcdeposits",
          "quasimoney",
          "capitalreceived",
          "bonds",
          "id",
          "netabroadassets"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "province(province and city)",
          "id(record identifier)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "gdp(gross domestic product (in million of rmb).)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "gdppercapita",
          "province",
          "id",
          "gdpgrowthyoy",
          "gdp",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "savingsdeposits(savings deposits)",
          "loantogov(financial borrowing)",
          "financialbonds(financial bonds)",
          "othersavings(other deposits)",
          "moneyincirculation(currency in circulation)",
          "sharesandotherinvestments(equity and other investments)",
          "currencyname(currency unit code)"
        ],
        "column_names_original_en": [
          "savingsdeposits",
          "loantogov",
          "financialbonds",
          "othersavings",
          "moneyincirculation",
          "sharesandotherinvestments",
          "currencyname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the records of China's foreign currency deposits exceeding 1 million yuan in history, and list the details of the time and foreign currency deposit amounts. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code)",
    "output_sequence": "select _ from _ where _ | select enddate , fcdeposits from ed_chinamoneyandbanking where fcdeposits > 1000000",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.currencyname"
    ]
  },
  {
    "question": "Please check the minimum ratio of \"Excess Reserve Requirement Ratio\" in \"Deposit-type Financial Institutions\".",
    "sql": "select ratiofloor from ed_taxrate where typename ='Deposit-type Financial Institutions' and itemname ='Excess Reserve Requirement Ratio';",
    "norm_sql": "select ratiofloor from ed_taxrate where typename = 'Deposit-type Financial Institutions' and itemname = 'Excess Reserve Requirement Ratio'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "effectivedate(effective date)",
          "valueceiling(maximum value (rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "ratiofloor",
          "ratioceiling",
          "effectivedate",
          "valueceiling",
          "id"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indexvalue(index value (points))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "indexname",
          "indexvalue",
          "id"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "money1(currency (narrow money m1))",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "centralbankbonds(central bank bonds)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "enddate(deadline)",
          "bonds(bonds)"
        ],
        "column_names_original_en": [
          "money1",
          "netabroadassets",
          "domesticloans",
          "centralbankbonds",
          "claimstootherinst",
          "enddate",
          "bonds"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please check the minimum ratio of \"Excess Reserve Requirement Ratio\" in \"Deposit-type Financial Institutions\". | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).id(record identifier) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds)",
    "output_sequence": "select _ from _ where _ | select ratiofloor from ed_taxrate where typename = 'Deposit-type Financial Institutions' and itemname = 'Excess Reserve Requirement Ratio'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.effectivedate",
      "ed_taxrate.valueceiling",
      "ed_taxrate.id",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.id",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds"
    ]
  },
  {
    "question": "What is the average value of foreign currency deposits in China since 2000?",
    "sql": "select avg(fcdeposits) from ed_chinamoneyandbanking where strftime('%Y', enddate)>='2000';",
    "norm_sql": "select avg ( fcdeposits ) from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) >= '2000'",
    "sql_skeleton": "select avg ( _ ) from _ where strftime ( _ ) >= _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "foreignliabilities(foreign liabilities)",
          "paidincapital(paid-up capital)",
          "cashinvault(cash on hand)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "reserveassets(reserve assets)",
          "savingdeposits(resident savings deposits)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "foreignliabilities",
          "paidincapital",
          "cashinvault",
          "claimsonotherfinstitute",
          "reserveassets",
          "savingdeposits",
          "id"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "bonds(bonds)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "quasimoney(quasi-currency)",
          "enddate(deadline)",
          "fcdeposits(foreign currency deposit.)",
          "claimstogov(claims on the government (net))",
          "centralbankbonds(central bank bonds)"
        ],
        "column_names_original_en": [
          "bonds",
          "claimstootherinst",
          "quasimoney",
          "enddate",
          "fcdeposits",
          "claimstogov",
          "centralbankbonds"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "reportarea(statistical category of region)",
          "enddate(deadline)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "belowcounty(county and below)",
          "city(city)",
          "foodbeverage(catering industry)",
          "jointventures(joint operating unit)"
        ],
        "column_names_original_en": [
          "reportarea",
          "enddate",
          "retailvalueofscgoods",
          "belowcounty",
          "city",
          "foodbeverage",
          "jointventures"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the average value of foreign currency deposits in China since 2000? | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit)",
    "output_sequence": "select avg ( _ ) from _ where strftime ( _ ) >= _ | select avg ( fcdeposits ) from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) >= '2000'",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.foreignliabilities",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.id",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.jointventures"
    ]
  },
  {
    "question": "Wang Gong wants to know the amounts of total assets and total liabilities in the balance sheet of other depositary companies.",
    "sql": "select totalassets, totalliabilities from ed_otherdepositorycorpbs;",
    "norm_sql": "select totalassets , totalliabilities from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "totalassets(total assets)",
          "totalliabilities(total liabilities)",
          "otherliabilities(other liabilities)",
          "demanddeposits(current deposits for enterprises)",
          "reserveassets(reserve assets)",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "claimsonotherresidentsec(claims on other resident sectors)"
        ],
        "column_names_original_en": [
          "totalassets",
          "totalliabilities",
          "otherliabilities",
          "demanddeposits",
          "reserveassets",
          "liabilitiestonfinst",
          "claimsonotherresidentsec"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "accueximvalue(accumulated amount)",
          "unitname(company name)",
          "avgprice(average price)",
          "reportperiod(data statistical period)",
          "productname(product name)",
          "accuquantity(accumulated quantity)",
          "currencycode(currency unit)"
        ],
        "column_names_original_en": [
          "accueximvalue",
          "unitname",
          "avgprice",
          "reportperiod",
          "productname",
          "accuquantity",
          "currencycode"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "othersavings(other deposits)",
          "equityandotherinvestment(securities and investments)",
          "mediumlongtermloans(medium-to-long term loans)",
          "domesticloans((one) domestic loan)",
          "totalloans(various loans)",
          "moneyincirculation(currency in circulation)",
          "loantogov(financial borrowing)"
        ],
        "column_names_original_en": [
          "othersavings",
          "equityandotherinvestment",
          "mediumlongtermloans",
          "domesticloans",
          "totalloans",
          "moneyincirculation",
          "loantogov"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Wang Gong wants to know the amounts of total assets and total liabilities in the balance sheet of other depositary companies. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).accueximvalue(accumulated amount) , ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).avgprice(average price) , ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).productname(product name) , ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).currencycode(currency unit) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing)",
    "output_sequence": "select _ from _ | select totalassets , totalliabilities from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_productexportimport.*",
      "ed_productexportimport.accueximvalue",
      "ed_productexportimport.unitname",
      "ed_productexportimport.avgprice",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.productname",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.currencycode",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.loantogov"
    ]
  },
  {
    "question": "List the foreign currency deposits and capital received data for the year 2000.",
    "sql": "select fcdeposits, capitalreceived from ed_chinamoneyandbanking where strftime('%Y', enddate) = '2000';",
    "norm_sql": "select fcdeposits , capitalreceived from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = '2000'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "fcdeposits(foreign currency deposit.)",
          "capitalreceived(paid-up capital)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "claimstogov(claims on the government (net))",
          "centralbankbonds(central bank bonds)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)"
        ],
        "column_names_original_en": [
          "enddate",
          "fcdeposits",
          "capitalreceived",
          "moneyandquasimoney",
          "claimstogov",
          "centralbankbonds",
          "claimstootherinst"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "subjectsum(amount (in million of rmb))",
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))",
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "subjectsum",
          "id",
          "yoy",
          "enddate",
          "reportperiod",
          "subjectname"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "reportarea(statistical category of the region)",
          "province(province and city)",
          "commodity(product name)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "id(record identifier)",
          "imvalueofgoods(total import amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "reportarea",
          "province",
          "commodity",
          "gyoyofeximvaluegoods",
          "gyoyofexvaluegoods",
          "id",
          "imvalueofgoods"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "List the foreign currency deposits and capital received data for the year 2000. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars))",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select fcdeposits , capitalreceived from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = '2000'",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectname",
      "ed_exportimport.*",
      "ed_exportimport.reportarea",
      "ed_exportimport.province",
      "ed_exportimport.commodity",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.id",
      "ed_exportimport.imvalueofgoods"
    ]
  },
  {
    "question": "Hello, can you help me extract the amount of foreign liabilities in the balance sheet of other deposit-taking companies?",
    "sql": "select foreignliabilities from ed_otherdepositorycorpbs;",
    "norm_sql": "select foreignliabilities from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "foreignliabilities(foreign liabilities)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "timedeposits(fixed deposit for enterprises)",
          "bondissue(bond issuance)",
          "claimsoncentralbank(claims on central bank)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "totalliabilities(total liabilities)"
        ],
        "column_names_original_en": [
          "foreignliabilities",
          "depositsincludedinm2",
          "timedeposits",
          "bondissue",
          "claimsoncentralbank",
          "liabtootherdepositcorp",
          "totalliabilities"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)",
          "qoqcpifamilyequipmentservice(household equipment and services month-on-month)",
          "cumcpientertainmentservice(accumulated average of entertainment, education, cultural goods and services)",
          "id(record identifier)",
          "qoqcpi(resident consumer price index (month-on-month))",
          "yoycpitobacco(tobacco, alcohol, and supplies year-on-year)",
          "cumcpifood(accumulated average of food)"
        ],
        "column_names_original_en": [
          "yoycpifamilyequipmentservice",
          "qoqcpifamilyequipmentservice",
          "cumcpientertainmentservice",
          "id",
          "qoqcpi",
          "yoycpitobacco",
          "cumcpifood"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "selfownedmoney(own funds (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "claimtosavingsinst",
          "claimtononfinancialinst",
          "selfownedmoney",
          "moneyreserves",
          "bondissuance",
          "governmentsavings",
          "claimtosavingsbanks"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hello, can you help me extract the amount of foreign liabilities in the balance sheet of other deposit-taking companies? | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpifamilyequipmentservice(household equipment and services month-on-month) , ed_consumerpriceindex(consumer price index).cumcpientertainmentservice(accumulated average of entertainment, education, cultural goods and services) , ed_consumerpriceindex(consumer price index).id(record identifier) , ed_consumerpriceindex(consumer price index).qoqcpi(resident consumer price index (month-on-month)) , ed_consumerpriceindex(consumer price index).yoycpitobacco(tobacco, alcohol, and supplies year-on-year) , ed_consumerpriceindex(consumer price index).cumcpifood(accumulated average of food) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
    "output_sequence": "select _ from _ | select foreignliabilities from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.foreignliabilities",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice",
      "ed_consumerpriceindex.qoqcpifamilyequipmentservice",
      "ed_consumerpriceindex.cumcpientertainmentservice",
      "ed_consumerpriceindex.id",
      "ed_consumerpriceindex.qoqcpi",
      "ed_consumerpriceindex.yoycpitobacco",
      "ed_consumerpriceindex.cumcpifood",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.claimtosavingsbanks"
    ]
  },
  {
    "question": "In 2000, what was the annual \"accumulated\" industrial production value of \"state-owned and above-scale industrial enterprises\" and collective enterprises in \"the whole country\"?",
    "sql": "select enddate, stateownedcontrolledcomap, collectivecomap from ed_industryproduction where reportarea = 'the whole country' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'accumulated at the end' and strftime('%Y', enddate) = '2000';",
    "norm_sql": "select enddate , stateownedcontrolledcomap , collectivecomap from ed_industryproduction where reportarea = 'the whole country' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'accumulated at the end' and strftime ( '%Y' , enddate ) = '2000'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "collectivecomap(collective enterprise (light industry))",
          "mediumcomap(medium-sized enterprise (light industry))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportarea",
          "reportperiod",
          "statstandard",
          "stateownedcontrolledcomap",
          "collectivecomap",
          "mediumcomap"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexname(index name)",
          "indexvalue(index value (points))",
          "id(record identifier)",
          "enddate(deadline)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indexname",
          "indexvalue",
          "id",
          "enddate",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "avgprice(average price)",
          "currencycode(currency unit)",
          "accuquantity(accumulated quantity)",
          "accuavgprice(cumulative average price)",
          "reportperiod(data statistical period)",
          "statecode(primary country)",
          "quantity(quantity)"
        ],
        "column_names_original_en": [
          "avgprice",
          "currencycode",
          "accuquantity",
          "accuavgprice",
          "reportperiod",
          "statecode",
          "quantity"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In 2000, what was the annual \"accumulated\" industrial production value of \"state-owned and above-scale industrial enterprises\" and collective enterprises in \"the whole country\"? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).avgprice(average price) , ed_productexportimport(product import and export volume).currencycode(currency unit) , ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).accuavgprice(cumulative average price) , ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).quantity(quantity)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = _ | select enddate , stateownedcontrolledcomap , collectivecomap from ed_industryproduction where reportarea = 'the whole country' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'accumulated at the end' and strftime ( '%Y' , enddate ) = '2000'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.collectivecomap",
      "ed_industryproduction.mediumcomap",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.reportperiod",
      "ed_productexportimport.*",
      "ed_productexportimport.avgprice",
      "ed_productexportimport.currencycode",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.accuavgprice",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.statecode",
      "ed_productexportimport.quantity"
    ]
  },
  {
    "question": "Please take a look at the amount of government claims in our other deposit-taking corporation's balance sheet.",
    "sql": "select claimsongovernment from ed_otherdepositorycorpbs;",
    "norm_sql": "select claimsongovernment from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "otherliabilities(other liabilities)",
          "otherassets(other assets)",
          "claimsoncentralbank(claims on central bank)",
          "reserveassets(reserve assets)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "otherliabilities",
          "otherassets",
          "claimsoncentralbank",
          "reserveassets",
          "claimsonothernfinstitute",
          "claimsonotherdepositcorp",
          "claimsongovernment"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "yoy(year-on-year increase or decrease (%))",
          "subjectname(indicator name)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "yoy",
          "subjectname",
          "reportperiod",
          "subjectsum",
          "id"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "comparetolastmonth(index month-on-month change (points))",
          "id(record identifier)",
          "indexvalue(index value)",
          "indextitle(index name)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "reportarea(statistical region category)"
        ],
        "column_names_original_en": [
          "comparetolastmonth",
          "id",
          "indexvalue",
          "indextitle",
          "reportperiod",
          "enddate",
          "reportarea"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please take a look at the amount of government claims in our other deposit-taking corporation's balance sheet. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category)",
    "output_sequence": "select _ from _ | select claimsongovernment from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.otherassets",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.id",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.reportarea"
    ]
  },
  {
    "question": "I would like to know the gross domestic product (GDP) and per capita gross domestic product (GDP) in each region in the past 10 years.",
    "sql": "select enddate, gdp, gdpgrowthyoy from ed_grossdomesticproduct where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-10 year'));",
    "norm_sql": "select enddate , gdp , gdpgrowthyoy from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "gdp(gross domestic product (in million of rmb).)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "id(record identifier)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "enddate",
          "gdp",
          "gdpgrowthyoy",
          "secondindustrygdp",
          "id",
          "thirdindustrygdp",
          "province"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "hivalueap(heavy industry (in million of rmb))",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "mediumcomap(medium-sized enterprise (light industry))",
          "id(record identifier)",
          "reportarea(statistical area category)",
          "largecomap(large-scale enterprise (light industry))",
          "province(province)"
        ],
        "column_names_original_en": [
          "hivalueap",
          "stateownedcontrolledcomap",
          "mediumcomap",
          "id",
          "reportarea",
          "largecomap",
          "province"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "domesticloans(domestic credit)",
          "enddate(deadline)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "money1(currency (narrow money m1))",
          "quasimoney(quasi-currency)",
          "capitalreceived(paid-up capital)"
        ],
        "column_names_original_en": [
          "domesticloans",
          "enddate",
          "moneyandquasimoney",
          "claimstospecificsavingorg",
          "money1",
          "quasimoney",
          "capitalreceived"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I would like to know the gross domestic product (GDP) and per capita gross domestic product (GDP) in each region in the past 10 years. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).province(province) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital)",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , gdp , gdpgrowthyoy from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_industryproduction.*",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.province",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.capitalreceived"
    ]
  },
  {
    "question": "Do you know the amount of new loans in Chinese yuan?",
    "sql": "select subjectsum from ed_newincreasingloan;",
    "norm_sql": "select subjectsum from ed_newincreasingloan",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)",
          "enddate(deadline)",
          "subjectname(indicator name)",
          "reportperiod(statistical period)"
        ],
        "column_names_original_en": [
          "subjectsum",
          "yoy",
          "id",
          "enddate",
          "subjectname",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "enddate(deadline)",
          "reportarea(statistical region category)",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "province(province and city)",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "corporatebonds",
          "enddate",
          "reportarea",
          "undiscountedbacceptances",
          "province",
          "definancingofnonfe",
          "foreigncurrencyloans"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "effectivedate(effective date)",
          "drrtype(reserve requirement ratio category)",
          "ratiofloor(minimum ratio (%))",
          "id(record identifier)",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "effectivedate",
          "drrtype",
          "ratiofloor",
          "id",
          "ratioceiling"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Do you know the amount of new loans in Chinese yuan? | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%))",
    "output_sequence": "select _ from _ | select subjectsum from ed_newincreasingloan",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.reportperiod",
      "ed_socialfinancing.*",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.province",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.foreigncurrencyloans",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratioceiling"
    ]
  },
  {
    "question": "What is the GDP of each province and city in China over the past three years, keeping the time field?",
    "sql": "select province, gdp, enddate from ed_grossdomesticproduct where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select province , gdp , enddate from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "enddate(deadline)",
          "gdp(gross domestic product (in million of rmb).)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "id(record identifier)",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "enddate",
          "gdp",
          "gdpgrowthyoy",
          "thirdindustrygdp",
          "id",
          "secondindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexvalue(index)",
          "id(record identifier)",
          "indextype(index category)",
          "enddate(deadline)",
          "indexname(index name)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "id",
          "indextype",
          "enddate",
          "indexname",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indexvalue(index value)",
          "indextitle(index name)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "indextitle",
          "id",
          "reportperiod",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the GDP of each province and city in China over the past three years, keeping the time field? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline)",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select province , gdp , enddate from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.reportperiod",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.enddate"
    ]
  },
  {
    "question": "List the maximum and minimum values of forex amounts and currency gold data.",
    "sql": "select max(forex), min(forex), max(moneyandgold), min(moneyandgold)  from ed_moneyauthoritybs;",
    "norm_sql": "select max ( forex ) , min ( forex ) , max ( moneyandgold ) , min ( moneyandgold ) from ed_moneyauthoritybs",
    "sql_skeleton": "select max ( _ ) , min ( _ ) , max ( _ ) , min ( _ ) from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "governmentsavings(government deposits (in million of rmb))"
        ],
        "column_names_original_en": [
          "forex",
          "moneyandgold",
          "abroadliability",
          "moneyreserves",
          "nonfinancialorgdeposits",
          "totalassets",
          "governmentsavings"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexvalue(index)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexname(index name)",
          "id(record identifier)",
          "indextype(index category)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "reportperiod",
          "enddate",
          "indexname",
          "id",
          "indextype"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indexvalue(index value (points))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "indexname",
          "indexvalue",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "List the maximum and minimum values of forex amounts and currency gold data. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indextype(index category) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier)",
    "output_sequence": "select max ( _ ) , min ( _ ) , max ( _ ) , min ( _ ) from _ | select max ( forex ) , min ( forex ) , max ( moneyandgold ) , min ( moneyandgold ) from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indextype",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.id"
    ]
  },
  {
    "question": "What is the annual industrial added value of \"state-owned and above-scale industrial enterprises\" in the whole country?",
    "sql": "select enddate, industrialvalueadded from ed_industryproduction where reportarea ='National' and statstandard ='State-owned and above-scale industrial enterprises' and reportperiod ='Annual';",
    "norm_sql": "select enddate , industrialvalueadded from ed_industryproduction where reportarea = 'National' and statstandard = 'State-owned and above-scale industrial enterprises' and reportperiod = 'Annual'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "largecomap(large-scale enterprise (light industry))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded",
          "industrialoutputvalueap",
          "largecomap"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "cashinvault(cash on hand)",
          "savingdeposits(resident savings deposits)",
          "totalassets(total assets)",
          "transferabledeposits(transferable deposits)",
          "depositsincludedinm2(inclusion of broad money deposits.)"
        ],
        "column_names_original_en": [
          "liabilitiestonfinst",
          "claimsonotherdepositcorp",
          "cashinvault",
          "savingdeposits",
          "totalassets",
          "transferabledeposits",
          "depositsincludedinm2"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "centralbankbonds(central bank bonds)",
          "fcdeposits(foreign currency deposit.)",
          "enddate(deadline)",
          "netabroadassets(foreign net assets)"
        ],
        "column_names_original_en": [
          "claimstootherinst",
          "claimstononfinancialinst",
          "claimstospecificsavingorg",
          "centralbankbonds",
          "fcdeposits",
          "enddate",
          "netabroadassets"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the annual industrial added value of \"state-owned and above-scale industrial enterprises\" in the whole country? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets)",
    "output_sequence": "select _ from _ where _ | select enddate , industrialvalueadded from ed_industryproduction where reportarea = 'National' and statstandard = 'State-owned and above-scale industrial enterprises' and reportperiod = 'Annual'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.largecomap",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.netabroadassets"
    ]
  },
  {
    "question": "Can you check the data records of transferable deposits in the balance sheet of other deposit-taking corporations in our country?",
    "sql": "select transferabledeposits from ed_otherdepositorycorpbs;",
    "norm_sql": "select transferabledeposits from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "otherassets(other assets)",
          "timedeposits(fixed deposit for enterprises)",
          "enddate(deadline)",
          "bondissue(bond issuance)",
          "transferabledeposits(transferable deposits)",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "otherliabilities(other liabilities)"
        ],
        "column_names_original_en": [
          "otherassets",
          "timedeposits",
          "enddate",
          "bondissue",
          "transferabledeposits",
          "liabilitiestonfinst",
          "otherliabilities"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "enddate(deadline)",
          "indextitle(index name)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "id",
          "enddate",
          "indextitle",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "id(record identifier)",
          "enddate(deadline)",
          "indexvalue(index)",
          "indextype(index category)",
          "indexname(index name)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "id",
          "enddate",
          "indexvalue",
          "indextype",
          "indexname",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you check the data records of transferable deposits in the balance sheet of other deposit-taking corporations in our country? | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period)",
    "output_sequence": "select _ from _ | select transferabledeposits from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.otherassets",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.otherliabilities",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.indexvalue",
      "ed_producerpiformp.*",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.reportperiod"
    ]
  },
  {
    "question": "Can you help me check the records of other assets and other liabilities from the balance sheet of other depositary companies in the previous year?",
    "sql": "select otherassets, otherliabilities from ed_otherdepositorycorpbs where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year'));",
    "norm_sql": "select otherassets , otherliabilities from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "otherliabilities(other liabilities)",
          "enddate(deadline)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "timedeposits(fixed deposit for enterprises)",
          "otherassets(other assets)",
          "demanddeposits(current deposits for enterprises)",
          "foreignliabilities(foreign liabilities)"
        ],
        "column_names_original_en": [
          "otherliabilities",
          "enddate",
          "claimsonothernfinstitute",
          "timedeposits",
          "otherassets",
          "demanddeposits",
          "foreignliabilities"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "livalueap(light industry (in million of rmb))",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "enddate(deadline)",
          "reportperiod(data statistics interval)",
          "largecomap(large-scale enterprise (light industry))",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))"
        ],
        "column_names_original_en": [
          "livalueap",
          "industrialvalueadded",
          "enddate",
          "reportperiod",
          "largecomap",
          "industrialoutputvalueap",
          "stateownedcontrolledcomap"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))",
          "subjectsum(amount (in million of rmb))",
          "reportperiod(statistical period)",
          "subjectname(indicator name)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "id",
          "yoy",
          "subjectsum",
          "reportperiod",
          "subjectname",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you help me check the records of other assets and other liabilities from the balance sheet of other depositary companies in the previous year? | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets) , ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).enddate(deadline)",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) | select otherassets , otherliabilities from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_otherdepositorycorpbs.otherassets",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.foreignliabilities",
      "ed_industryproduction.*",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.enddate"
    ]
  },
  {
    "question": "Hi, please assist Wang in checking the purpose of the records of money issuance, reserve deposits, and non-financial institution deposits in the central bank's balance sheet.",
    "sql": "select moneyissuance, reservedeposits, nonfinancialorgdeposits from ed_moneyauthoritybs;",
    "norm_sql": "select moneyissuance , reservedeposits , nonfinancialorgdeposits from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "moneyissuance(currency issuance (in million of rmb))",
          "reservedeposits(reserve deposit (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "totalliability(total liabilities (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))"
        ],
        "column_names_original_en": [
          "moneyissuance",
          "reservedeposits",
          "nonfinancialorgdeposits",
          "totalliability",
          "otherforeignassets",
          "bondissuance",
          "moneyandgold"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "id(record identifier)",
          "enddate(deadline)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextitle",
          "id",
          "enddate",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "enddate(deadline)",
          "indexvalue(index value (points))",
          "reportperiod(data statistical period)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "id",
          "enddate",
          "indexvalue",
          "reportperiod",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hi, please assist Wang in checking the purpose of the records of money issuance, reserve deposits, and non-financial institution deposits in the central bank's balance sheet. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name)",
    "output_sequence": "select _ from _ | select moneyissuance , reservedeposits , nonfinancialorgdeposits from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.moneyandgold",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname"
    ]
  },
  {
    "question": "Help me check the records of \"Electric Power Industry\" in the \"Industrial Structure Classification Index,\" including the statistical period and corresponding index values.",
    "sql": "select reportperiod, indexvalue from ed_producerpiformp where indextype ='Industrial Structure Classification Index' and indexname ='Electric Power Industry';",
    "norm_sql": "select reportperiod , indexvalue from ed_producerpiformp where indextype = 'Industrial Structure Classification Index' and indexname = 'Electric Power Industry'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "id",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "timedeposits(fixed deposit for enterprises)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "claimsonotherresidentsec(claims on other resident sectors)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "otherliabilities(other liabilities)",
          "liabtootherfinancialcorp(liabilities to other financial companies)"
        ],
        "column_names_original_en": [
          "liabilitiestonfinst",
          "timedeposits",
          "depositsincludedinm2",
          "claimsonotherresidentsec",
          "claimsonothernfinstitute",
          "otherliabilities",
          "liabtootherfinancialcorp"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexname(index name)",
          "id(record identifier)",
          "indexvalue(index value (points))",
          "enddate(deadline)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indexname",
          "id",
          "indexvalue",
          "enddate",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help me check the records of \"Electric Power Industry\" in the \"Industrial Structure Classification Index,\" including the statistical period and corresponding index values. | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period)",
    "output_sequence": "select _ from _ where _ | select reportperiod , indexvalue from ed_producerpiformp where indextype = 'Industrial Structure Classification Index' and indexname = 'Electric Power Industry'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.reportperiod"
    ]
  },
  {
    "question": "Do you know the minimum amount of \"transaction fee\" for \"convertible bonds\"? Please list it.",
    "sql": "select valuefloor from ed_taxrate where typename ='Convertible Bond' and itemname = 'Transaction Fee';",
    "norm_sql": "select valuefloor from ed_taxrate where typename = 'Convertible Bond' and itemname = 'Transaction Fee'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "valuefloor(minimum value/starting point (rmb))",
          "ratioceiling(maximum ratio (%))",
          "maturity(repurchase period)",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "valuefloor",
          "ratioceiling",
          "maturity",
          "ratiofloor",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "moneyandgold(currency gold (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "totalliability(total liabilities (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "otherforeignassets",
          "abroadliability",
          "totalassets",
          "moneyandgold",
          "nonfinancialorgdeposits",
          "totalliability"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "id(record identifier)",
          "reportperiod(data statistics interval)",
          "rmbloans(rmb loans (in 100 million rmb))",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "enddate(deadline)",
          "reportarea(statistical region category)"
        ],
        "column_names_original_en": [
          "foreigncurrencyloans",
          "id",
          "reportperiod",
          "rmbloans",
          "undiscountedbacceptances",
          "enddate",
          "reportarea"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Do you know the minimum amount of \"transaction fee\" for \"convertible bonds\"? Please list it. | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).effectivedate(effective date) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category)",
    "output_sequence": "select _ from _ where _ | select valuefloor from ed_taxrate where typename = 'Convertible Bond' and itemname = 'Transaction Fee'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.valuefloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.maturity",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.effectivedate",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.totalliability",
      "ed_socialfinancing.*",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.id",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.reportarea"
    ]
  },
  {
    "question": "I want to know the index value of \"General Equipment Manufacturing Industry\" in the \"National Economic Industry Index\" for the \"same month of the previous year.\"",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod ='same month of the previous year' and indextype ='National Economic Industry Index' and indexname ='General Equipment Manufacturing Industry';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'same month of the previous year' and indextype = 'National Economic Industry Index' and indexname = 'General Equipment Manufacturing Industry'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "id",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))",
          "enddate(deadline)",
          "subjectname(indicator name)",
          "subjectsum(amount (in million of rmb))",
          "reportperiod(statistical period)"
        ],
        "column_names_original_en": [
          "id",
          "yoy",
          "enddate",
          "subjectname",
          "subjectsum",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "id(record identifier)",
          "quantity(quantity)",
          "enddate(deadline)",
          "statecode(primary country)",
          "eximvalue(amount)",
          "operatetype(import and export categories)",
          "avgprice(average price)"
        ],
        "column_names_original_en": [
          "id",
          "quantity",
          "enddate",
          "statecode",
          "eximvalue",
          "operatetype",
          "avgprice"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the index value of \"General Equipment Manufacturing Industry\" in the \"National Economic Industry Index\" for the \"same month of the previous year.\" | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).id(record identifier) , ed_productexportimport(product import and export volume).quantity(quantity) , ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).eximvalue(amount) , ed_productexportimport(product import and export volume).operatetype(import and export categories) , ed_productexportimport(product import and export volume).avgprice(average price)",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'same month of the previous year' and indextype = 'National Economic Industry Index' and indexname = 'General Equipment Manufacturing Industry'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.reportperiod",
      "ed_productexportimport.*",
      "ed_productexportimport.id",
      "ed_productexportimport.quantity",
      "ed_productexportimport.enddate",
      "ed_productexportimport.statecode",
      "ed_productexportimport.eximvalue",
      "ed_productexportimport.operatetype",
      "ed_productexportimport.avgprice"
    ]
  },
  {
    "question": "Calculate the GDP of each province and city for each year in the past five years.",
    "sql": "select enddate, province, gdp from ed_grossdomesticproduct where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-5 year'));",
    "norm_sql": "select enddate , province , gdp from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-5 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "enddate(deadline)",
          "gdp(gross domestic product (in million of rmb).)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "id(record identifier)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))"
        ],
        "column_names_original_en": [
          "province",
          "enddate",
          "gdp",
          "gdpgrowthyoy",
          "id",
          "thirdindustrygdp",
          "gdppercapita"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "id(record identifier)",
          "valueceiling(maximum value (rmb))",
          "maturity(repurchase period)",
          "valuefloor(minimum value/starting point (rmb))",
          "itemname(tax rate items)",
          "basiscode(billing baseline)",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "id",
          "valueceiling",
          "maturity",
          "valuefloor",
          "itemname",
          "basiscode",
          "ratioceiling"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "sovereigntycountry(the subject country)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "reportperiod(data statistical period)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "sovereigntycountry",
          "imvalueofgoods",
          "eximvalueofgoods",
          "gyoyofeximvaluegoods",
          "reportperiod",
          "gyoyofimvaluegoods",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Calculate the GDP of each province and city for each year in the past five years. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).enddate(deadline)",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , province , gdp from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-5 year' ) )",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_taxrate.*",
      "ed_taxrate.id",
      "ed_taxrate.valueceiling",
      "ed_taxrate.maturity",
      "ed_taxrate.valuefloor",
      "ed_taxrate.itemname",
      "ed_taxrate.basiscode",
      "ed_taxrate.ratioceiling",
      "ed_exportimport.*",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.reportperiod",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.enddate"
    ]
  },
  {
    "question": "Show the monthly records of foreign assets and foreign liabilities in the balance sheet of other depositary companies in the second half of last year.",
    "sql": "select enddate, foreignassets, foreignliabilities from ed_otherdepositorycorpbs where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year')) and strftime('%m', enddate)>'6';",
    "norm_sql": "select enddate , foreignassets , foreignliabilities from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) and strftime ( '%m' , enddate ) > '6'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) and strftime ( _ ) > _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "foreignassets(foreign net assets)",
          "foreignliabilities(foreign liabilities)",
          "transferabledeposits(transferable deposits)",
          "claimsongovernment(claims on government (net))",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "demanddeposits(current deposits for enterprises)"
        ],
        "column_names_original_en": [
          "enddate",
          "foreignassets",
          "foreignliabilities",
          "transferabledeposits",
          "claimsongovernment",
          "claimsonotherfinstitute",
          "demanddeposits"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "province(province and city)",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "id(record identifier)",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "socialfinancing(total social financing scale (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "foreigncurrencyloans",
          "province",
          "undiscountedbacceptances",
          "id",
          "definancingofnonfe",
          "corporatebonds",
          "socialfinancing"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "forex(foreign exchange (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "reservedeposits(reserve deposit (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))"
        ],
        "column_names_original_en": [
          "forex",
          "nonfinancialorgdeposits",
          "moneyreserves",
          "claimtononfinancialinst",
          "reservedeposits",
          "claimtootherfinnonfininst",
          "claimtosavingsinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Show the monthly records of foreign assets and foreign liabilities in the balance sheet of other depositary companies in the second half of last year. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) and strftime ( _ ) > _ | select enddate , foreignassets , foreignliabilities from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) and strftime ( '%m' , enddate ) > '6'",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.foreignliabilities",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_socialfinancing.*",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.province",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.id",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.socialfinancing",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.claimtosavingsinst"
    ]
  },
  {
    "question": "Find the records in the financial institution credit receipt and payment records in China where the total amount of various deposits exceeds 10 million RMB, and list unit deposits, fiscal deposits, and trust deposits.",
    "sql": "select corporatesavings, financedeposits, trustedandcreditdeposits from ed_chinafibalancesheetrmb where totalsavings > 10000000;",
    "norm_sql": "select corporatesavings , financedeposits , trustedandcreditdeposits from ed_chinafibalancesheetrmb where totalsavings > 10000000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "totalsavings(all deposit accounts)",
          "corporatesavings(unit deposit/corporate deposit)",
          "financedeposits(financial deposit)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "enddate(deadline)",
          "agriculturaldeposits(agricultural deposit)",
          "shorttermloans(short-term loan)"
        ],
        "column_names_original_en": [
          "totalsavings",
          "corporatesavings",
          "financedeposits",
          "trustedandcreditdeposits",
          "enddate",
          "agriculturaldeposits",
          "shorttermloans"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "selfownedmoney(own funds (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))",
          "id(record identifier)",
          "moneyissuance(currency issuance (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))"
        ],
        "column_names_original_en": [
          "selfownedmoney",
          "claimtononfinancialinst",
          "otherliability",
          "id",
          "moneyissuance",
          "claimtootherfinnonfininst",
          "governmentsavings"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "id(record identifier)",
          "entrustedloans(trust loan (in 100 million of rmb))",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "province(province and city)",
          "rmbloans(rmb loans (in 100 million rmb))"
        ],
        "column_names_original_en": [
          "undiscountedbacceptances",
          "corporatebonds",
          "id",
          "entrustedloans",
          "foreigncurrencyloans",
          "province",
          "rmbloans"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Find the records in the financial institution credit receipt and payment records in China where the total amount of various deposits exceeds 10 million RMB, and list unit deposits, fiscal deposits, and trust deposits. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb))",
    "output_sequence": "select _ from _ where _ | select corporatesavings , financedeposits , trustedandcreditdeposits from ed_chinafibalancesheetrmb where totalsavings > 10000000",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_socialfinancing.*",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.id",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.province",
      "ed_socialfinancing.rmbloans"
    ]
  },
  {
    "question": "From 2018 onwards, what are the top 10 records of highest paid-in capital in the balance sheet of other deposit-taking companies? List the time and paid-in capital data.",
    "sql": "select enddate, paidincapital from ed_otherdepositorycorpbs where strftime('%Y', enddate)>='2018' order by paidincapital desc limit 10;",
    "norm_sql": "select enddate , paidincapital from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) >= '2018' order by paidincapital desc limit 10",
    "sql_skeleton": "select _ from _ where strftime ( _ ) >= _ order by _ desc limit _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "paidincapital(paid-up capital)",
          "transferabledeposits(transferable deposits)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "bondissue(bond issuance)",
          "foreignliabilities(foreign liabilities)"
        ],
        "column_names_original_en": [
          "enddate",
          "paidincapital",
          "transferabledeposits",
          "claimsonotherfinstitute",
          "liabtootherdepositcorp",
          "bondissue",
          "foreignliabilities"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "province(province and city)",
          "reportarea(statistical category of region)",
          "jointventures(joint operating unit)",
          "foodbeverage(catering industry)",
          "collectiveunits(collective unit)",
          "id(record identifier)",
          "othersunits(other units)"
        ],
        "column_names_original_en": [
          "province",
          "reportarea",
          "jointventures",
          "foodbeverage",
          "collectiveunits",
          "id",
          "othersunits"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "selfownedmoney(own funds (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "selfownedmoney",
          "moneyreserves",
          "otherforeignassets",
          "forex",
          "claimtononfinancialinst",
          "claimtogovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "From 2018 onwards, what are the top 10 records of highest paid-in capital in the balance sheet of other deposit-taking companies? List the time and paid-in capital data. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) >= _ order by _ desc limit _ | select enddate , paidincapital from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) >= '2018' order by paidincapital desc limit 10",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.foreignliabilities",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.id",
      "ed_retailvalueofscgoods.othersunits",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.claimtogovernment"
    ]
  },
  {
    "question": "Show our actual paid-up capital amount.",
    "sql": "select capitalreceived from ed_chinamoneyandbanking;",
    "norm_sql": "select capitalreceived from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "capitalreceived(paid-up capital)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "centralbankbonds(central bank bonds)",
          "claimstogov(claims on the government (net))",
          "netabroadassets(foreign net assets)",
          "fcdeposits(foreign currency deposit.)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)"
        ],
        "column_names_original_en": [
          "capitalreceived",
          "moneyandquasimoney",
          "centralbankbonds",
          "claimstogov",
          "netabroadassets",
          "fcdeposits",
          "claimstootherinst"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "province(province)",
          "collectivecomap(collective enterprise (light industry))",
          "statstandard(statistical caliber)",
          "enddate(deadline)",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "mediumcomap(medium-sized enterprise (light industry))",
          "reportarea(statistical area category)"
        ],
        "column_names_original_en": [
          "province",
          "collectivecomap",
          "statstandard",
          "enddate",
          "industrialoutputvalueap",
          "mediumcomap",
          "reportarea"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "claimtosavingsinst",
          "moneyissuance",
          "governmentsavings",
          "moneyreserves",
          "forex",
          "otherliability",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Show our actual paid-up capital amount. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).reportarea(statistical area category) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier)",
    "output_sequence": "select _ from _ | select capitalreceived from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_industryproduction.*",
      "ed_industryproduction.province",
      "ed_industryproduction.collectivecomap",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.enddate",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.reportarea",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.id"
    ]
  },
  {
    "question": "What are the records of exports exceeding RMB 50 million in China more than 10 years ago? List the time, export amount, and year-on-year growth or decrease in exports.",
    "sql": "select enddate, exvalueofgoods, gyoyofexvaluegoods from ed_exportimport where exvalueofgoods > 50 and strftime('%Y', enddate) < strftime('%Y', DATE('now', '-10 year'));",
    "norm_sql": "select enddate , exvalueofgoods , gyoyofexvaluegoods from ed_exportimport where exvalueofgoods > 50 and strftime ( '%Y' , enddate ) < strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) < strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "enddate(deadline)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "province(province and city)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "exvalueofgoods",
          "gyoyofexvaluegoods",
          "province",
          "imvalueofgoods",
          "eximvalueofgoods",
          "id"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "nationaldefense(defense expenditure (in million of rmb))",
          "id(record identifier)",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))",
          "centralgovrevenue(central fiscal revenue (in million of yuan))",
          "agriculturetax(agricultural tax (in million of rmb))",
          "gsocialsecurity(social security expenditure growth rate)",
          "salestax(business tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "nationaldefense",
          "id",
          "centralgovexpenditure",
          "centralgovrevenue",
          "agriculturetax",
          "gsocialsecurity",
          "salestax"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "effectivedate(effective date)",
          "ratioceiling(maximum ratio (%))",
          "drrtype(reserve requirement ratio category)",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "id",
          "effectivedate",
          "ratioceiling",
          "drrtype",
          "ratiofloor"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the records of exports exceeding RMB 50 million in China more than 10 years ago? List the time, export amount, and year-on-year growth or decrease in exports. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).id(record identifier) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).centralgovrevenue(central fiscal revenue (in million of yuan)) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gsocialsecurity(social security expenditure growth rate) , ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) < strftime ( _ , date ( _ ) ) | select enddate , exvalueofgoods , gyoyofexvaluegoods from ed_exportimport where exvalueofgoods > 50 and strftime ( '%Y' , enddate ) < strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.enddate",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.province",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.id",
      "ed_financialbalance.*",
      "ed_financialbalance.nationaldefense",
      "ed_financialbalance.id",
      "ed_financialbalance.centralgovexpenditure",
      "ed_financialbalance.centralgovrevenue",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.gsocialsecurity",
      "ed_financialbalance.salestax",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratiofloor"
    ]
  },
  {
    "question": "Wang Gong wants to know which exchanges \"fund\" is traded on and what are the lowest and highest commission rates for \"trading commission rate\".",
    "sql": "select ratiofloor, ratioceiling from ed_taxrate where typename = 'fund' and itemname = 'trading commission rate';",
    "norm_sql": "select ratiofloor , ratioceiling from ed_taxrate where typename = 'fund' and itemname = 'trading commission rate'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "maturity(repurchase period)",
          "id(record identifier)",
          "valuefloor(minimum value/starting point (rmb))"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "ratiofloor",
          "ratioceiling",
          "maturity",
          "id",
          "valuefloor"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "netabroadassets(foreign net assets)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "capitalreceived(paid-up capital)",
          "bonds(bonds)"
        ],
        "column_names_original_en": [
          "moneyandquasimoney",
          "netabroadassets",
          "claimstospecificsavingorg",
          "claimstootherinst",
          "claimstononfinancialinst",
          "capitalreceived",
          "bonds"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "id",
          "reportperiod",
          "indexname",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Wang Gong wants to know which exchanges \"fund\" is traded on and what are the lowest and highest commission rates for \"trading commission rate\". | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline)",
    "output_sequence": "select _ from _ where _ | select ratiofloor , ratioceiling from ed_taxrate where typename = 'fund' and itemname = 'trading commission rate'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.maturity",
      "ed_taxrate.id",
      "ed_taxrate.valuefloor",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.bonds",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.enddate"
    ]
  },
  {
    "question": "I want to know the index value of \"Living Materials\" in the \"Industrial Structure Classification Index\" for \"Same Month Last Year\".",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod ='Same Month Last Year' and indextype ='Industrial Structure Classification Index' and indexname ='Living Materials';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'Same Month Last Year' and indextype = 'Industrial Structure Classification Index' and indexname = 'Living Materials'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "reportperiod(statistical period)",
          "id(record identifier)",
          "subjectsum(amount (in million of rmb))",
          "enddate(deadline)",
          "yoy(year-on-year increase or decrease (%))",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "id",
          "subjectsum",
          "enddate",
          "yoy",
          "subjectname"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "id",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "valueceiling(maximum value (rmb))",
          "maturity(repurchase period)",
          "id(record identifier)",
          "basiscode(billing baseline)",
          "itemname(tax rate items)",
          "effectivedate(effective date)",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "valueceiling",
          "maturity",
          "id",
          "basiscode",
          "itemname",
          "effectivedate",
          "ratioceiling"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the index value of \"Living Materials\" in the \"Industrial Structure Classification Index\" for \"Same Month Last Year\". | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%))",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'Same Month Last Year' and indextype = 'Industrial Structure Classification Index' and indexname = 'Living Materials'",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectname",
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_taxrate.*",
      "ed_taxrate.valueceiling",
      "ed_taxrate.maturity",
      "ed_taxrate.id",
      "ed_taxrate.basiscode",
      "ed_taxrate.itemname",
      "ed_taxrate.effectivedate",
      "ed_taxrate.ratioceiling"
    ]
  },
  {
    "question": "What is the performance of fiscal deposits and fiscal loans in the credit operation of financial institutions over the years?",
    "sql": "select financedeposits, loantogov from ed_chinafibalancesheetrmb;",
    "norm_sql": "select financedeposits , loantogov from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "financedeposits(financial deposit)",
          "loantogov(financial borrowing)",
          "reservedeposits(deposit of reserve funds)",
          "sharesandotherinvestments(equity and other investments)",
          "id(record identifier)",
          "datatype(data type code)",
          "agriculturaldeposits(agricultural deposit)"
        ],
        "column_names_original_en": [
          "financedeposits",
          "loantogov",
          "reservedeposits",
          "sharesandotherinvestments",
          "id",
          "datatype",
          "agriculturaldeposits"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "ratiofloor(minimum ratio (%))",
          "drrtype(reserve requirement ratio category)",
          "id(record identifier)",
          "ratioceiling(maximum ratio (%))",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "ratiofloor",
          "drrtype",
          "id",
          "ratioceiling",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "sovereigntycountry(the subject country)",
          "province(province and city)",
          "reportperiod(data statistical period)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "id(record identifier)",
          "reportarea(statistical category of the region)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "sovereigntycountry",
          "province",
          "reportperiod",
          "gyoyofeximvaluegoods",
          "id",
          "reportarea",
          "eximvalueofgoods"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the performance of fiscal deposits and fiscal loans in the credit operation of financial institutions over the years? | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars))",
    "output_sequence": "select _ from _ | select financedeposits , loantogov from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.effectivedate",
      "ed_exportimport.*",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.province",
      "ed_exportimport.reportperiod",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.id",
      "ed_exportimport.reportarea",
      "ed_exportimport.eximvalueofgoods"
    ]
  },
  {
    "question": "Please take a look at the record of the amount of demand deposits in the balance sheet of other depositary company assets.",
    "sql": "select demanddeposits from ed_otherdepositorycorpbs;",
    "norm_sql": "select demanddeposits from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "demanddeposits(current deposits for enterprises)",
          "reserveassets(reserve assets)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "id(record identifier)",
          "depositswithcentralbank(reserve deposit)",
          "paidincapital(paid-up capital)",
          "claimsonotherresidentsec(claims on other resident sectors)"
        ],
        "column_names_original_en": [
          "demanddeposits",
          "reserveassets",
          "liabtootherdepositcorp",
          "id",
          "depositswithcentralbank",
          "paidincapital",
          "claimsonotherresidentsec"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "salestax(business tax (in million of rmb))",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "agriculturetax(agricultural tax (in million of rmb))",
          "id(record identifier)",
          "commercialtax(business tax revenue (in million of rmb))",
          "individualincometax(personal income tax (in million of rmb))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "salestax",
          "localgovrevenue",
          "agriculturetax",
          "id",
          "commercialtax",
          "individualincometax",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "yoy(year-on-year increase or decrease (%))",
          "reportperiod(statistical period)",
          "id(record identifier)",
          "subjectsum(amount (in million of rmb))",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "enddate",
          "yoy",
          "reportperiod",
          "id",
          "subjectsum",
          "subjectname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please take a look at the record of the amount of demand deposits in the balance sheet of other depositary company assets. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enddate(deadline) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name)",
    "output_sequence": "select _ from _ | select demanddeposits from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_financialbalance.*",
      "ed_financialbalance.salestax",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.id",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.individualincometax",
      "ed_financialbalance.enddate",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.subjectname"
    ]
  },
  {
    "question": "Help me check the amount of the catering industry, wholesale and retail trade industry, and other industries in our country.",
    "sql": "select foodbeverage, wholesaleretailtrade, othersindustry from ed_retailvalueofscgoods;",
    "norm_sql": "select foodbeverage , wholesaleretailtrade , othersindustry from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "county(county)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "foodbeverage(catering industry)",
          "othersindustry(other industries)",
          "belowcounty(county and below)",
          "reportarea(statistical category of region)",
          "stateownedunits(state-owned unit)"
        ],
        "column_names_original_en": [
          "county",
          "wholesaleretailtrade",
          "foodbeverage",
          "othersindustry",
          "belowcounty",
          "reportarea",
          "stateownedunits"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "id(record identifier)",
          "unitname(company name)",
          "productname(product name)",
          "accuquantity(accumulated quantity)",
          "eximvalue(amount)",
          "enddate(deadline)",
          "accueximvalue(accumulated amount)"
        ],
        "column_names_original_en": [
          "id",
          "unitname",
          "productname",
          "accuquantity",
          "eximvalue",
          "enddate",
          "accueximvalue"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "comparetolastmonth(index month-on-month change (points))",
          "id(record identifier)",
          "indexvalue(index value)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexcode(index code)",
          "indextitle(index name)"
        ],
        "column_names_original_en": [
          "comparetolastmonth",
          "id",
          "indexvalue",
          "reportperiod",
          "enddate",
          "indexcode",
          "indextitle"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help me check the amount of the catering industry, wholesale and retail trade industry, and other industries in our country. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).id(record identifier) , ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).productname(product name) , ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).eximvalue(amount) , ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).accueximvalue(accumulated amount) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).indextitle(index name)",
    "output_sequence": "select _ from _ | select foodbeverage , wholesaleretailtrade , othersindustry from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_productexportimport.*",
      "ed_productexportimport.id",
      "ed_productexportimport.unitname",
      "ed_productexportimport.productname",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.eximvalue",
      "ed_productexportimport.enddate",
      "ed_productexportimport.accueximvalue",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.indextitle"
    ]
  },
  {
    "question": "List the amount of gross domestic product in China.",
    "sql": "select gdp from ed_grossdomesticproduct;",
    "norm_sql": "select gdp from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdp(gross domestic product (in million of rmb).)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "gdp",
          "secondindustrygdp",
          "primaryindustrygdp",
          "gdpgrowthyoy",
          "thirdindustrygdp",
          "gdppercapita",
          "id"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "reportperiod",
          "indexname",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "productname(product name)",
          "category(product category)",
          "unitname(company name)",
          "accuavgprice(cumulative average price)",
          "avgprice(average price)",
          "enddate(deadline)",
          "accueximvalue(accumulated amount)"
        ],
        "column_names_original_en": [
          "productname",
          "category",
          "unitname",
          "accuavgprice",
          "avgprice",
          "enddate",
          "accueximvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "List the amount of gross domestic product in China. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).productname(product name) , ed_productexportimport(product import and export volume).category(product category) , ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).accuavgprice(cumulative average price) , ed_productexportimport(product import and export volume).avgprice(average price) , ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).accueximvalue(accumulated amount)",
    "output_sequence": "select _ from _ | select gdp from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.id",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.id",
      "ed_productexportimport.*",
      "ed_productexportimport.productname",
      "ed_productexportimport.category",
      "ed_productexportimport.unitname",
      "ed_productexportimport.accuavgprice",
      "ed_productexportimport.avgprice",
      "ed_productexportimport.enddate",
      "ed_productexportimport.accueximvalue"
    ]
  },
  {
    "question": "Please check in the data table of other deposit-taking financial institutions, what is the number of deposits included in broad money and deposits excluded from broad money?",
    "sql": "select depositsincludedinm2, depositsexcludedfromm2 from ed_otherdepositorycorpbs;",
    "norm_sql": "select depositsincludedinm2 , depositsexcludedfromm2 from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "demanddeposits(current deposits for enterprises)",
          "foreignassets(foreign net assets)",
          "totalassets(total assets)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "depositsexcludedfromm2(deposits not included in broad money)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "totalliabilities(total liabilities)"
        ],
        "column_names_original_en": [
          "demanddeposits",
          "foreignassets",
          "totalassets",
          "depositsincludedinm2",
          "depositsexcludedfromm2",
          "liabtootherfinancialcorp",
          "totalliabilities"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "subjectsum(amount (in million of rmb))",
          "reportperiod(statistical period)",
          "enddate(deadline)",
          "subjectname(indicator name)",
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))"
        ],
        "column_names_original_en": [
          "subjectsum",
          "reportperiod",
          "enddate",
          "subjectname",
          "id",
          "yoy"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "enddate(deadline)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "selfemployed(individual unit)",
          "province(province and city)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "othersunits(other units)",
          "jointventures(joint operating unit)"
        ],
        "column_names_original_en": [
          "enddate",
          "wholesaleretailtrade",
          "selfemployed",
          "province",
          "retailvalueofscgoods",
          "othersunits",
          "jointventures"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please check in the data table of other deposit-taking financial institutions, what is the number of deposits included in broad money and deposits excluded from broad money? | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit)",
    "output_sequence": "select _ from _ | select depositsincludedinm2 , depositsexcludedfromm2 from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.jointventures"
    ]
  },
  {
    "question": "Hi, please search for the \"end-of-year cumulative\" social consumer goods retail amount for state-owned and collective units in Shanghai City.",
    "sql": "select stateownedunits, collectiveunits from ed_retailvalueofscgoods where province ='Shanghai' and reportperiod ='end-of-year cumulative';",
    "norm_sql": "select stateownedunits , collectiveunits from ed_retailvalueofscgoods where province = 'Shanghai' and reportperiod = 'end-of-year cumulative'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "province(province and city)",
          "stateownedunits(state-owned unit)",
          "collectiveunits(collective unit)",
          "enddate(deadline)",
          "county(county)",
          "foodbeverage(catering industry)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "province",
          "stateownedunits",
          "collectiveunits",
          "enddate",
          "county",
          "foodbeverage"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "individualincometax(personal income tax (in million of rmb))",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "salestax(business tax (in million of rmb))",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "centralgovrevenue(central fiscal revenue (in million of yuan))",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "gfinancialexpenditure",
          "individualincometax",
          "localgovrevenue",
          "salestax",
          "operatingexpensescesh",
          "centralgovrevenue",
          "centralgovexpenditure"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indextitle(index name)",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "indextitle",
          "enddate",
          "reportperiod",
          "id",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hi, please search for the \"end-of-year cumulative\" social consumer goods retail amount for state-owned and collective units in Shanghai City. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).centralgovrevenue(central fiscal revenue (in million of yuan)) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb)) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value)",
    "output_sequence": "select _ from _ where _ | select stateownedunits , collectiveunits from ed_retailvalueofscgoods where province = 'Shanghai' and reportperiod = 'end-of-year cumulative'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_financialbalance.*",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.individualincometax",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.salestax",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.centralgovrevenue",
      "ed_financialbalance.centralgovexpenditure",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.indexvalue"
    ]
  },
  {
    "question": "Please show the \"end of period cumulative\" amounts of social retail sales of wholesale and retail trade and food and beverage in each province and city in China in 2004.",
    "sql": "select province, wholesaleretailtrade, foodbeverage from ed_retailvalueofscgoods where reportarea ='province/city' and reportperiod ='end of period cumulative' and strftime('%Y', enddate)='2004';",
    "norm_sql": "select province , wholesaleretailtrade , foodbeverage from ed_retailvalueofscgoods where reportarea = 'province/city' and reportperiod = 'end of period cumulative' and strftime ( '%Y' , enddate ) = '2004'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "foodbeverage(catering industry)",
          "reportarea(statistical category of region)",
          "enddate(deadline)",
          "province(province and city)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "reportperiod(data statistical period)",
          "othersindustry(other industries)"
        ],
        "column_names_original_en": [
          "foodbeverage",
          "reportarea",
          "enddate",
          "province",
          "wholesaleretailtrade",
          "reportperiod",
          "othersindustry"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "subjectname(indicator name)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))"
        ],
        "column_names_original_en": [
          "enddate",
          "subjectname",
          "reportperiod",
          "subjectsum",
          "id",
          "yoy"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "cashinvault(cash on hand)",
          "claimsonotherresidentsec(claims on other resident sectors)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "otherliabilities(other liabilities)"
        ],
        "column_names_original_en": [
          "liabilitiestonfinst",
          "claimsonothernfinstitute",
          "cashinvault",
          "claimsonotherresidentsec",
          "claimsonotherfinstitute",
          "liabtootherfinancialcorp",
          "otherliabilities"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please show the \"end of period cumulative\" amounts of social retail sales of wholesale and retail trade and food and beverage in each province and city in China in 2004. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = _ | select province , wholesaleretailtrade , foodbeverage from ed_retailvalueofscgoods where reportarea = 'province/city' and reportperiod = 'end of period cumulative' and strftime ( '%Y' , enddate ) = '2004'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.otherliabilities"
    ]
  },
  {
    "question": "What is the charging basis of \"Handling fee\" for \"convertible bonds\"? What are the minimum and maximum rates?",
    "sql": "select basiscode, ratiofloor, ratioceiling from ed_taxrate where typename = 'Convertible Bonds' and itemname = 'Handling Fee';",
    "norm_sql": "select basiscode , ratiofloor , ratioceiling from ed_taxrate where typename = 'Convertible Bonds' and itemname = 'Handling Fee'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpitrafficcommunication(transportation and communication year-over-year)",
          "qoqcpi(resident consumer price index (month-on-month))",
          "qoqcpitobacco(tobacco, alcohol, and supplies month-on-month)",
          "qoqcpifamilyequipmentservice(household equipment and services month-on-month)",
          "cumcpihousing(accumulated average of residence)",
          "cumcpicloth(cumulative average of clothing)",
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)"
        ],
        "column_names_original_en": [
          "yoycpitrafficcommunication",
          "qoqcpi",
          "qoqcpitobacco",
          "qoqcpifamilyequipmentservice",
          "cumcpihousing",
          "cumcpicloth",
          "yoycpifamilyequipmentservice"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "basiscode(billing baseline)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "maturity(repurchase period)",
          "secumarket(securities market)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "basiscode",
          "ratiofloor",
          "ratioceiling",
          "maturity",
          "secumarket"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "enddate(deadline)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "centralbankbonds(central bank bonds)",
          "claimstogov(claims on the government (net))",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)"
        ],
        "column_names_original_en": [
          "moneyandquasimoney",
          "enddate",
          "claimstononfinancialinst",
          "claimstospecificsavingorg",
          "centralbankbonds",
          "claimstogov",
          "claimstootherinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the charging basis of \"Handling fee\" for \"convertible bonds\"? What are the minimum and maximum rates? | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpitrafficcommunication(transportation and communication year-over-year) , ed_consumerpriceindex(consumer price index).qoqcpi(resident consumer price index (month-on-month)) , ed_consumerpriceindex(consumer price index).qoqcpitobacco(tobacco, alcohol, and supplies month-on-month) , ed_consumerpriceindex(consumer price index).qoqcpifamilyequipmentservice(household equipment and services month-on-month) , ed_consumerpriceindex(consumer price index).cumcpihousing(accumulated average of residence) , ed_consumerpriceindex(consumer price index).cumcpicloth(cumulative average of clothing) , ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).secumarket(securities market) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
    "output_sequence": "select _ from _ where _ | select basiscode , ratiofloor , ratioceiling from ed_taxrate where typename = 'Convertible Bonds' and itemname = 'Handling Fee'",
    "tc_original": [
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpitrafficcommunication",
      "ed_consumerpriceindex.qoqcpi",
      "ed_consumerpriceindex.qoqcpitobacco",
      "ed_consumerpriceindex.qoqcpifamilyequipmentservice",
      "ed_consumerpriceindex.cumcpihousing",
      "ed_consumerpriceindex.cumcpicloth",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice",
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.basiscode",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.maturity",
      "ed_taxrate.secumarket",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstootherinst"
    ]
  },
  {
    "question": "In 2020, what are the names and corresponding values of the sub-indices of our \"National Economic Sector Index\" mostly showing \"same month of the previous year\"?",
    "sql": "select indexname, indexvalue from ed_producerpiformp where indextype='National Economic Sector Index' and reportperiod='same month of the previous year' and strftime('%Y', enddate)='2020';",
    "norm_sql": "select indexname , indexvalue from ed_producerpiformp where indextype = 'National Economic Sector Index' and reportperiod = 'same month of the previous year' and strftime ( '%Y' , enddate ) = '2020'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "id"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "claimsongovernment(claims on government (net))",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "paidincapital(paid-up capital)",
          "depositswithcentralbank(reserve deposit)",
          "claimsonotherdepositcorp(claims on other deposit-based company)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "claimsongovernment",
          "claimsonotherfinstitute",
          "paidincapital",
          "depositswithcentralbank",
          "claimsonotherdepositcorp"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "fcdeposits(foreign currency deposit.)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "netabroadassets(foreign net assets)",
          "money1(currency (narrow money m1))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "claimstootherinst",
          "fcdeposits",
          "claimstospecificsavingorg",
          "netabroadassets",
          "money1"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In 2020, what are the names and corresponding values of the sub-indices of our \"National Economic Sector Index\" mostly showing \"same month of the previous year\"? | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = _ | select indexname , indexvalue from ed_producerpiformp where indextype = 'National Economic Sector Index' and reportperiod = 'same month of the previous year' and strftime ( '%Y' , enddate ) = '2020'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.money1"
    ]
  },
  {
    "question": "I want to know the annual growth rate of policy subsidies in Beijing.",
    "sql": "select gsupportunderdevelopedarea from ed_financialbalance where province ='Beijing';",
    "norm_sql": "select gsupportunderdevelopedarea from ed_financialbalance where province = 'Beijing'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "province(province and city)",
          "gsupportunderdevelopedarea(policy subsidy expenditure growth rate)",
          "gtaxs(various tax revenues growth rate)",
          "gnationaldefense(defense expenditure growth rate)",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "reportperiod(data statistical period)",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "gsupportunderdevelopedarea",
          "gtaxs",
          "gnationaldefense",
          "expenditurecitymc",
          "reportperiod",
          "operatingexpensescesh"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "enddate(deadline)",
          "yoy(year-on-year increase or decrease (%))",
          "subjectname(indicator name)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "subjectsum",
          "enddate",
          "yoy",
          "subjectname",
          "id"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "indexvalue(index value)",
          "indextitle(index name)",
          "reportarea(statistical region category)",
          "indexcode(index code)",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "indextitle",
          "reportarea",
          "indexcode",
          "reportperiod",
          "id",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the annual growth rate of policy subsidies in Beijing. | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).gsupportunderdevelopedarea(policy subsidy expenditure growth rate) , ed_financialbalance(government revenue and expenditure).gtaxs(various tax revenues growth rate) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).id(record identifier) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).enddate(deadline)",
    "output_sequence": "select _ from _ where _ | select gsupportunderdevelopedarea from ed_financialbalance where province = 'Beijing'",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.province",
      "ed_financialbalance.gsupportunderdevelopedarea",
      "ed_financialbalance.gtaxs",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.operatingexpensescesh",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.id",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.enddate"
    ]
  },
  {
    "question": "Please provide the data on China's Gross Domestic Product (GDP).",
    "sql": "select gdp from ed_grossdomesticproduct;",
    "norm_sql": "select gdp from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdp(gross domestic product (in million of rmb).)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "gdp",
          "gdpgrowthyoy",
          "gdppercapita",
          "thirdindustrygdp",
          "enddate",
          "id",
          "province"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "statecode(primary country)",
          "productname(product name)",
          "quantity(quantity)",
          "accueximvalue(accumulated amount)",
          "currencycode(currency unit)",
          "enddate(deadline)",
          "avgprice(average price)"
        ],
        "column_names_original_en": [
          "statecode",
          "productname",
          "quantity",
          "accueximvalue",
          "currencycode",
          "enddate",
          "avgprice"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "collectivecomap(collective enterprise (light industry))",
          "statstandard(statistical caliber)",
          "reportperiod(data statistics interval)",
          "mediumcomap(medium-sized enterprise (light industry))",
          "reportarea(statistical area category)",
          "enddate(deadline)",
          "livalueap(light industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "collectivecomap",
          "statstandard",
          "reportperiod",
          "mediumcomap",
          "reportarea",
          "enddate",
          "livalueap"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please provide the data on China's Gross Domestic Product (GDP). | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).productname(product name) , ed_productexportimport(product import and export volume).quantity(quantity) , ed_productexportimport(product import and export volume).accueximvalue(accumulated amount) , ed_productexportimport(product import and export volume).currencycode(currency unit) , ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).avgprice(average price) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb))",
    "output_sequence": "select _ from _ | select gdp from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_productexportimport.*",
      "ed_productexportimport.statecode",
      "ed_productexportimport.productname",
      "ed_productexportimport.quantity",
      "ed_productexportimport.accueximvalue",
      "ed_productexportimport.currencycode",
      "ed_productexportimport.enddate",
      "ed_productexportimport.avgprice",
      "ed_industryproduction.*",
      "ed_industryproduction.collectivecomap",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.enddate",
      "ed_industryproduction.livalueap"
    ]
  },
  {
    "question": "In the past 10 years, how much is the monthly recorded increase in RMB loans, and provide the year-on-year growth rate data?",
    "sql": "select enddate, subjectsum, yoy from ed_newincreasingloan where reportperiod ='monthly' and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-10 year'));",
    "norm_sql": "select enddate , subjectsum , yoy from ed_newincreasingloan where reportperiod = 'monthly' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))",
          "subjectname(indicator name)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "subjectsum",
          "yoy",
          "subjectname",
          "id"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "indexname(index name)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "indexname",
          "id",
          "reportperiod",
          "enddate"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "enddate(deadline)",
          "comparetolastmonth(index month-on-month change (points))",
          "indexcode(index code)",
          "reportarea(statistical region category)",
          "indextitle(index name)",
          "reportperiod(data statistical period)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "enddate",
          "comparetolastmonth",
          "indexcode",
          "reportarea",
          "indextitle",
          "reportperiod",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In the past 10 years, how much is the monthly recorded increase in RMB loans, and provide the year-on-year growth rate data? | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).id(record identifier) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).indexvalue(index value)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , subjectsum , yoy from ed_newincreasingloan where reportperiod = 'monthly' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.id",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.enddate",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.indexvalue"
    ]
  },
  {
    "question": "How much is the annual industrial added value amount in the \"national\" \"state-owned and large-scale industrial enterprises\" in the past ten years?",
    "sql": "select enddate, industrialvalueadded from ed_industryproduction where reportarea ='national' and statstandard ='state-owned and large-scale industrial enterprises' and reportperiod ='annual' and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-10 year'));",
    "norm_sql": "select enddate , industrialvalueadded from ed_industryproduction where reportarea = 'national' and statstandard = 'state-owned and large-scale industrial enterprises' and reportperiod = 'annual' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "id(record identifier)",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "id",
          "enddate",
          "reportperiod",
          "indexname"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "enddate(deadline)",
          "operatetype(import and export categories)",
          "unitname(company name)",
          "accuquantity(accumulated quantity)",
          "id(record identifier)",
          "eximvalue(amount)",
          "category(product category)"
        ],
        "column_names_original_en": [
          "enddate",
          "operatetype",
          "unitname",
          "accuquantity",
          "id",
          "eximvalue",
          "category"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "province(province)",
          "minitypecomap(small-scale enterprise (light industry))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded",
          "province",
          "minitypecomap"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How much is the annual industrial added value amount in the \"national\" \"state-owned and large-scale industrial enterprises\" in the past ten years? | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).operatetype(import and export categories) , ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).id(record identifier) , ed_productexportimport(product import and export volume).eximvalue(amount) , ed_productexportimport(product import and export volume).category(product category) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , industrialvalueadded from ed_industryproduction where reportarea = 'national' and statstandard = 'state-owned and large-scale industrial enterprises' and reportperiod = 'annual' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "tc_original": [
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname",
      "ed_productexportimport.*",
      "ed_productexportimport.enddate",
      "ed_productexportimport.operatetype",
      "ed_productexportimport.unitname",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.id",
      "ed_productexportimport.eximvalue",
      "ed_productexportimport.category",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.province",
      "ed_industryproduction.minitypecomap"
    ]
  },
  {
    "question": "I want to understand the records of time, import amount, and export amount when the import amount was less than 50 million and the export amount was greater than 50 million in China 10 years ago.",
    "sql": "select enddate, imvalueofgoods, exvalueofgoods from ed_exportimport where imvalueofgoods < 50 and exvalueofgoods > 50 and strftime('%Y', enddate) < strftime('%Y', DATE('now', '-10 year'));",
    "norm_sql": "select enddate , imvalueofgoods , exvalueofgoods from ed_exportimport where imvalueofgoods < 50 and exvalueofgoods > 50 and strftime ( '%Y' , enddate ) < strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) < strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "enddate(deadline)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "id(record identifier)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "enddate",
          "exvalueofgoods",
          "imvalueofgoods",
          "gyoyofimvaluegoods",
          "id",
          "gyoyofexvaluegoods",
          "gyoyofeximvaluegoods"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "reportarea(statistical region category)",
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "comparetolastmonth(index month-on-month change (points))",
          "enddate(deadline)",
          "id(record identifier)",
          "indexcode(index code)"
        ],
        "column_names_original_en": [
          "reportarea",
          "reportperiod",
          "indextitle",
          "comparetolastmonth",
          "enddate",
          "id",
          "indexcode"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "enddate(deadline)",
          "creditloans(trust loan (in 100 million rmb))",
          "reportperiod(data statistics interval)",
          "id(record identifier)",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "socialfinancing",
          "corporatebonds",
          "enddate",
          "creditloans",
          "reportperiod",
          "id",
          "undiscountedbacceptances"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to understand the records of time, import amount, and export amount when the import amount was less than 50 million and the export amount was greater than 50 million in China 10 years ago. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).indexcode(index code) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) < strftime ( _ , date ( _ ) ) | select enddate , imvalueofgoods , exvalueofgoods from ed_exportimport where imvalueofgoods < 50 and exvalueofgoods > 50 and strftime ( '%Y' , enddate ) < strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.enddate",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.id",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.indexcode",
      "ed_socialfinancing.*",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.creditloans",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.id",
      "ed_socialfinancing.undiscountedbacceptances"
    ]
  },
  {
    "question": "What is the GDP of the first, second, and third industries in Beijing in each year?",
    "sql": "select primaryindustrygdp, secondindustrygdp, thirdindustrygdp from ed_grossdomesticproduct where province ='Beijing';",
    "norm_sql": "select primaryindustrygdp , secondindustrygdp , thirdindustrygdp from ed_grossdomesticproduct where province = 'Beijing'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "enddate(deadline)",
          "gdp(gross domestic product (in million of rmb).)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)"
        ],
        "column_names_original_en": [
          "province",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp",
          "enddate",
          "gdp",
          "gdpgrowthyoy"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "drrtype(reserve requirement ratio category)",
          "id(record identifier)",
          "effectivedate(effective date)",
          "ratioceiling(maximum ratio (%))",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "drrtype",
          "id",
          "effectivedate",
          "ratioceiling",
          "ratiofloor"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "indexcode(index code)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indexvalue(index value)",
          "reportarea(statistical region category)",
          "enddate(deadline)",
          "comparetolastmonth(index month-on-month change (points))"
        ],
        "column_names_original_en": [
          "indexcode",
          "id",
          "reportperiod",
          "indexvalue",
          "reportarea",
          "enddate",
          "comparetolastmonth"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the GDP of the first, second, and third industries in Beijing in each year? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points))",
    "output_sequence": "select _ from _ where _ | select primaryindustrygdp , secondindustrygdp , thirdindustrygdp from ed_grossdomesticproduct where province = 'Beijing'",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.ratiofloor",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.comparetolastmonth"
    ]
  },
  {
    "question": "What is the minimum payment ratio for \"excess reserve requirement ratio\" in \"Chinese small and medium-sized banks\"?",
    "sql": "select ratiofloor from ed_taxrate where typename='Chinese small and medium-sized banks' and itemname='excess reserve requirement ratio';",
    "norm_sql": "select ratiofloor from ed_taxrate where typename = 'Chinese small and medium-sized banks' and itemname = 'excess reserve requirement ratio'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enterpriseincome(enterprise income (in million of rmb))",
          "enterpriseincometax(enterprise income tax (in million of rmb))",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "gtaxs(various tax revenues growth rate)",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "enterpriseincome",
          "enterpriseincometax",
          "localgovexpenditure",
          "gtaxs",
          "gfinancialrevenue",
          "expenditurecitymc",
          "province"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)",
          "secumarket(securities market)",
          "basiscode(billing baseline)",
          "maturity(repurchase period)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "ratiofloor",
          "effectivedate",
          "secumarket",
          "basiscode",
          "maturity"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)",
          "enddate(deadline)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indextype",
          "indexname",
          "indexvalue",
          "id",
          "enddate",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the minimum payment ratio for \"excess reserve requirement ratio\" in \"Chinese small and medium-sized banks\"? | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gtaxs(various tax revenues growth rate) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).province(province and city) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).maturity(repurchase period) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period)",
    "output_sequence": "select _ from _ where _ | select ratiofloor from ed_taxrate where typename = 'Chinese small and medium-sized banks' and itemname = 'excess reserve requirement ratio'",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.enterpriseincome",
      "ed_financialbalance.enterpriseincometax",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.gtaxs",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.province",
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.effectivedate",
      "ed_taxrate.secumarket",
      "ed_taxrate.basiscode",
      "ed_taxrate.maturity",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod"
    ]
  },
  {
    "question": "Help me see in the balance sheet of other depositary corporate assets liability, which year has the highest total liabilities and how much is it?",
    "sql": "select enddate, totalliabilities from ed_otherdepositorycorpbs order by totalliabilities desc limit 1;",
    "norm_sql": "select enddate , totalliabilities from ed_otherdepositorycorpbs order by totalliabilities desc limit 1",
    "sql_skeleton": "select _ from _ order by _ desc limit _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "totalliabilities(total liabilities)",
          "claimsoncentralbank(claims on central bank)",
          "claimsonotherresidentsec(claims on other resident sectors)",
          "bondissue(bond issuance)",
          "demanddeposits(current deposits for enterprises)",
          "claimsonotherdepositcorp(claims on other deposit-based company)"
        ],
        "column_names_original_en": [
          "enddate",
          "totalliabilities",
          "claimsoncentralbank",
          "claimsonotherresidentsec",
          "bondissue",
          "demanddeposits",
          "claimsonotherdepositcorp"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "totalsavings(all deposit accounts)",
          "currencyname(currency unit code)",
          "orgdeposits(government and institutional deposits)",
          "enddate(deadline)",
          "shorttermloans(short-term loan)",
          "mediumlongtermloans(medium-to-long term loans)",
          "equityandotherinvestment(securities and investments)"
        ],
        "column_names_original_en": [
          "totalsavings",
          "currencyname",
          "orgdeposits",
          "enddate",
          "shorttermloans",
          "mediumlongtermloans",
          "equityandotherinvestment"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "foodbeverage(catering industry)",
          "province(province and city)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "city(city)",
          "reportperiod(data statistical period)",
          "stateownedunits(state-owned unit)",
          "othersindustry(other industries)"
        ],
        "column_names_original_en": [
          "foodbeverage",
          "province",
          "wholesaleretailtrade",
          "city",
          "reportperiod",
          "stateownedunits",
          "othersindustry"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help me see in the balance sheet of other depositary corporate assets liability, which year has the highest total liabilities and how much is it? | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).orgdeposits(government and institutional deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries)",
    "output_sequence": "select _ from _ order by _ desc limit _ | select enddate , totalliabilities from ed_otherdepositorycorpbs order by totalliabilities desc limit 1",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.orgdeposits",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.othersindustry"
    ]
  },
  {
    "question": "Hey, help Li Gong take a look at the total value of imports and exports in our country, as well as the year-on-year changes in the total value of imports and exports.",
    "sql": "select eximvalueofgoods, gyoyofeximvaluegoods from ed_exportimport;",
    "norm_sql": "select eximvalueofgoods , gyoyofeximvaluegoods from ed_exportimport",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "effectivedate(effective date)",
          "ratioceiling(maximum ratio (%))",
          "drrtype(reserve requirement ratio category)",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "id",
          "effectivedate",
          "ratioceiling",
          "drrtype",
          "ratiofloor"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "sovereigntycountry(the subject country)",
          "reportarea(statistical category of the region)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "commodity(product name)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "eximvalueofgoods",
          "gyoyofeximvaluegoods",
          "sovereigntycountry",
          "reportarea",
          "imvalueofgoods",
          "commodity",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "hivalueap(heavy industry (in million of rmb))",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "mediumcomap(medium-sized enterprise (light industry))",
          "province(province)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "livalueap(light industry (in million of rmb))",
          "minitypecomap(small-scale enterprise (light industry))"
        ],
        "column_names_original_en": [
          "hivalueap",
          "industrialoutputvalueap",
          "mediumcomap",
          "province",
          "industrialvalueadded",
          "livalueap",
          "minitypecomap"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hey, help Li Gong take a look at the total value of imports and exports in our country, as well as the year-on-year changes in the total value of imports and exports. | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).reportperiod(data statistical period) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry))",
    "output_sequence": "select _ from _ | select eximvalueofgoods , gyoyofeximvaluegoods from ed_exportimport",
    "tc_original": [
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratiofloor",
      "ed_exportimport.*",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.reportarea",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.commodity",
      "ed_exportimport.reportperiod",
      "ed_industryproduction.*",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.province",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.minitypecomap"
    ]
  },
  {
    "question": "What are the records of bond issuance, foreign liabilities, and government savings? Please check in the central bank's balance sheet.",
    "sql": "select bondissuance, abroadliability, governmentsavings from ed_moneyauthoritybs;",
    "norm_sql": "select bondissuance , abroadliability , governmentsavings from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "bondissuance(bond issuance (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "enddate(deadline)",
          "totalassets(total assets (in million of rmb).)"
        ],
        "column_names_original_en": [
          "bondissuance",
          "abroadliability",
          "governmentsavings",
          "otherforeignassets",
          "claimtootherfinnonfininst",
          "enddate",
          "totalassets"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "secondindustrygdp(the second industry (in million of rmb))",
          "province(province and city)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "id(record identifier)",
          "enddate(deadline)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "secondindustrygdp",
          "province",
          "gdpgrowthyoy",
          "primaryindustrygdp",
          "id",
          "enddate",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "province(province)",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "livalueap(light industry (in million of rmb))",
          "reportarea(statistical area category)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "enddate(deadline)",
          "reportperiod(data statistics interval)"
        ],
        "column_names_original_en": [
          "province",
          "industrialoutputvalueap",
          "livalueap",
          "reportarea",
          "industrialvalueadded",
          "enddate",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the records of bond issuance, foreign liabilities, and government savings? Please check in the central bank's balance sheet. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportperiod(data statistics interval)",
    "output_sequence": "select _ from _ | select bondissuance , abroadliability , governmentsavings from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.totalassets",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_industryproduction.*",
      "ed_industryproduction.province",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportperiod"
    ]
  },
  {
    "question": "How much is the amount of our reserve deposits in the balance sheet of the monetary authority?",
    "sql": "select reservedeposits from ed_moneyauthoritybs;",
    "norm_sql": "select reservedeposits from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "reservedeposits(reserve deposit (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "totalliability(total liabilities (in million of rmb))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reservedeposits",
          "moneyissuance",
          "governmentsavings",
          "moneyreserves",
          "claimtosavingsinst",
          "totalliability",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "id(record identifier)",
          "foodbeverage(catering industry)",
          "jointventures(joint operating unit)",
          "enddate(deadline)",
          "othersindustry(other industries)",
          "selfemployed(individual unit)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))"
        ],
        "column_names_original_en": [
          "id",
          "foodbeverage",
          "jointventures",
          "enddate",
          "othersindustry",
          "selfemployed",
          "retailvalueofscgoods"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "totalsavings(all deposit accounts)",
          "datatype(data type code)",
          "orgdeposits(government and institutional deposits)",
          "domesticloans((one) domestic loan)",
          "loantogov(financial borrowing)",
          "sharesandotherinvestments(equity and other investments)",
          "totalloans(various loans)"
        ],
        "column_names_original_en": [
          "totalsavings",
          "datatype",
          "orgdeposits",
          "domesticloans",
          "loantogov",
          "sharesandotherinvestments",
          "totalloans"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How much is the amount of our reserve deposits in the balance sheet of the monetary authority? | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).orgdeposits(government and institutional deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans)",
    "output_sequence": "select _ from _ | select reservedeposits from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.enddate",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.id",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.orgdeposits",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.totalloans"
    ]
  },
  {
    "question": "Can you help me take a look at our overseas net assets and domestic credit amount?",
    "sql": "select netabroadassets, domesticloans from ed_chinamoneyandbanking;",
    "norm_sql": "select netabroadassets , domesticloans from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "centralbankbonds(central bank bonds)",
          "fcdeposits(foreign currency deposit.)",
          "quasimoney(quasi-currency)",
          "netabroadassets(foreign net assets)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))"
        ],
        "column_names_original_en": [
          "centralbankbonds",
          "fcdeposits",
          "quasimoney",
          "netabroadassets",
          "moneyandquasimoney",
          "domesticloans",
          "claimstogov"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "enddate(deadline)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "commodity(product name)"
        ],
        "column_names_original_en": [
          "eximvalueofgoods",
          "gyoyofexvaluegoods",
          "gyoyofeximvaluegoods",
          "exvalueofgoods",
          "enddate",
          "imvalueofgoods",
          "commodity"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "equityandotherinvestment(securities and investments)",
          "mediumlongtermloans(medium-to-long term loans)",
          "id(record identifier)",
          "sharesandotherinvestments(equity and other investments)",
          "shorttermloans(short-term loan)",
          "overseasloans((two) overseas loans)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)"
        ],
        "column_names_original_en": [
          "equityandotherinvestment",
          "mediumlongtermloans",
          "id",
          "sharesandotherinvestments",
          "shorttermloans",
          "overseasloans",
          "trustedandcreditdeposits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you help me take a look at our overseas net assets and domestic credit amount? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).commodity(product name) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
    "output_sequence": "select _ from _ | select netabroadassets , domesticloans from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_exportimport.*",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.enddate",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.commodity",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits"
    ]
  },
  {
    "question": "Please provide a record of foreign exchange, currency and gold, and other foreign assets in the balance sheet of the monetary authority.",
    "sql": "select forex, moneyandgold, otherforeignassets from ed_moneyauthoritybs;",
    "norm_sql": "select forex , moneyandgold , otherforeignassets from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "valuefloor(minimum value/starting point (rmb))",
          "basiscode(billing baseline)",
          "itemname(tax rate items)",
          "effectivedate(effective date)",
          "secumarket(securities market)",
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "valuefloor",
          "basiscode",
          "itemname",
          "effectivedate",
          "secumarket",
          "ratioceiling",
          "id"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "totalliability(total liabilities (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))",
          "id(record identifier)",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))"
        ],
        "column_names_original_en": [
          "forex",
          "moneyandgold",
          "otherforeignassets",
          "totalliability",
          "otherliability",
          "id",
          "claimtononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "indexname",
          "indexvalue",
          "enddate",
          "reportperiod",
          "indextype",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please provide a record of foreign exchange, currency and gold, and other foreign assets in the balance sheet of the monetary authority. | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).id(record identifier) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).id(record identifier)",
    "output_sequence": "select _ from _ | select forex , moneyandgold , otherforeignassets from ed_moneyauthoritybs",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.valuefloor",
      "ed_taxrate.basiscode",
      "ed_taxrate.itemname",
      "ed_taxrate.effectivedate",
      "ed_taxrate.secumarket",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.id",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.id"
    ]
  },
  {
    "question": "Please show the year-end accumulated RMB new loan amount for the past three years, and also show the year-on-year growth rate.",
    "sql": "select enddate, subjectsum, yoy from ed_newincreasingloan where reportperiod ='Year-end Accumulated' and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select enddate , subjectsum , yoy from ed_newincreasingloan where reportperiod = 'Year-end Accumulated' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))",
          "subjectname(indicator name)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "subjectsum",
          "yoy",
          "subjectname",
          "id"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month)",
          "yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year)",
          "cumcpitobacco(cumulative average of tobacco, alcohol, and supplies)",
          "cumcpi(cumulative average of resident consumer price index)",
          "enddate(deadline)",
          "qoqcpicloth(clothing month-on-month)",
          "qoqcpimedicare(healthcare and personal care products month-on-month)"
        ],
        "column_names_original_en": [
          "qoqcpientertainmentservice",
          "yoycpientertainmentservice",
          "cumcpitobacco",
          "cumcpi",
          "enddate",
          "qoqcpicloth",
          "qoqcpimedicare"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "jointventures(joint operating unit)",
          "othersindustry(other industries)",
          "county(county)",
          "foodbeverage(catering industry)",
          "reportperiod(data statistical period)",
          "selfemployed(individual unit)"
        ],
        "column_names_original_en": [
          "retailvalueofscgoods",
          "jointventures",
          "othersindustry",
          "county",
          "foodbeverage",
          "reportperiod",
          "selfemployed"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please show the year-end accumulated RMB new loan amount for the past three years, and also show the year-on-year growth rate. | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).id(record identifier) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month) , ed_consumerpriceindex(consumer price index).yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year) , ed_consumerpriceindex(consumer price index).cumcpitobacco(cumulative average of tobacco, alcohol, and supplies) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).enddate(deadline) , ed_consumerpriceindex(consumer price index).qoqcpicloth(clothing month-on-month) , ed_consumerpriceindex(consumer price index).qoqcpimedicare(healthcare and personal care products month-on-month) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , subjectsum , yoy from ed_newincreasingloan where reportperiod = 'Year-end Accumulated' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.id",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.qoqcpientertainmentservice",
      "ed_consumerpriceindex.yoycpientertainmentservice",
      "ed_consumerpriceindex.cumcpitobacco",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.enddate",
      "ed_consumerpriceindex.qoqcpicloth",
      "ed_consumerpriceindex.qoqcpimedicare",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.selfemployed"
    ]
  },
  {
    "question": "Find the records from last year in the balance sheets of other deposit-taking companies where foreign liabilities exceeded 5 million, and display the time, foreign net assets, and foreign liabilities amount.",
    "sql": "select enddate, foreignassets, foreignliabilities from ed_otherdepositorycorpbs where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year')) and foreignliabilities > 5000000;",
    "norm_sql": "select enddate , foreignassets , foreignliabilities from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) and foreignliabilities > 5000000",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) and _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "foreignassets(foreign net assets)",
          "foreignliabilities(foreign liabilities)",
          "reserveassets(reserve assets)",
          "totalliabilities(total liabilities)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "otherassets(other assets)"
        ],
        "column_names_original_en": [
          "enddate",
          "foreignassets",
          "foreignliabilities",
          "reserveassets",
          "totalliabilities",
          "claimsonotherdepositcorp",
          "otherassets"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "effectivedate(effective date)",
          "drrtype(reserve requirement ratio category)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "id",
          "effectivedate",
          "drrtype",
          "ratiofloor",
          "ratioceiling"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "bonds(bonds)",
          "quasimoney(quasi-currency)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "id(record identifier)",
          "centralbankbonds(central bank bonds)"
        ],
        "column_names_original_en": [
          "bonds",
          "quasimoney",
          "domesticloans",
          "claimstogov",
          "claimstononfinancialinst",
          "id",
          "centralbankbonds"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Find the records from last year in the balance sheets of other deposit-taking companies where foreign liabilities exceeded 5 million, and display the time, foreign net assets, and foreign liabilities amount. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds)",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) and _ | select enddate , foreignassets , foreignliabilities from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) and foreignliabilities > 5000000",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.foreignliabilities",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.otherassets",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.ratioceiling",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.centralbankbonds"
    ]
  },
  {
    "question": "Search for the year in which the highest number of bonds was issued in the balance sheets of other deposit-type financial companies, and what is the quantity?",
    "sql": "select enddate, bondissue from ed_otherdepositorycorpbs order by bondissue desc limit 1;",
    "norm_sql": "select enddate , bondissue from ed_otherdepositorycorpbs order by bondissue desc limit 1",
    "sql_skeleton": "select _ from _ order by _ desc limit _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "bondissue(bond issuance)",
          "foreignliabilities(foreign liabilities)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "totalassets(total assets)",
          "claimsonotherresidentsec(claims on other resident sectors)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "bondissue",
          "foreignliabilities",
          "depositsincludedinm2",
          "totalassets",
          "claimsonotherresidentsec",
          "claimsongovernment"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "selfemployed(individual unit)",
          "othersindustry(other industries)",
          "jointventures(joint operating unit)",
          "stateownedunits(state-owned unit)",
          "belowcounty(county and below)",
          "province(province and city)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "selfemployed",
          "othersindustry",
          "jointventures",
          "stateownedunits",
          "belowcounty",
          "province",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "effectivedate(effective date)",
          "basiscode(billing baseline)",
          "itemname(tax rate items)",
          "secumarket(securities market)",
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)",
          "maturity(repurchase period)"
        ],
        "column_names_original_en": [
          "effectivedate",
          "basiscode",
          "itemname",
          "secumarket",
          "ratioceiling",
          "id",
          "maturity"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Search for the year in which the highest number of bonds was issued in the balance sheets of other deposit-type financial companies, and what is the quantity? | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).maturity(repurchase period)",
    "output_sequence": "select _ from _ order by _ desc limit _ | select enddate , bondissue from ed_otherdepositorycorpbs order by bondissue desc limit 1",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.foreignliabilities",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.enddate",
      "ed_taxrate.*",
      "ed_taxrate.effectivedate",
      "ed_taxrate.basiscode",
      "ed_taxrate.itemname",
      "ed_taxrate.secumarket",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.id",
      "ed_taxrate.maturity"
    ]
  },
  {
    "question": "Could you please query the data records of annual per capita Gross Domestic Product in China?",
    "sql": "select gdppercapita from ed_grossdomesticproduct;",
    "norm_sql": "select gdppercapita from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "gdp(gross domestic product (in million of rmb).)",
          "province(province and city)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)"
        ],
        "column_names_original_en": [
          "enddate",
          "gdppercapita",
          "thirdindustrygdp",
          "secondindustrygdp",
          "gdp",
          "province",
          "gdpgrowthyoy"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index)",
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "indexname",
          "reportperiod",
          "indextype",
          "id"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "indexname(index name)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "reportperiod",
          "id",
          "indexname",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Could you please query the data records of annual per capita Gross Domestic Product in China? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).id(record identifier) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline)",
    "output_sequence": "select _ from _ | select gdppercapita from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.id",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.enddate"
    ]
  },
  {
    "question": "Look at the records of national defense expenditure in China that exceeded 100 million yuan before the year 2000. List the fields of time, national defense expenditure, and national defense expenditure growth rate.",
    "sql": "select enddate, nationaldefense, gnationaldefense from ed_financialbalance where nationaldefense > 100 and strftime('%Y', enddate)<'2000';",
    "norm_sql": "select enddate , nationaldefense , gnationaldefense from ed_financialbalance where nationaldefense > 100 and strftime ( '%Y' , enddate ) < '2000'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) < _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "nationaldefense(defense expenditure (in million of rmb))",
          "gnationaldefense(defense expenditure growth rate)",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "reportperiod(data statistical period)",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "commercialtax(business tax revenue (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "nationaldefense",
          "gnationaldefense",
          "localgovexpenditure",
          "reportperiod",
          "gfinancialrevenue",
          "commercialtax"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "othersindustry(other industries)",
          "othersunits(other units)",
          "county(county)",
          "stateownedunits(state-owned unit)",
          "enddate(deadline)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "othersindustry",
          "othersunits",
          "county",
          "stateownedunits",
          "enddate",
          "wholesaleretailtrade",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "enddate(deadline)",
          "indexvalue(index value (points))",
          "reportperiod(data statistical period)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "id",
          "enddate",
          "indexvalue",
          "reportperiod",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Look at the records of national defense expenditure in China that exceeded 100 million yuan before the year 2000. List the fields of time, national defense expenditure, and national defense expenditure growth rate. | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) < _ | select enddate , nationaldefense , gnationaldefense from ed_financialbalance where nationaldefense > 100 and strftime ( '%Y' , enddate ) < '2000'",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.nationaldefense",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.commercialtax",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.reportperiod",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname"
    ]
  },
  {
    "question": "Can you provide the records in the data recorded by \"month\" where the year-on-year growth rate of the new RMB loans is greater than 0? List the time, new amount, and year-on-year growth rate.",
    "sql": "select enddate,  subjectsum, yoy from ed_newincreasingloan where reportperiod ='month' and yoy > 0;",
    "norm_sql": "select enddate , subjectsum , yoy from ed_newincreasingloan where reportperiod = 'month' and yoy > 0",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "subjectsum",
          "yoy",
          "id",
          "subjectname"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "enddate(deadline)",
          "reportarea(statistical category of the region)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "sovereigntycountry(the subject country)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "imvalueofgoods",
          "enddate",
          "reportarea",
          "gyoyofexvaluegoods",
          "exvalueofgoods",
          "sovereigntycountry",
          "gyoyofeximvaluegoods"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "domesticloans((one) domestic loan)",
          "financedeposits(financial deposit)",
          "enddate(deadline)",
          "totalsavings(all deposit accounts)",
          "currencyname(currency unit code)",
          "totalloans(various loans)",
          "corporatesavings(unit deposit/corporate deposit)"
        ],
        "column_names_original_en": [
          "domesticloans",
          "financedeposits",
          "enddate",
          "totalsavings",
          "currencyname",
          "totalloans",
          "corporatesavings"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you provide the records in the data recorded by \"month\" where the year-on-year growth rate of the new RMB loans is greater than 0? List the time, new amount, and year-on-year growth rate. | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit)",
    "output_sequence": "select _ from _ where _ | select enddate , subjectsum , yoy from ed_newincreasingloan where reportperiod = 'month' and yoy > 0",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectname",
      "ed_exportimport.*",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.enddate",
      "ed_exportimport.reportarea",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.corporatesavings"
    ]
  },
  {
    "question": "Please list the highest ratio of \"reserve requirement ratio\" in \"deposit-taking financial institutions\".",
    "sql": "select ratioceiling from ed_taxrate where typename ='deposit-taking financial institutions' and itemname ='reserve requirement ratio';",
    "norm_sql": "select ratioceiling from ed_taxrate where typename = 'deposit-taking financial institutions' and itemname = 'reserve requirement ratio'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "ratioceiling(maximum ratio (%))",
          "ratiofloor(minimum ratio (%))",
          "valueceiling(maximum value (rmb))",
          "secumarket(securities market)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "ratioceiling",
          "ratiofloor",
          "valueceiling",
          "secumarket",
          "id"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "effectivedate(effective date)",
          "ratiofloor(minimum ratio (%))",
          "id(record identifier)",
          "ratioceiling(maximum ratio (%))",
          "drrtype(reserve requirement ratio category)"
        ],
        "column_names_original_en": [
          "effectivedate",
          "ratiofloor",
          "id",
          "ratioceiling",
          "drrtype"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services)",
          "cumcpifood(accumulated average of food)",
          "yoycpi(resident consumer price index (year-on-year))",
          "yoycpifood(food year-on-year)",
          "cumcpi(cumulative average of resident consumer price index)",
          "yoycpihousing(residential year-on-year)",
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)"
        ],
        "column_names_original_en": [
          "cumcpifamilyequipmentservice",
          "cumcpifood",
          "yoycpi",
          "yoycpifood",
          "cumcpi",
          "yoycpihousing",
          "yoycpifamilyequipmentservice"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the highest ratio of \"reserve requirement ratio\" in \"deposit-taking financial institutions\". | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).id(record identifier) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services) , ed_consumerpriceindex(consumer price index).cumcpifood(accumulated average of food) , ed_consumerpriceindex(consumer price index).yoycpi(resident consumer price index (year-on-year)) , ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).yoycpihousing(residential year-on-year) , ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year)",
    "output_sequence": "select _ from _ where _ | select ratioceiling from ed_taxrate where typename = 'deposit-taking financial institutions' and itemname = 'reserve requirement ratio'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.valueceiling",
      "ed_taxrate.secumarket",
      "ed_taxrate.id",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.drrtype",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.cumcpifamilyequipmentservice",
      "ed_consumerpriceindex.cumcpifood",
      "ed_consumerpriceindex.yoycpi",
      "ed_consumerpriceindex.yoycpifood",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.yoycpihousing",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice"
    ]
  },
  {
    "question": "Help to calculate the quantities of Forex and Money and Gold when the total liabilities exceed 10 million and total assets are less than 5 million, and see which year's data it belongs to.",
    "sql": "select forex, moneyandgold, enddate from ed_moneyauthoritybs where totalliability > 10 and totalassets < 5;",
    "norm_sql": "select forex , moneyandgold , enddate from ed_moneyauthoritybs where totalliability > 10 and totalassets < 5",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "totalliability(total liabilities (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "reservedeposits(reserve deposit (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "forex",
          "moneyandgold",
          "totalassets",
          "totalliability",
          "claimtosavingsinst",
          "reservedeposits"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "indexname(index name)",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "indexname",
          "enddate",
          "reportperiod",
          "id"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "collectiveunits(collective unit)",
          "reportperiod(data statistical period)",
          "selfemployed(individual unit)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "foodbeverage(catering industry)",
          "enddate(deadline)",
          "county(county)"
        ],
        "column_names_original_en": [
          "collectiveunits",
          "reportperiod",
          "selfemployed",
          "retailvalueofscgoods",
          "foodbeverage",
          "enddate",
          "county"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help to calculate the quantities of Forex and Money and Gold when the total liabilities exceed 10 million and total assets are less than 5 million, and see which year's data it belongs to. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county)",
    "output_sequence": "select _ from _ where _ | select forex , moneyandgold , enddate from ed_moneyauthoritybs where totalliability > 10 and totalassets < 5",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.reservedeposits",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.id",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.county"
    ]
  },
  {
    "question": "In the past three years, there have been significant changes in the balance sheet data of the monetary authorities. Please list the amount of government claims and government deposits for each year.",
    "sql": "select enddate, claimtogovernment, governmentsavings from ed_moneyauthoritybs where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select enddate , claimtogovernment , governmentsavings from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "reportarea(statistical region category)",
          "indextitle(index name)",
          "id(record identifier)",
          "indexcode(index code)",
          "comparetolastmonth(index month-on-month change (points))",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "reportarea",
          "indextitle",
          "id",
          "indexcode",
          "comparetolastmonth",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "claimtogovernment(claims on the government (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "totalliability(total liabilities (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "claimtogovernment",
          "governmentsavings",
          "claimtosavingsinst",
          "moneyissuance",
          "claimtononfinancialinst",
          "totalliability"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "othersunits(other units)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "collectiveunits(collective unit)",
          "enddate(deadline)",
          "province(province and city)",
          "reportarea(statistical category of region)",
          "foodbeverage(catering industry)"
        ],
        "column_names_original_en": [
          "othersunits",
          "wholesaleretailtrade",
          "collectiveunits",
          "enddate",
          "province",
          "reportarea",
          "foodbeverage"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In the past three years, there have been significant changes in the balance sheet data of the monetary authorities. Please list the amount of government claims and government deposits for each year. | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).indexvalue(index value) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry)",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , claimtogovernment , governmentsavings from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.indexvalue",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.totalliability",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.foodbeverage"
    ]
  },
  {
    "question": "In which year did the \"end of period cumulative\" recorded RMB new loan amount reach its maximum? Please display the time and amount.",
    "sql": "select enddate, subjectsum from ed_newincreasingloan where reportperiod='End of period cumulative' order by subjectsum desc limit 1;",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'End of period cumulative' order by subjectsum desc limit 1",
    "sql_skeleton": "select _ from _ where _ order by _ desc limit _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "subjectname(indicator name)",
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "subjectsum",
          "subjectname",
          "id",
          "yoy"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "cashinvault(cash on hand)",
          "savingdeposits(resident savings deposits)",
          "otherliabilities(other liabilities)",
          "depositswithcentralbank(reserve deposit)",
          "totalliabilities(total liabilities)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "depositsexcludedfromm2(deposits not included in broad money)"
        ],
        "column_names_original_en": [
          "cashinvault",
          "savingdeposits",
          "otherliabilities",
          "depositswithcentralbank",
          "totalliabilities",
          "liabilitiestocentralbank",
          "depositsexcludedfromm2"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))",
          "agriculturetax(agricultural tax (in million of rmb))",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "gfinancialexpenditure(fiscal expenditure growth rate)"
        ],
        "column_names_original_en": [
          "centralgovexpenditure",
          "agriculturetax",
          "localgovrevenue",
          "enddate",
          "id",
          "reportperiod",
          "gfinancialexpenditure"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In which year did the \"end of period cumulative\" recorded RMB new loan amount reach its maximum? Please display the time and amount. | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate)",
    "output_sequence": "select _ from _ where _ order by _ desc limit _ | select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'End of period cumulative' order by subjectsum desc limit 1",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_financialbalance.*",
      "ed_financialbalance.centralgovexpenditure",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.enddate",
      "ed_financialbalance.id",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.gfinancialexpenditure"
    ]
  },
  {
    "question": "Show me the index value of \"Means of Production\" in the same month of the previous year.",
    "sql": "select indexvalue from ed_producerpiformp where indexname='Means of Production' and reportperiod='Previous Year Same Month' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select indexvalue from ed_producerpiformp where indexname = 'Means of Production' and reportperiod = 'Previous Year Same Month' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)",
          "indextype(index category)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "indexname",
          "indexvalue",
          "id",
          "indextype"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "yoy(year-on-year increase or decrease (%))",
          "enddate(deadline)",
          "subjectsum(amount (in million of rmb))",
          "reportperiod(statistical period)",
          "subjectname(indicator name)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "yoy",
          "enddate",
          "subjectsum",
          "reportperiod",
          "subjectname",
          "id"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "largecomap(large-scale enterprise (light industry))",
          "minitypecomap(small-scale enterprise (light industry))",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "province(province)",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "largecomap",
          "minitypecomap",
          "stateownedcontrolledcomap",
          "industrialvalueadded",
          "province",
          "industrialoutputvalueap",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Show me the index value of \"Means of Production\" in the same month of the previous year. | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indextype(index category) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).id(record identifier) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).enddate(deadline)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select indexvalue from ed_producerpiformp where indexname = 'Means of Production' and reportperiod = 'Previous Year Same Month' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indextype",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.id",
      "ed_industryproduction.*",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.minitypecomap",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.province",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.enddate"
    ]
  },
  {
    "question": "What is the total retail sales of consumer goods in our state-owned units in recent years?",
    "sql": "select stateownedunits from ed_retailvalueofscgoods;",
    "norm_sql": "select stateownedunits from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "stateownedunits(state-owned unit)",
          "selfemployed(individual unit)",
          "reportarea(statistical category of region)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "reportperiod(data statistical period)",
          "jointventures(joint operating unit)"
        ],
        "column_names_original_en": [
          "stateownedunits",
          "selfemployed",
          "reportarea",
          "retailvalueofscgoods",
          "wholesaleretailtrade",
          "reportperiod",
          "jointventures"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "secondindustrygdp(the second industry (in million of rmb))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "gdp(gross domestic product (in million of rmb).)",
          "province(province and city)",
          "enddate(deadline)",
          "id(record identifier)",
          "gdppercapita(per capita gross domestic product (cny/person))"
        ],
        "column_names_original_en": [
          "secondindustrygdp",
          "gdpgrowthyoy",
          "gdp",
          "province",
          "enddate",
          "id",
          "gdppercapita"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "effectivedate(effective date)",
          "drrtype(reserve requirement ratio category)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "ratiofloor",
          "ratioceiling",
          "effectivedate",
          "drrtype",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the total retail sales of consumer goods in our state-owned units in recent years? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).id(record identifier)",
    "output_sequence": "select _ from _ | select stateownedunits from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.jointventures",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.gdppercapita",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.id"
    ]
  },
  {
    "question": "What are the maximum and minimum values in the RMB new loan records recorded as \"end-of-period cumulative\"?",
    "sql": "select max(subjectsum), min(subjectsum) from ed_newincreasingloan where reportperiod ='end-of-period cumulative';",
    "norm_sql": "select max ( subjectsum ) , min ( subjectsum ) from ed_newincreasingloan where reportperiod = 'end-of-period cumulative'",
    "sql_skeleton": "select max ( _ ) , min ( _ ) from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "enddate(deadline)",
          "subjectname(indicator name)",
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "subjectsum",
          "enddate",
          "subjectname",
          "id",
          "yoy"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "capitalreceived(paid-up capital)",
          "money1(currency (narrow money m1))",
          "fcdeposits(foreign currency deposit.)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "domesticloans(domestic credit)",
          "netabroadassets(foreign net assets)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)"
        ],
        "column_names_original_en": [
          "capitalreceived",
          "money1",
          "fcdeposits",
          "claimstononfinancialinst",
          "domesticloans",
          "netabroadassets",
          "claimstootherinst"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexname(index name)",
          "id(record identifier)",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indexvalue(index)",
          "indextype(index category)"
        ],
        "column_names_original_en": [
          "indexname",
          "id",
          "enddate",
          "reportperiod",
          "indexvalue",
          "indextype"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the maximum and minimum values in the RMB new loan records recorded as \"end-of-period cumulative\"? | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indextype(index category)",
    "output_sequence": "select max ( _ ) , min ( _ ) from _ where _ | select max ( subjectsum ) , min ( subjectsum ) from ed_newincreasingloan where reportperiod = 'end-of-period cumulative'",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indextype"
    ]
  },
  {
    "question": "I want to see the index value of \"Beverage Manufacturing Industry\" in \"Previous Year Same Period\" and \"National Economic Industry Index.\"",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod ='Previous Year Same Period' and indextype ='National Economic Industry Index' and indexname ='Beverage Manufacturing Industry';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'Previous Year Same Period' and indextype = 'National Economic Industry Index' and indexname = 'Beverage Manufacturing Industry'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "id(record identifier)",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "province(province and city)",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "creditloans(trust loan (in 100 million rmb))",
          "reportperiod(data statistics interval)"
        ],
        "column_names_original_en": [
          "socialfinancing",
          "id",
          "corporatebonds",
          "province",
          "foreigncurrencyloans",
          "creditloans",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "enddate(deadline)",
          "reportarea(statistical region category)",
          "comparetolastmonth(index month-on-month change (points))",
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "indexcode(index code)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportarea",
          "comparetolastmonth",
          "reportperiod",
          "indextitle",
          "indexcode",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to see the index value of \"Beverage Manufacturing Industry\" in \"Previous Year Same Period\" and \"National Economic Industry Index.\" | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).indexvalue(index value)",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'Previous Year Same Period' and indextype = 'National Economic Industry Index' and indexname = 'Beverage Manufacturing Industry'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_socialfinancing.*",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.id",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.province",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.creditloans",
      "ed_socialfinancing.reportperiod",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.indexvalue"
    ]
  },
  {
    "question": "In 2010, is there a record of net foreign assets? How much is it?",
    "sql": "select netabroadassets from ed_chinamoneyandbanking where strftime('%Y', enddate)='2010';",
    "norm_sql": "select netabroadassets from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = '2010'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "netabroadassets(foreign net assets)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "domesticloans(domestic credit)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "quasimoney(quasi-currency)",
          "money1(currency (narrow money m1))"
        ],
        "column_names_original_en": [
          "enddate",
          "netabroadassets",
          "claimstospecificsavingorg",
          "domesticloans",
          "moneyandquasimoney",
          "quasimoney",
          "money1"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "qoqcpitobacco(tobacco, alcohol, and supplies month-on-month)",
          "qoqcpihousing(residential month-to-month)",
          "cumcpimedicare(cumulative average of healthcare and personal care products)",
          "yoycpitrafficcommunication(transportation and communication year-over-year)",
          "yoycpihousing(residential year-on-year)",
          "yoycpi(resident consumer price index (year-on-year))",
          "cumcpi(cumulative average of resident consumer price index)"
        ],
        "column_names_original_en": [
          "qoqcpitobacco",
          "qoqcpihousing",
          "cumcpimedicare",
          "yoycpitrafficcommunication",
          "yoycpihousing",
          "yoycpi",
          "cumcpi"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "moneyissuance(currency issuance (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "governmentsavings(government deposits (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))"
        ],
        "column_names_original_en": [
          "moneyissuance",
          "moneyreserves",
          "totalassets",
          "governmentsavings",
          "otherliability",
          "otherforeignassets",
          "moneyandgold"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In 2010, is there a record of net foreign assets? How much is it? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).qoqcpitobacco(tobacco, alcohol, and supplies month-on-month) , ed_consumerpriceindex(consumer price index).qoqcpihousing(residential month-to-month) , ed_consumerpriceindex(consumer price index).cumcpimedicare(cumulative average of healthcare and personal care products) , ed_consumerpriceindex(consumer price index).yoycpitrafficcommunication(transportation and communication year-over-year) , ed_consumerpriceindex(consumer price index).yoycpihousing(residential year-on-year) , ed_consumerpriceindex(consumer price index).yoycpi(resident consumer price index (year-on-year)) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select netabroadassets from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = '2010'",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.money1",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.qoqcpitobacco",
      "ed_consumerpriceindex.qoqcpihousing",
      "ed_consumerpriceindex.cumcpimedicare",
      "ed_consumerpriceindex.yoycpitrafficcommunication",
      "ed_consumerpriceindex.yoycpihousing",
      "ed_consumerpriceindex.yoycpi",
      "ed_consumerpriceindex.cumcpi",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.moneyandgold"
    ]
  },
  {
    "question": "Do you know the record of foreign liabilities and government savings in the balance sheet of the monetary authority?",
    "sql": "select abroadliability, governmentsavings from ed_moneyauthoritybs;",
    "norm_sql": "select abroadliability , governmentsavings from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "creditloans(trust loan (in 100 million rmb))",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "reportperiod(data statistics interval)",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "corporatebonds",
          "socialfinancing",
          "foreigncurrencyloans",
          "creditloans",
          "undiscountedbacceptances",
          "reportperiod",
          "province"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "comparetolastmonth(index month-on-month change (points))",
          "indextitle(index name)",
          "indexvalue(index value)",
          "enddate(deadline)",
          "reportarea(statistical region category)",
          "indexcode(index code)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "comparetolastmonth",
          "indextitle",
          "indexvalue",
          "enddate",
          "reportarea",
          "indexcode"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "abroadliability(abroad liabilities (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "selfownedmoney(own funds (in million of rmb))",
          "totalliability(total liabilities (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))"
        ],
        "column_names_original_en": [
          "abroadliability",
          "governmentsavings",
          "selfownedmoney",
          "totalliability",
          "bondissuance",
          "claimtononfinancialinst",
          "claimtosavingsinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Do you know the record of foreign liabilities and government savings in the balance sheet of the monetary authority? | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).province(province and city) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).indexcode(index code) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
    "output_sequence": "select _ from _ | select abroadliability , governmentsavings from ed_moneyauthoritybs",
    "tc_original": [
      "ed_socialfinancing.*",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.creditloans",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.province",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.indexcode",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.claimtosavingsinst"
    ]
  },
  {
    "question": "Please help me with the total retail value of consumer goods in our Zhejiang province, including all available records.",
    "sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province ='Zhejiang';",
    "norm_sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Zhejiang'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "stateownedunits(state-owned unit)",
          "province(province and city)",
          "collectiveunits(collective unit)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "city(city)",
          "belowcounty(county and below)",
          "othersindustry(other industries)"
        ],
        "column_names_original_en": [
          "stateownedunits",
          "province",
          "collectiveunits",
          "retailvalueofscgoods",
          "city",
          "belowcounty",
          "othersindustry"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "quantity(quantity)",
          "unitname(company name)",
          "reportperiod(data statistical period)",
          "currencycode(currency unit)",
          "eximvalue(amount)",
          "accuavgprice(cumulative average price)",
          "productname(product name)"
        ],
        "column_names_original_en": [
          "quantity",
          "unitname",
          "reportperiod",
          "currencycode",
          "eximvalue",
          "accuavgprice",
          "productname"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexname(index name)",
          "indextype(index category)",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "enddate(deadline)",
          "indexvalue(index)"
        ],
        "column_names_original_en": [
          "indexname",
          "indextype",
          "reportperiod",
          "id",
          "enddate",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me with the total retail value of consumer goods in our Zhejiang province, including all available records. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).quantity(quantity) , ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).currencycode(currency unit) , ed_productexportimport(product import and export volume).eximvalue(amount) , ed_productexportimport(product import and export volume).accuavgprice(cumulative average price) , ed_productexportimport(product import and export volume).productname(product name) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index)",
    "output_sequence": "select _ from _ where _ | select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Zhejiang'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_productexportimport.*",
      "ed_productexportimport.quantity",
      "ed_productexportimport.unitname",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.currencycode",
      "ed_productexportimport.eximvalue",
      "ed_productexportimport.accuavgprice",
      "ed_productexportimport.productname",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue"
    ]
  },
  {
    "question": "Please list the data of year-on-year increase in exports and year-on-year decrease in imports in China over the years, and provide the import amount, export amount, and year-on-year growth/decline data.",
    "sql": "select imvalueofgoods, exvalueofgoods, gyoyofexvaluegoods, gyoyofimvaluegoods from ed_exportimport where gyoyofexvaluegoods > 0 and gyoyofimvaluegoods < 0;",
    "norm_sql": "select imvalueofgoods , exvalueofgoods , gyoyofexvaluegoods , gyoyofimvaluegoods from ed_exportimport where gyoyofexvaluegoods > 0 and gyoyofimvaluegoods < 0",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "sovereigntycountry(the subject country)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "exvalueofgoods",
          "imvalueofgoods",
          "gyoyofexvaluegoods",
          "gyoyofimvaluegoods",
          "eximvalueofgoods",
          "sovereigntycountry",
          "gyoyofeximvaluegoods"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "effectivedate(effective date)",
          "id(record identifier)",
          "drrtype(reserve requirement ratio category)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "effectivedate",
          "id",
          "drrtype",
          "ratiofloor",
          "ratioceiling"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "currencycode(currency unit)",
          "statecode(primary country)",
          "accuavgprice(cumulative average price)",
          "category(product category)",
          "eximvalue(amount)",
          "unitname(company name)",
          "accuquantity(accumulated quantity)"
        ],
        "column_names_original_en": [
          "currencycode",
          "statecode",
          "accuavgprice",
          "category",
          "eximvalue",
          "unitname",
          "accuquantity"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the data of year-on-year increase in exports and year-on-year decrease in imports in China over the years, and provide the import amount, export amount, and year-on-year growth/decline data. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).currencycode(currency unit) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).accuavgprice(cumulative average price) , ed_productexportimport(product import and export volume).category(product category) , ed_productexportimport(product import and export volume).eximvalue(amount) , ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).accuquantity(accumulated quantity)",
    "output_sequence": "select _ from _ where _ | select imvalueofgoods , exvalueofgoods , gyoyofexvaluegoods , gyoyofimvaluegoods from ed_exportimport where gyoyofexvaluegoods > 0 and gyoyofimvaluegoods < 0",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.gyoyofeximvaluegoods",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.ratioceiling",
      "ed_productexportimport.*",
      "ed_productexportimport.currencycode",
      "ed_productexportimport.statecode",
      "ed_productexportimport.accuavgprice",
      "ed_productexportimport.category",
      "ed_productexportimport.eximvalue",
      "ed_productexportimport.unitname",
      "ed_productexportimport.accuquantity"
    ]
  },
  {
    "question": "Recently we have been compiling customs import and export statistics. Help me search for the time in China in 2010 when the import amount was lower than 20 million and the export amount exceeded 30 million.",
    "sql": "select enddate, imvalueofgoods from ed_exportimport where imvalueofgoods < 20 and exvalueofgoods > 30 and strftime('%Y', enddate)='2010';",
    "norm_sql": "select enddate , imvalueofgoods from ed_exportimport where imvalueofgoods < 20 and exvalueofgoods > 30 and strftime ( '%Y' , enddate ) = '2010'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "enddate(deadline)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "commodity(product name)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "enddate",
          "exvalueofgoods",
          "imvalueofgoods",
          "eximvalueofgoods",
          "gyoyofimvaluegoods",
          "commodity",
          "gyoyofexvaluegoods"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "collectivecomap(collective enterprise (light industry))",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "mediumcomap(medium-sized enterprise (light industry))",
          "minitypecomap(small-scale enterprise (light industry))",
          "province(province)",
          "hivalueap(heavy industry (in million of rmb))",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))"
        ],
        "column_names_original_en": [
          "collectivecomap",
          "stateownedcontrolledcomap",
          "mediumcomap",
          "minitypecomap",
          "province",
          "hivalueap",
          "industrialoutputvalueap"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "ratioceiling(maximum ratio (%))",
          "ratiofloor(minimum ratio (%))",
          "drrtype(reserve requirement ratio category)",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "id",
          "ratioceiling",
          "ratiofloor",
          "drrtype",
          "effectivedate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Recently we have been compiling customs import and export statistics. Help me search for the time in China in 2010 when the import amount was lower than 20 million and the export amount exceeded 30 million. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = _ | select enddate , imvalueofgoods from ed_exportimport where imvalueofgoods < 20 and exvalueofgoods > 30 and strftime ( '%Y' , enddate ) = '2010'",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.enddate",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.commodity",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_industryproduction.*",
      "ed_industryproduction.collectivecomap",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.minitypecomap",
      "ed_industryproduction.province",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.industrialoutputvalueap",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.effectivedate"
    ]
  },
  {
    "question": "List the amount of reserve deposits made by each financial institution in the credit records of financial institutions.",
    "sql": "select reservedeposits from ed_chinafibalancesheetrmb;",
    "norm_sql": "select reservedeposits from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "reservedeposits(deposit of reserve funds)",
          "loantogov(financial borrowing)",
          "domesticloans((one) domestic loan)",
          "savingsdeposits(savings deposits)",
          "assetsatifo(asset in international financial institutions)",
          "agriculturaldeposits(agricultural deposit)",
          "mediumlongtermloans(medium-to-long term loans)"
        ],
        "column_names_original_en": [
          "reservedeposits",
          "loantogov",
          "domesticloans",
          "savingsdeposits",
          "assetsatifo",
          "agriculturaldeposits",
          "mediumlongtermloans"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indextype(index category)",
          "enddate(deadline)",
          "id(record identifier)",
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "indexvalue(index)"
        ],
        "column_names_original_en": [
          "indextype",
          "enddate",
          "id",
          "indexname",
          "reportperiod",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "enddate",
          "id",
          "reportperiod",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "List the amount of reserve deposits made by each financial institution in the credit records of financial institutions. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexvalue(index) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name)",
    "output_sequence": "select _ from _ | select reservedeposits from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexvalue",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname"
    ]
  },
  {
    "question": "In the financial institution balance sheet of our country's credit and debit transactions, what is the total amount of various deposits and loans when the securities and investments exceed 1 million in the past three years?",
    "sql": "select totalsavings, totalloans from ed_chinafibalancesheetrmb where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year')) and equityandotherinvestment > 1000000;",
    "norm_sql": "select totalsavings , totalloans from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) ) and equityandotherinvestment > 1000000",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) and _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "totalsavings(all deposit accounts)",
          "totalloans(various loans)",
          "equityandotherinvestment(securities and investments)",
          "savingsdeposits(savings deposits)",
          "overseasloans((two) overseas loans)",
          "othersavings(other deposits)"
        ],
        "column_names_original_en": [
          "enddate",
          "totalsavings",
          "totalloans",
          "equityandotherinvestment",
          "savingsdeposits",
          "overseasloans",
          "othersavings"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "reportarea(statistical category of the region)",
          "commodity(product name)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "imvalueofgoods",
          "reportarea",
          "commodity",
          "gyoyofimvaluegoods",
          "reportperiod",
          "enddate",
          "gyoyofeximvaluegoods"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "county(county)",
          "othersunits(other units)",
          "id(record identifier)",
          "foodbeverage(catering industry)",
          "belowcounty(county and below)",
          "reportarea(statistical category of region)",
          "collectiveunits(collective unit)"
        ],
        "column_names_original_en": [
          "county",
          "othersunits",
          "id",
          "foodbeverage",
          "belowcounty",
          "reportarea",
          "collectiveunits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In the financial institution balance sheet of our country's credit and debit transactions, what is the total amount of various deposits and loans when the securities and investments exceed 1 million in the past three years? | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit)",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) and _ | select totalsavings , totalloans from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) ) and equityandotherinvestment > 1000000",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_exportimport.*",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.reportarea",
      "ed_exportimport.commodity",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.reportperiod",
      "ed_exportimport.enddate",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.id",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.collectiveunits"
    ]
  },
  {
    "question": "Please help me check the information recorded in our other depository company's balance sheet regarding foreign assets and foreign liabilities.",
    "sql": "select foreignassets, foreignliabilities from ed_otherdepositorycorpbs;",
    "norm_sql": "select foreignassets , foreignliabilities from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "demanddeposits(current deposits for enterprises)",
          "foreignassets(foreign net assets)",
          "paidincapital(paid-up capital)",
          "cashinvault(cash on hand)",
          "depositswithcentralbank(reserve deposit)",
          "foreignliabilities(foreign liabilities)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)"
        ],
        "column_names_original_en": [
          "demanddeposits",
          "foreignassets",
          "paidincapital",
          "cashinvault",
          "depositswithcentralbank",
          "foreignliabilities",
          "liabtootherdepositcorp"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "commodity(product name)",
          "reportarea(statistical category of the region)",
          "province(province and city)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "id(record identifier)",
          "enddate(deadline)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "commodity",
          "reportarea",
          "province",
          "gyoyofimvaluegoods",
          "id",
          "enddate",
          "gyoyofexvaluegoods"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)",
          "itemname(tax rate items)",
          "basiscode(billing baseline)",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)",
          "valuefloor(minimum value/starting point (rmb))"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "id",
          "itemname",
          "basiscode",
          "ratiofloor",
          "effectivedate",
          "valuefloor"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me check the information recorded in our other depository company's balance sheet regarding foreign assets and foreign liabilities. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb))",
    "output_sequence": "select _ from _ | select foreignassets , foreignliabilities from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.foreignliabilities",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_exportimport.*",
      "ed_exportimport.commodity",
      "ed_exportimport.reportarea",
      "ed_exportimport.province",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.id",
      "ed_exportimport.enddate",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_taxrate.*",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.id",
      "ed_taxrate.itemname",
      "ed_taxrate.basiscode",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.effectivedate",
      "ed_taxrate.valuefloor"
    ]
  },
  {
    "question": "Can you show the amounts of foreign currency deposits and central bank bond holdings when the paid-in capital exceeds 1 million?",
    "sql": "select fcdeposits, centralbankbonds from ed_chinamoneyandbanking where capitalreceived > 1000000;",
    "norm_sql": "select fcdeposits , centralbankbonds from ed_chinamoneyandbanking where capitalreceived > 1000000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "fcdeposits(foreign currency deposit.)",
          "centralbankbonds(central bank bonds)",
          "capitalreceived(paid-up capital)",
          "id(record identifier)",
          "bonds(bonds)",
          "claimstogov(claims on the government (net))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "fcdeposits",
          "centralbankbonds",
          "capitalreceived",
          "id",
          "bonds",
          "claimstogov",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "province(province and city)",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "creditloans(trust loan (in 100 million rmb))",
          "entrustedloans(trust loan (in 100 million of rmb))",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "socialfinancing",
          "province",
          "foreigncurrencyloans",
          "creditloans",
          "entrustedloans",
          "undiscountedbacceptances",
          "enddate"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index value)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextitle(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "id",
          "reportperiod",
          "indextitle"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you show the amounts of foreign currency deposits and central bank bond holdings when the paid-in capital exceeds 1 million? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name)",
    "output_sequence": "select _ from _ where _ | select fcdeposits , centralbankbonds from ed_chinamoneyandbanking where capitalreceived > 1000000",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.enddate",
      "ed_socialfinancing.*",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.province",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.creditloans",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.enddate",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle"
    ]
  },
  {
    "question": "What are the securities markets where \"A shares\" are located?",
    "sql": "select secumarket from ed_taxrate where typename ='A shares' ;",
    "norm_sql": "select secumarket from ed_taxrate where typename = 'A shares'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "secumarket(securities market)",
          "id(record identifier)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "itemname(tax rate items)",
          "basiscode(billing baseline)"
        ],
        "column_names_original_en": [
          "typename",
          "secumarket",
          "id",
          "ratiofloor",
          "ratioceiling",
          "itemname",
          "basiscode"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "ratiofloor(minimum ratio (%))",
          "drrtype(reserve requirement ratio category)",
          "ratioceiling(maximum ratio (%))",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "id",
          "ratiofloor",
          "drrtype",
          "ratioceiling",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "yoy(year-on-year increase or decrease (%))",
          "subjectname(indicator name)",
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))"
        ],
        "column_names_original_en": [
          "yoy",
          "subjectname",
          "enddate",
          "id",
          "reportperiod",
          "subjectsum"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the securities markets where \"A shares\" are located? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).basiscode(billing baseline) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select secumarket from ed_taxrate where typename = 'A shares'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.id",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.itemname",
      "ed_taxrate.basiscode",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.effectivedate",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum"
    ]
  },
  {
    "question": "What is the annual industrial value added within the scope of \"state-owned and above-scale industrial enterprises\" in Shandong province?",
    "sql": "select enddate, industrialvalueadded from ed_industryproduction where province ='Shandong' and statstandard ='state-owned and above-scale industrial enterprises' and reportperiod ='annual';",
    "norm_sql": "select enddate , industrialvalueadded from ed_industryproduction where province = 'Shandong' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'annual'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistics interval)",
          "province(province)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "livalueap(light industry (in million of rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "province",
          "statstandard",
          "industrialvalueadded",
          "livalueap",
          "id"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "salestax(business tax (in million of rmb))",
          "socialsecurity(social security expenditure (in million of rmb))",
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "individualincometax(personal income tax (in million of rmb))",
          "agriculturetax(agricultural tax (in million of rmb))",
          "enterpriseincometax(enterprise income tax (in million of rmb))",
          "localgovrevenue(local fiscal revenue (in million of rmb))"
        ],
        "column_names_original_en": [
          "salestax",
          "socialsecurity",
          "gfinancialexpenditure",
          "individualincometax",
          "agriculturetax",
          "enterpriseincometax",
          "localgovrevenue"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indexvalue(index value)",
          "enddate(deadline)",
          "indextitle(index name)",
          "reportperiod(data statistical period)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "enddate",
          "indextitle",
          "reportperiod",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the annual industrial value added within the scope of \"state-owned and above-scale industrial enterprises\" in Shandong province? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).id(record identifier) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier)",
    "output_sequence": "select _ from _ where _ | select enddate , industrialvalueadded from ed_industryproduction where province = 'Shandong' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'annual'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.province",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.id",
      "ed_financialbalance.*",
      "ed_financialbalance.salestax",
      "ed_financialbalance.socialsecurity",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.individualincometax",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.enterpriseincometax",
      "ed_financialbalance.localgovrevenue",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.id"
    ]
  },
  {
    "question": "How much is the annual corporate income in Shanghai city?",
    "sql": "select enterpriseincome from ed_financialbalance where province = 'Shanghai';",
    "norm_sql": "select enterpriseincome from ed_financialbalance where province = 'Shanghai'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "province(province and city)",
          "enterpriseincome(enterprise income (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))",
          "socialsecurity(social security expenditure (in million of rmb))",
          "genterpriseincome(enterprise revenue growth rate)",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "gfinancialexpenditure(fiscal expenditure growth rate)"
        ],
        "column_names_original_en": [
          "province",
          "enterpriseincome",
          "valueaddedtax",
          "socialsecurity",
          "genterpriseincome",
          "localgovrevenue",
          "gfinancialexpenditure"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "fcdeposits(foreign currency deposit.)",
          "enddate(deadline)",
          "quasimoney(quasi-currency)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "money1(currency (narrow money m1))",
          "domesticloans(domestic credit)"
        ],
        "column_names_original_en": [
          "fcdeposits",
          "enddate",
          "quasimoney",
          "claimstogov",
          "claimstononfinancialinst",
          "money1",
          "domesticloans"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "commodity(product name)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "province(province and city)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "exvalueofgoods",
          "commodity",
          "gyoyofimvaluegoods",
          "province",
          "eximvalueofgoods",
          "imvalueofgoods"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How much is the annual corporate income in Shanghai city? | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).genterpriseincome(enterprise revenue growth rate) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars))",
    "output_sequence": "select _ from _ where _ | select enterpriseincome from ed_financialbalance where province = 'Shanghai'",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.province",
      "ed_financialbalance.enterpriseincome",
      "ed_financialbalance.valueaddedtax",
      "ed_financialbalance.socialsecurity",
      "ed_financialbalance.genterpriseincome",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_exportimport.*",
      "ed_exportimport.reportperiod",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.commodity",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.province",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.imvalueofgoods"
    ]
  },
  {
    "question": "Can I take a look at the data records on non-other resident sector claims in the balance sheets of other deposit-taking corporations?",
    "sql": "select claimsonotherresidentsec from ed_otherdepositorycorpbs;",
    "norm_sql": "select claimsonotherresidentsec from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsonotherresidentsec(claims on other resident sectors)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "bondissue(bond issuance)",
          "transferabledeposits(transferable deposits)",
          "foreignassets(foreign net assets)",
          "timedeposits(fixed deposit for enterprises)",
          "depositsincludedinm2(inclusion of broad money deposits.)"
        ],
        "column_names_original_en": [
          "claimsonotherresidentsec",
          "liabtootherdepositcorp",
          "bondissue",
          "transferabledeposits",
          "foreignassets",
          "timedeposits",
          "depositsincludedinm2"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "indextitle(index name)",
          "indexvalue(index value)",
          "id(record identifier)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "indextitle",
          "indexvalue",
          "id",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "livalueap(light industry (in million of rmb))",
          "minitypecomap(small-scale enterprise (light industry))",
          "reportperiod(data statistics interval)",
          "hivalueap(heavy industry (in million of rmb))",
          "mediumcomap(medium-sized enterprise (light industry))",
          "reportarea(statistical area category)",
          "collectivecomap(collective enterprise (light industry))"
        ],
        "column_names_original_en": [
          "livalueap",
          "minitypecomap",
          "reportperiod",
          "hivalueap",
          "mediumcomap",
          "reportarea",
          "collectivecomap"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can I take a look at the data records on non-other resident sector claims in the balance sheets of other deposit-taking corporations? | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry))",
    "output_sequence": "select _ from _ | select claimsonotherresidentsec from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.reportperiod",
      "ed_industryproduction.*",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.minitypecomap",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.collectivecomap"
    ]
  },
  {
    "question": "Help Mr. Wang check the annual industrial production value data of large enterprises within the scope of \"National\" \"state-owned and above-scale industrial enterprises\" over the years.",
    "sql": "select enddate, largecomap from ed_industryproduction where reportarea ='National' and statstandard ='state-owned and above-scale industrial enterprises' and reportperiod ='annual';",
    "norm_sql": "select enddate , largecomap from ed_industryproduction where reportarea = 'National' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'annual'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "drrtype(reserve requirement ratio category)",
          "effectivedate(effective date)",
          "ratioceiling(maximum ratio (%))",
          "ratiofloor(minimum ratio (%))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "drrtype",
          "effectivedate",
          "ratioceiling",
          "ratiofloor",
          "id"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "indexvalue(index value)",
          "reportarea(statistical region category)",
          "indextitle(index name)",
          "id(record identifier)",
          "comparetolastmonth(index month-on-month change (points))",
          "reportperiod(data statistical period)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "reportarea",
          "indextitle",
          "id",
          "comparetolastmonth",
          "reportperiod",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "largecomap(large-scale enterprise (light industry))",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "livalueap(light industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportarea",
          "reportperiod",
          "statstandard",
          "largecomap",
          "stateownedcontrolledcomap",
          "livalueap"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help Mr. Wang check the annual industrial production value data of large enterprises within the scope of \"National\" \"state-owned and above-scale industrial enterprises\" over the years. | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).enddate(deadline) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select enddate , largecomap from ed_industryproduction where reportarea = 'National' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'annual'",
    "tc_original": [
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.id",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.enddate",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.livalueap"
    ]
  },
  {
    "question": "Display the GDP data of China from last year and sort it in descending order according to the total value of the second industry production.",
    "sql": "select province, gdp, gdpgrowthyoy from ed_grossdomesticproduct where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year') ) order by secondindustrygdp desc;",
    "norm_sql": "select province , gdp , gdpgrowthyoy from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) order by secondindustrygdp desc",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) order by _ desc",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "qoqcpimedicare(healthcare and personal care products month-on-month)",
          "enddate(deadline)",
          "qoqcpi(resident consumer price index (month-on-month))",
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)",
          "yoycpihousing(residential year-on-year)",
          "yoycpitobacco(tobacco, alcohol, and supplies year-on-year)",
          "cumcpicloth(cumulative average of clothing)"
        ],
        "column_names_original_en": [
          "qoqcpimedicare",
          "enddate",
          "qoqcpi",
          "yoycpifamilyequipmentservice",
          "yoycpihousing",
          "yoycpitobacco",
          "cumcpicloth"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "enddate(deadline)",
          "gdp(gross domestic product (in million of rmb).)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "enddate",
          "gdp",
          "secondindustrygdp",
          "gdpgrowthyoy",
          "primaryindustrygdp",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "totalliability(total liabilities (in million of rmb))",
          "reservedeposits(reserve deposit (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "totalliability",
          "reservedeposits",
          "moneyreserves",
          "moneyissuance",
          "nonfinancialorgdeposits",
          "governmentsavings",
          "claimtosavingsbanks"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Display the GDP data of China from last year and sort it in descending order according to the total value of the second industry production. | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).qoqcpimedicare(healthcare and personal care products month-on-month) , ed_consumerpriceindex(consumer price index).enddate(deadline) , ed_consumerpriceindex(consumer price index).qoqcpi(resident consumer price index (month-on-month)) , ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year) , ed_consumerpriceindex(consumer price index).yoycpihousing(residential year-on-year) , ed_consumerpriceindex(consumer price index).yoycpitobacco(tobacco, alcohol, and supplies year-on-year) , ed_consumerpriceindex(consumer price index).cumcpicloth(cumulative average of clothing) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) order by _ desc | select province , gdp , gdpgrowthyoy from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) order by secondindustrygdp desc",
    "tc_original": [
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.qoqcpimedicare",
      "ed_consumerpriceindex.enddate",
      "ed_consumerpriceindex.qoqcpi",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice",
      "ed_consumerpriceindex.yoycpihousing",
      "ed_consumerpriceindex.yoycpitobacco",
      "ed_consumerpriceindex.cumcpicloth",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.claimtosavingsbanks"
    ]
  },
  {
    "question": "Also, what is the billing basis for different repurchase terms of \"Government Bond Repurchase\"? Show me the repurchase terms and billing basis.",
    "sql": "select maturity, basiscode from ed_taxrate where typename = 'Government Bond Repurchase' and itemname = 'Trading Commission Rate';",
    "norm_sql": "select maturity , basiscode from ed_taxrate where typename = 'Government Bond Repurchase' and itemname = 'Trading Commission Rate'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "maturity(repurchase period)",
          "basiscode(billing baseline)",
          "secumarket(securities market)",
          "id(record identifier)",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "maturity",
          "basiscode",
          "secumarket",
          "id",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "id",
          "reportperiod",
          "enddate",
          "indexname"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "id(record identifier)",
          "enterpriseincometax(enterprise income tax (in million of rmb))",
          "socialsecurity(social security expenditure (in million of rmb))",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "centralgovrevenue(central fiscal revenue (in million of yuan))",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))"
        ],
        "column_names_original_en": [
          "gfinancialexpenditure",
          "id",
          "enterpriseincometax",
          "socialsecurity",
          "gfinancialrevenue",
          "centralgovrevenue",
          "operatingexpensescesh"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Also, what is the billing basis for different repurchase terms of \"Government Bond Repurchase\"? Show me the repurchase terms and billing basis. | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).effectivedate(effective date) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).centralgovrevenue(central fiscal revenue (in million of yuan)) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select maturity , basiscode from ed_taxrate where typename = 'Government Bond Repurchase' and itemname = 'Trading Commission Rate'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.maturity",
      "ed_taxrate.basiscode",
      "ed_taxrate.secumarket",
      "ed_taxrate.id",
      "ed_taxrate.effectivedate",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexname",
      "ed_financialbalance.*",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.id",
      "ed_financialbalance.enterpriseincometax",
      "ed_financialbalance.socialsecurity",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.centralgovrevenue",
      "ed_financialbalance.operatingexpensescesh"
    ]
  },
  {
    "question": "Hi, what is the retail value of social consumer goods for joint ventures and self-employed individuals? Please list them.",
    "sql": "select jointventures, selfemployed from ed_retailvalueofscgoods;",
    "norm_sql": "select jointventures , selfemployed from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "selfemployed(individual unit)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "jointventures(joint operating unit)",
          "reportarea(statistical category of region)",
          "province(province and city)",
          "othersindustry(other industries)"
        ],
        "column_names_original_en": [
          "selfemployed",
          "reportperiod",
          "enddate",
          "jointventures",
          "reportarea",
          "province",
          "othersindustry"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "enddate(deadline)",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "selfownedmoney(own funds (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))"
        ],
        "column_names_original_en": [
          "forex",
          "moneyandgold",
          "enddate",
          "nonfinancialorgdeposits",
          "selfownedmoney",
          "claimtosavingsinst",
          "moneyreserves"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "id",
          "reportperiod",
          "enddate",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hi, what is the retail value of social consumer goods for joint ventures and self-employed individuals? Please list them. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name)",
    "output_sequence": "select _ from _ | select jointventures , selfemployed from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.moneyreserves",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexname"
    ]
  },
  {
    "question": "I want to know the amount of claims on central bank and liabilities to central bank in the balance sheet of other depository corporations in the previous year.",
    "sql": "select claimsoncentralbank, liabilitiestocentralbank from ed_otherdepositorycorpbs where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select claimsoncentralbank , liabilitiestocentralbank from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "claimsoncentralbank(claims on central bank)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "claimsonotherresidentsec(claims on other resident sectors)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "paidincapital(paid-up capital)",
          "transferabledeposits(transferable deposits)"
        ],
        "column_names_original_en": [
          "enddate",
          "claimsoncentralbank",
          "liabilitiestocentralbank",
          "claimsonotherresidentsec",
          "claimsonotherfinstitute",
          "paidincapital",
          "transferabledeposits"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "money1(currency (narrow money m1))",
          "bonds(bonds)",
          "quasimoney(quasi-currency)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "netabroadassets(foreign net assets)"
        ],
        "column_names_original_en": [
          "money1",
          "bonds",
          "quasimoney",
          "claimstononfinancialinst",
          "domesticloans",
          "claimstogov",
          "netabroadassets"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "supportunderdevelopedarea(policy subsidy expenditure (in million of rmb))",
          "salestax(business tax (in million of rmb))",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "enterpriseincometax(enterprise income tax (in million of rmb))",
          "individualincometax(personal income tax (in million of rmb))",
          "enddate(deadline)",
          "centralgovrevenue(central fiscal revenue (in million of yuan))"
        ],
        "column_names_original_en": [
          "supportunderdevelopedarea",
          "salestax",
          "operatingexpensescesh",
          "enterpriseincometax",
          "individualincometax",
          "enddate",
          "centralgovrevenue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the amount of claims on central bank and liabilities to central bank in the balance sheet of other depository corporations in the previous year. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).supportunderdevelopedarea(policy subsidy expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).centralgovrevenue(central fiscal revenue (in million of yuan))",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) | select claimsoncentralbank , liabilitiestocentralbank from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_financialbalance.*",
      "ed_financialbalance.supportunderdevelopedarea",
      "ed_financialbalance.salestax",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.enterpriseincometax",
      "ed_financialbalance.individualincometax",
      "ed_financialbalance.enddate",
      "ed_financialbalance.centralgovrevenue"
    ]
  },
  {
    "question": "Please check the annual industrial value-added data for \"All Industrial Enterprises\" in Zhejiang Province.",
    "sql": "select enddate, industrialvalueadded from ed_industryproduction where province ='Zhejiang' and statstandard ='All Industrial Enterprises' and reportperiod ='Annual';",
    "norm_sql": "select enddate , industrialvalueadded from ed_industryproduction where province = 'Zhejiang' and statstandard = 'All Industrial Enterprises' and reportperiod = 'Annual'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistics interval)",
          "province(province)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "id(record identifier)",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "province",
          "statstandard",
          "industrialvalueadded",
          "id",
          "stateownedcontrolledcomap"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "gdp(gross domestic product (in million of rmb).)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "province(province and city)",
          "primaryindustrygdp(the primary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "thirdindustrygdp",
          "secondindustrygdp",
          "gdppercapita",
          "gdp",
          "gdpgrowthyoy",
          "province",
          "primaryindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "ratiofloor(minimum ratio (%))",
          "typename(tax rate type)",
          "valueceiling(maximum value (rmb))",
          "itemname(tax rate items)",
          "maturity(repurchase period)",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "ratiofloor",
          "typename",
          "valueceiling",
          "itemname",
          "maturity",
          "effectivedate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please check the annual industrial value-added data for \"All Industrial Enterprises\" in Zhejiang Province. | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).effectivedate(effective date)",
    "output_sequence": "select _ from _ where _ | select enddate , industrialvalueadded from ed_industryproduction where province = 'Zhejiang' and statstandard = 'All Industrial Enterprises' and reportperiod = 'Annual'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.province",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.id",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_taxrate.*",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.typename",
      "ed_taxrate.valueceiling",
      "ed_taxrate.itemname",
      "ed_taxrate.maturity",
      "ed_taxrate.effectivedate"
    ]
  },
  {
    "question": "Query the customs import and export records for cases where the import amount is less than 20 million and the export amount is more than 20 million, and list the import amount and export amount.",
    "sql": "select imvalueofgoods, exvalueofgoods from ed_exportimport where imvalueofgoods < 20 and exvalueofgoods > 20;",
    "norm_sql": "select imvalueofgoods , exvalueofgoods from ed_exportimport where imvalueofgoods < 20 and exvalueofgoods > 20",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "commodity(product name)",
          "reportperiod(data statistical period)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "exvalueofgoods",
          "imvalueofgoods",
          "gyoyofexvaluegoods",
          "commodity",
          "reportperiod",
          "eximvalueofgoods",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "claimstononfinancialinst(claims on the non-financial sector)",
          "quasimoney(quasi-currency)",
          "enddate(deadline)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "capitalreceived(paid-up capital)",
          "bonds(bonds)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))"
        ],
        "column_names_original_en": [
          "claimstononfinancialinst",
          "quasimoney",
          "enddate",
          "claimstootherinst",
          "capitalreceived",
          "bonds",
          "moneyandquasimoney"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "id(record identifier)",
          "secumarket(securities market)",
          "basiscode(billing baseline)",
          "maturity(repurchase period)",
          "ratioceiling(maximum ratio (%))",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "typename",
          "id",
          "secumarket",
          "basiscode",
          "maturity",
          "ratioceiling",
          "ratiofloor"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Query the customs import and export records for cases where the import amount is less than 20 million and the export amount is more than 20 million, and list the import amount and export amount. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).enddate(deadline) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%))",
    "output_sequence": "select _ from _ where _ | select imvalueofgoods , exvalueofgoods from ed_exportimport where imvalueofgoods < 20 and exvalueofgoods > 20",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.commodity",
      "ed_exportimport.reportperiod",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.enddate",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.id",
      "ed_taxrate.secumarket",
      "ed_taxrate.basiscode",
      "ed_taxrate.maturity",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.ratiofloor"
    ]
  },
  {
    "question": "I want to know the \"annual\" retail sales data of wholesale and retail trade and catering industry in each province and city over the years, divided by province and city.",
    "sql": "select province, foodbeverage, wholesaleretailtrade from ed_retailvalueofscgoods where reportperiod ='Annual';",
    "norm_sql": "select province , foodbeverage , wholesaleretailtrade from ed_retailvalueofscgoods where reportperiod = 'Annual'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "province(province and city)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "foodbeverage(catering industry)",
          "collectiveunits(collective unit)",
          "selfemployed(individual unit)",
          "jointventures(joint operating unit)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "province",
          "wholesaleretailtrade",
          "foodbeverage",
          "collectiveunits",
          "selfemployed",
          "jointventures"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)",
          "yoycpifood(food year-on-year)",
          "cumcpitobacco(cumulative average of tobacco, alcohol, and supplies)",
          "yoycpitobacco(tobacco, alcohol, and supplies year-on-year)",
          "id(record identifier)",
          "yoycpihousing(residential year-on-year)",
          "qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month)"
        ],
        "column_names_original_en": [
          "yoycpifamilyequipmentservice",
          "yoycpifood",
          "cumcpitobacco",
          "yoycpitobacco",
          "id",
          "yoycpihousing",
          "qoqcpientertainmentservice"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "collectivecomap(collective enterprise (light industry))",
          "largecomap(large-scale enterprise (light industry))",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "reportperiod(data statistics interval)",
          "hivalueap(heavy industry (in million of rmb))",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))"
        ],
        "column_names_original_en": [
          "enddate",
          "collectivecomap",
          "largecomap",
          "industrialoutputvalueap",
          "reportperiod",
          "hivalueap",
          "stateownedcontrolledcomap"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the \"annual\" retail sales data of wholesale and retail trade and catering industry in each province and city over the years, divided by province and city. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year) , ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) , ed_consumerpriceindex(consumer price index).cumcpitobacco(cumulative average of tobacco, alcohol, and supplies) , ed_consumerpriceindex(consumer price index).yoycpitobacco(tobacco, alcohol, and supplies year-on-year) , ed_consumerpriceindex(consumer price index).id(record identifier) , ed_consumerpriceindex(consumer price index).yoycpihousing(residential year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
    "output_sequence": "select _ from _ where _ | select province , foodbeverage , wholesaleretailtrade from ed_retailvalueofscgoods where reportperiod = 'Annual'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.jointventures",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice",
      "ed_consumerpriceindex.yoycpifood",
      "ed_consumerpriceindex.cumcpitobacco",
      "ed_consumerpriceindex.yoycpitobacco",
      "ed_consumerpriceindex.id",
      "ed_consumerpriceindex.yoycpihousing",
      "ed_consumerpriceindex.qoqcpientertainmentservice",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.collectivecomap",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.stateownedcontrolledcomap"
    ]
  },
  {
    "question": "What is the value of the \"Black Metal Ore Mining Sector\" index in the \"National Economic Industry Index\" for the \"same period last year\"?",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod ='same period last year' and indextype ='National Economic Industry Index' and indexname ='Black Metal Ore Mining Sector';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'same period last year' and indextype = 'National Economic Industry Index' and indexname = 'Black Metal Ore Mining Sector'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "id",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "totalliability(total liabilities (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))"
        ],
        "column_names_original_en": [
          "totalliability",
          "moneyreserves",
          "claimtononfinancialinst",
          "claimtootherfinnonfininst",
          "otherliability",
          "bondissuance",
          "claimtosavingsinst"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "avgprice(average price)",
          "unitname(company name)",
          "accuquantity(accumulated quantity)",
          "category(product category)",
          "statecode(primary country)",
          "accuavgprice(cumulative average price)",
          "quantity(quantity)"
        ],
        "column_names_original_en": [
          "avgprice",
          "unitname",
          "accuquantity",
          "category",
          "statecode",
          "accuavgprice",
          "quantity"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the value of the \"Black Metal Ore Mining Sector\" index in the \"National Economic Industry Index\" for the \"same period last year\"? | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).avgprice(average price) , ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).category(product category) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).accuavgprice(cumulative average price) , ed_productexportimport(product import and export volume).quantity(quantity)",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'same period last year' and indextype = 'National Economic Industry Index' and indexname = 'Black Metal Ore Mining Sector'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_productexportimport.*",
      "ed_productexportimport.avgprice",
      "ed_productexportimport.unitname",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.category",
      "ed_productexportimport.statecode",
      "ed_productexportimport.accuavgprice",
      "ed_productexportimport.quantity"
    ]
  },
  {
    "question": "Can you show me the detailed records of our bonds and central bank bonds in 1998?",
    "sql": "select bonds, centralbankbonds from ed_chinamoneyandbanking where strftime('%Y', enddate)='1998';",
    "norm_sql": "select bonds , centralbankbonds from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = '1998'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "centralbankbonds(central bank bonds)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "centralbankbonds",
          "claimstononfinancialinst",
          "domesticloans",
          "claimstogov",
          "claimstospecificsavingorg"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))",
          "reportperiod(statistical period)",
          "subjectname(indicator name)",
          "enddate(deadline)",
          "subjectsum(amount (in million of rmb))"
        ],
        "column_names_original_en": [
          "id",
          "yoy",
          "reportperiod",
          "subjectname",
          "enddate",
          "subjectsum"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdppercapita(per capita gross domestic product (cny/person))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "gdp(gross domestic product (in million of rmb).)",
          "province(province and city)",
          "enddate(deadline)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "gdppercapita",
          "gdpgrowthyoy",
          "gdp",
          "province",
          "enddate",
          "secondindustrygdp",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you show me the detailed records of our bonds and central bank bonds in 1998? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier)",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select bonds , centralbankbonds from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = '1998'",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectsum",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.id"
    ]
  },
  {
    "question": "I am particularly interested in knowing the amounts of claims on non-financial institutions and liabilities to non-financial institutions in the balance sheet of other deposit-taking corporations.",
    "sql": "select claimsonothernfinstitute, liabilitiestonfinst from ed_otherdepositorycorpbs;",
    "norm_sql": "select claimsonothernfinstitute , liabilitiestonfinst from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsonothernfinstitute(claims on non-financial institution)",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "depositsexcludedfromm2(deposits not included in broad money)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "enddate(deadline)",
          "savingdeposits(resident savings deposits)",
          "totalliabilities(total liabilities)"
        ],
        "column_names_original_en": [
          "claimsonothernfinstitute",
          "liabilitiestonfinst",
          "depositsexcludedfromm2",
          "liabtootherdepositcorp",
          "enddate",
          "savingdeposits",
          "totalliabilities"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "enddate(deadline)",
          "indexvalue(index value)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextitle",
          "enddate",
          "indexvalue",
          "id"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdp(gross domestic product (in million of rmb).)",
          "province(province and city)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "id(record identifier)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "gdp",
          "province",
          "secondindustrygdp",
          "gdppercapita",
          "id",
          "thirdindustrygdp",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I am particularly interested in knowing the amounts of claims on non-financial institutions and liabilities to non-financial institutions in the balance sheet of other deposit-taking corporations. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline)",
    "output_sequence": "select _ from _ | select claimsonothernfinstitute , liabilitiestonfinst from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.totalliabilities",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.id",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.enddate"
    ]
  },
  {
    "question": "Wang Gong wants to know the GDP and GDP year-on-year growth data of each province and city last year. Please check it for him.",
    "sql": "select province, gdp, gdpgrowthyoy from ed_grossdomesticproduct where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year'));",
    "norm_sql": "select province , gdp , gdpgrowthyoy from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "enddate(deadline)",
          "gdp(gross domestic product (in million of rmb).)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "id(record identifier)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "enddate",
          "gdp",
          "gdpgrowthyoy",
          "id",
          "gdppercapita",
          "secondindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "id(record identifier)",
          "capitalreceived(paid-up capital)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "fcdeposits(foreign currency deposit.)",
          "claimstogov(claims on the government (net))",
          "bonds(bonds)",
          "quasimoney(quasi-currency)"
        ],
        "column_names_original_en": [
          "id",
          "capitalreceived",
          "moneyandquasimoney",
          "fcdeposits",
          "claimstogov",
          "bonds",
          "quasimoney"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indexvalue(index value)",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "enddate(deadline)",
          "indextitle(index name)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "reportperiod",
          "id",
          "enddate",
          "indextitle"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Wang Gong wants to know the GDP and GDP year-on-year growth data of each province and city last year. Please check it for him. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name)",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) | select province , gdp , gdpgrowthyoy from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.quasimoney",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indextitle"
    ]
  },
  {
    "question": "What is the total value of imported and exported goods in China in 2005? What are the respective values of imports and exports?",
    "sql": "select eximvalueofgoods, imvalueofgoods, exvalueofgoods from ed_exportimport where strftime('%Y', enddate)='2005';",
    "norm_sql": "select eximvalueofgoods , imvalueofgoods , exvalueofgoods from ed_exportimport where strftime ( '%Y' , enddate ) = '2005'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "enddate(deadline)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "province(province and city)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "sovereigntycountry(the subject country)"
        ],
        "column_names_original_en": [
          "enddate",
          "eximvalueofgoods",
          "exvalueofgoods",
          "imvalueofgoods",
          "province",
          "gyoyofeximvaluegoods",
          "sovereigntycountry"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))",
          "enddate(deadline)",
          "subjectname(indicator name)",
          "reportperiod(statistical period)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "subjectsum",
          "yoy",
          "enddate",
          "subjectname",
          "reportperiod",
          "id"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "enddate(deadline)",
          "selfownedmoney(own funds (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "claimtosavingsinst",
          "claimtononfinancialinst",
          "forex",
          "enddate",
          "selfownedmoney",
          "moneyissuance",
          "claimtosavingsbanks"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the total value of imported and exported goods in China in 2005? What are the respective values of imports and exports? | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).id(record identifier) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select eximvalueofgoods , imvalueofgoods , exvalueofgoods from ed_exportimport where strftime ( '%Y' , enddate ) = '2005'",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.enddate",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.province",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.sovereigntycountry",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.id",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.claimtosavingsbanks"
    ]
  },
  {
    "question": "Yanzili San is recently studying macroeconomics. Please show him the names and values of various indexes in \"Previous Year Same Period\" and \"Industrial Structure Classification Index\".",
    "sql": "select indexname, indexvalue from ed_producerpiformp where reportperiod ='Previous Year Same Period' and indextype ='Industrial Structure Classification Index';",
    "norm_sql": "select indexname , indexvalue from ed_producerpiformp where reportperiod = 'Previous Year Same Period' and indextype = 'Industrial Structure Classification Index'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indextype(index category)",
          "id(record identifier)",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indexvalue(index)"
        ],
        "column_names_original_en": [
          "indextype",
          "id",
          "enddate",
          "reportperiod",
          "indexname",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "indextitle(index name)",
          "reportperiod(data statistical period)",
          "indexvalue(index value)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "id",
          "indextitle",
          "reportperiod",
          "indexvalue",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "capitalreceived(paid-up capital)",
          "enddate(deadline)",
          "quasimoney(quasi-currency)",
          "claimstogov(claims on the government (net))",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "money1(currency (narrow money m1))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "capitalreceived",
          "enddate",
          "quasimoney",
          "claimstogov",
          "moneyandquasimoney",
          "money1",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Yanzili San is recently studying macroeconomics. Please show him the names and values of various indexes in \"Previous Year Same Period\" and \"Industrial Structure Classification Index\". | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier)",
    "output_sequence": "select _ from _ where _ | select indexname , indexvalue from ed_producerpiformp where reportperiod = 'Previous Year Same Period' and indextype = 'Industrial Structure Classification Index'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.enddate",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.id"
    ]
  },
  {
    "question": "Please search for the information on government debt claims, non-financial sector debt claims, and claims to specific deposit-taking institutions in China for the past two years.",
    "sql": "select claimstogov, claimstononfinancialinst, claimstospecificsavingorg from ed_chinamoneyandbanking where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select claimstogov , claimstononfinancialinst , claimstospecificsavingorg from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "centralbankbonds(central bank bonds)",
          "domesticloans(domestic credit)",
          "quasimoney(quasi-currency)"
        ],
        "column_names_original_en": [
          "enddate",
          "claimstogov",
          "claimstononfinancialinst",
          "claimstospecificsavingorg",
          "centralbankbonds",
          "domesticloans",
          "quasimoney"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "operatetype(import and export categories)",
          "reportperiod(data statistical period)",
          "quantity(quantity)",
          "statecode(primary country)",
          "accuquantity(accumulated quantity)",
          "productname(product name)",
          "currencycode(currency unit)"
        ],
        "column_names_original_en": [
          "operatetype",
          "reportperiod",
          "quantity",
          "statecode",
          "accuquantity",
          "productname",
          "currencycode"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "loantogov(financial borrowing)",
          "totalsavings(all deposit accounts)",
          "currencyname(currency unit code)",
          "shorttermloans(short-term loan)",
          "agriculturaldeposits(agricultural deposit)",
          "datatype(data type code)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "loantogov",
          "totalsavings",
          "currencyname",
          "shorttermloans",
          "agriculturaldeposits",
          "datatype",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please search for the information on government debt claims, non-financial sector debt claims, and claims to specific deposit-taking institutions in China for the past two years. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).operatetype(import and export categories) , ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).quantity(quantity) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).productname(product name) , ed_productexportimport(product import and export volume).currencycode(currency unit) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline)",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select claimstogov , claimstononfinancialinst , claimstospecificsavingorg from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_productexportimport.*",
      "ed_productexportimport.operatetype",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.quantity",
      "ed_productexportimport.statecode",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.productname",
      "ed_productexportimport.currencycode",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.enddate"
    ]
  },
  {
    "question": "What is the amount of annual industrial value added for \"All Industrial Enterprises\" in \"National\" scope?",
    "sql": "select enddate, industrialvalueadded from ed_industryproduction where reportarea = 'National' and statstandard = 'All Industrial Enterprises' and reportperiod = 'Yearly';",
    "norm_sql": "select enddate , industrialvalueadded from ed_industryproduction where reportarea = 'National' and statstandard = 'All Industrial Enterprises' and reportperiod = 'Yearly'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "minitypecomap(small-scale enterprise (light industry))",
          "collectivecomap(collective enterprise (light industry))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded",
          "minitypecomap",
          "collectivecomap"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "cumcpitobacco(cumulative average of tobacco, alcohol, and supplies)",
          "id(record identifier)",
          "qoqcpitrafficcommunication(transportation and communication month-on-month)",
          "qoqcpitobacco(tobacco, alcohol, and supplies month-on-month)",
          "qoqcpifamilyequipmentservice(household equipment and services month-on-month)",
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)",
          "cumcpifood(accumulated average of food)"
        ],
        "column_names_original_en": [
          "cumcpitobacco",
          "id",
          "qoqcpitrafficcommunication",
          "qoqcpitobacco",
          "qoqcpifamilyequipmentservice",
          "yoycpifamilyequipmentservice",
          "cumcpifood"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "productname(product name)",
          "accuavgprice(cumulative average price)",
          "reportperiod(data statistical period)",
          "eximvalue(amount)",
          "quantity(quantity)",
          "accueximvalue(accumulated amount)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "productname",
          "accuavgprice",
          "reportperiod",
          "eximvalue",
          "quantity",
          "accueximvalue",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the amount of annual industrial value added for \"All Industrial Enterprises\" in \"National\" scope? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).cumcpitobacco(cumulative average of tobacco, alcohol, and supplies) , ed_consumerpriceindex(consumer price index).id(record identifier) , ed_consumerpriceindex(consumer price index).qoqcpitrafficcommunication(transportation and communication month-on-month) , ed_consumerpriceindex(consumer price index).qoqcpitobacco(tobacco, alcohol, and supplies month-on-month) , ed_consumerpriceindex(consumer price index).qoqcpifamilyequipmentservice(household equipment and services month-on-month) , ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year) , ed_consumerpriceindex(consumer price index).cumcpifood(accumulated average of food) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).productname(product name) , ed_productexportimport(product import and export volume).accuavgprice(cumulative average price) , ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).eximvalue(amount) , ed_productexportimport(product import and export volume).quantity(quantity) , ed_productexportimport(product import and export volume).accueximvalue(accumulated amount) , ed_productexportimport(product import and export volume).enddate(deadline)",
    "output_sequence": "select _ from _ where _ | select enddate , industrialvalueadded from ed_industryproduction where reportarea = 'National' and statstandard = 'All Industrial Enterprises' and reportperiod = 'Yearly'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.minitypecomap",
      "ed_industryproduction.collectivecomap",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.cumcpitobacco",
      "ed_consumerpriceindex.id",
      "ed_consumerpriceindex.qoqcpitrafficcommunication",
      "ed_consumerpriceindex.qoqcpitobacco",
      "ed_consumerpriceindex.qoqcpifamilyequipmentservice",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice",
      "ed_consumerpriceindex.cumcpifood",
      "ed_productexportimport.*",
      "ed_productexportimport.productname",
      "ed_productexportimport.accuavgprice",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.eximvalue",
      "ed_productexportimport.quantity",
      "ed_productexportimport.accueximvalue",
      "ed_productexportimport.enddate"
    ]
  },
  {
    "question": "Please help me retrieve the index value of \"Special Equipment Manufacturing Industry\" in the \"National Economic Industry Index\" for the \"previous year same period\".",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod = 'previous year same period' and indextype = 'National Economic Industry Index' and indexname = 'Special Equipment Manufacturing Industry';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'previous year same period' and indextype = 'National Economic Industry Index' and indexname = 'Special Equipment Manufacturing Industry'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "otherassets(other assets)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "bondissue(bond issuance)",
          "transferabledeposits(transferable deposits)",
          "depositswithcentralbank(reserve deposit)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "totalliabilities(total liabilities)"
        ],
        "column_names_original_en": [
          "otherassets",
          "liabtootherdepositcorp",
          "bondissue",
          "transferabledeposits",
          "depositswithcentralbank",
          "liabtootherfinancialcorp",
          "totalliabilities"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "moneyandgold(currency gold (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "id(record identifier)",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))"
        ],
        "column_names_original_en": [
          "moneyandgold",
          "forex",
          "id",
          "claimtononfinancialinst",
          "nonfinancialorgdeposits",
          "moneyreserves",
          "moneyissuance"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me retrieve the index value of \"Special Equipment Manufacturing Industry\" in the \"National Economic Industry Index\" for the \"previous year same period\". | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'previous year same period' and indextype = 'National Economic Industry Index' and indexname = 'Special Equipment Manufacturing Industry'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.otherassets",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.moneyissuance"
    ]
  },
  {
    "question": "What is the amount of financial bonds and money in circulation in China's financial institutions over the years? Please check.",
    "sql": "select financialbonds, moneyincirculation from ed_chinafibalancesheetrmb;",
    "norm_sql": "select financialbonds , moneyincirculation from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "equityandotherinvestment(securities and investments)",
          "agriculturaldeposits(agricultural deposit)",
          "moneyincirculation(currency in circulation)",
          "financialbonds(financial bonds)",
          "id(record identifier)",
          "enddate(deadline)",
          "currencyname(currency unit code)"
        ],
        "column_names_original_en": [
          "equityandotherinvestment",
          "agriculturaldeposits",
          "moneyincirculation",
          "financialbonds",
          "id",
          "enddate",
          "currencyname"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "enddate(deadline)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "sovereigntycountry(the subject country)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "reportperiod(data statistical period)",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "eximvalueofgoods",
          "enddate",
          "imvalueofgoods",
          "sovereigntycountry",
          "gyoyofexvaluegoods",
          "reportperiod",
          "province"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "gdp(gross domestic product (in million of rmb).)",
          "province(province and city)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "primaryindustrygdp",
          "gdpgrowthyoy",
          "thirdindustrygdp",
          "gdp",
          "province",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the amount of financial bonds and money in circulation in China's financial institutions over the years? Please check. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).province(province and city) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).id(record identifier)",
    "output_sequence": "select _ from _ | select financialbonds , moneyincirculation from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_exportimport.*",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.enddate",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.reportperiod",
      "ed_exportimport.province",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.id"
    ]
  },
  {
    "question": "Hi, do you know the amount of wholesale and retail trade in the industry?",
    "sql": "select wholesaleretailtrade from ed_retailvalueofscgoods;",
    "norm_sql": "select wholesaleretailtrade from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "reportperiod(data statistical period)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "province(province and city)",
          "reportarea(statistical category of region)",
          "stateownedunits(state-owned unit)",
          "othersindustry(other industries)"
        ],
        "column_names_original_en": [
          "wholesaleretailtrade",
          "reportperiod",
          "retailvalueofscgoods",
          "province",
          "reportarea",
          "stateownedunits",
          "othersindustry"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "yoy(year-on-year increase or decrease (%))",
          "reportperiod(statistical period)",
          "id(record identifier)",
          "subjectname(indicator name)",
          "enddate(deadline)",
          "subjectsum(amount (in million of rmb))"
        ],
        "column_names_original_en": [
          "yoy",
          "reportperiod",
          "id",
          "subjectname",
          "enddate",
          "subjectsum"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "basiscode(billing baseline)",
          "maturity(repurchase period)",
          "valueceiling(maximum value (rmb))",
          "valuefloor(minimum value/starting point (rmb))",
          "typename(tax rate type)",
          "itemname(tax rate items)",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "basiscode",
          "maturity",
          "valueceiling",
          "valuefloor",
          "typename",
          "itemname",
          "ratioceiling"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hi, do you know the amount of wholesale and retail trade in the industry? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%))",
    "output_sequence": "select _ from _ | select wholesaleretailtrade from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectsum",
      "ed_taxrate.*",
      "ed_taxrate.basiscode",
      "ed_taxrate.maturity",
      "ed_taxrate.valueceiling",
      "ed_taxrate.valuefloor",
      "ed_taxrate.typename",
      "ed_taxrate.itemname",
      "ed_taxrate.ratioceiling"
    ]
  },
  {
    "question": "List the amount of residents' savings deposits in the asset and liability statements of other deposit-taking companies for each year in the past 3 years.",
    "sql": "select enddate, savingdeposits from ed_otherdepositorycorpbs where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select enddate , savingdeposits from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "savingdeposits(resident savings deposits)",
          "foreignliabilities(foreign liabilities)",
          "claimsoncentralbank(claims on central bank)",
          "demanddeposits(current deposits for enterprises)",
          "claimsonotherresidentsec(claims on other resident sectors)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "savingdeposits",
          "foreignliabilities",
          "claimsoncentralbank",
          "demanddeposits",
          "claimsonotherresidentsec",
          "claimsongovernment"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "agriculturetax(agricultural tax (in million of rmb))",
          "enterpriseincometax(enterprise income tax (in million of rmb))",
          "genterpriseincome(enterprise revenue growth rate)",
          "gtaxs(various tax revenues growth rate)",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "nationaldefense(defense expenditure (in million of rmb))",
          "localgovrevenue(local fiscal revenue (in million of rmb))"
        ],
        "column_names_original_en": [
          "agriculturetax",
          "enterpriseincometax",
          "genterpriseincome",
          "gtaxs",
          "localgovexpenditure",
          "nationaldefense",
          "localgovrevenue"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "id(record identifier)",
          "indexname(index name)",
          "enddate(deadline)",
          "indexvalue(index)",
          "indextype(index category)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "id",
          "indexname",
          "enddate",
          "indexvalue",
          "indextype",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "List the amount of residents' savings deposits in the asset and liability statements of other deposit-taking companies for each year in the past 3 years. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).genterpriseincome(enterprise revenue growth rate) , ed_financialbalance(government revenue and expenditure).gtaxs(various tax revenues growth rate) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period)",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , savingdeposits from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.foreignliabilities",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_financialbalance.*",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.enterpriseincometax",
      "ed_financialbalance.genterpriseincome",
      "ed_financialbalance.gtaxs",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.nationaldefense",
      "ed_financialbalance.localgovrevenue",
      "ed_producerpiformp.*",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.reportperiod"
    ]
  },
  {
    "question": "Please provide detailed data on China's domestic gross domestic product (GDP) for the secondary industry.",
    "sql": "select secondindustrygdp from ed_grossdomesticproduct;",
    "norm_sql": "select secondindustrygdp from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "secondindustrygdp(the second industry (in million of rmb))",
          "id(record identifier)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "gdp(gross domestic product (in million of rmb).)",
          "province(province and city)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "primaryindustrygdp(the primary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "secondindustrygdp",
          "id",
          "thirdindustrygdp",
          "gdp",
          "province",
          "gdppercapita",
          "primaryindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "forex(foreign exchange (in million of rmb))",
          "reservedeposits(reserve deposit (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))"
        ],
        "column_names_original_en": [
          "forex",
          "reservedeposits",
          "bondissuance",
          "otherforeignassets",
          "claimtononfinancialinst",
          "claimtosavingsinst",
          "governmentsavings"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "collectivecomap(collective enterprise (light industry))",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "largecomap(large-scale enterprise (light industry))",
          "mediumcomap(medium-sized enterprise (light industry))",
          "enddate(deadline)",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "hivalueap(heavy industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "collectivecomap",
          "industrialvalueadded",
          "largecomap",
          "mediumcomap",
          "enddate",
          "industrialoutputvalueap",
          "hivalueap"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please provide detailed data on China's domestic gross domestic product (GDP) for the secondary industry. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb))",
    "output_sequence": "select _ from _ | select secondindustrygdp from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_industryproduction.*",
      "ed_industryproduction.collectivecomap",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.enddate",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.hivalueap"
    ]
  },
  {
    "question": "What is the total assets of financial institutions in international financial institutions over the years?",
    "sql": "select assetsatifo from ed_chinafibalancesheetrmb;",
    "norm_sql": "select assetsatifo from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "assetsatifo(asset in international financial institutions)",
          "loantogov(financial borrowing)",
          "moneyincirculation(currency in circulation)",
          "mediumlongtermloans(medium-to-long term loans)",
          "datatype(data type code)",
          "agriculturaldeposits(agricultural deposit)",
          "sharesandotherinvestments(equity and other investments)"
        ],
        "column_names_original_en": [
          "assetsatifo",
          "loantogov",
          "moneyincirculation",
          "mediumlongtermloans",
          "datatype",
          "agriculturaldeposits",
          "sharesandotherinvestments"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexname(index name)",
          "indexvalue(index value (points))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "enddate",
          "indexname",
          "indexvalue",
          "id"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "id(record identifier)",
          "indextitle(index name)",
          "indexcode(index code)",
          "reportarea(statistical region category)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "comparetolastmonth(index month-on-month change (points))"
        ],
        "column_names_original_en": [
          "id",
          "indextitle",
          "indexcode",
          "reportarea",
          "reportperiod",
          "enddate",
          "comparetolastmonth"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the total assets of financial institutions in international financial institutions over the years? | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points))",
    "output_sequence": "select _ from _ | select assetsatifo from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.id",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.comparetolastmonth"
    ]
  },
  {
    "question": "Hello, please help me check the monthly industrial output value of \"National\" \"state-owned and above-scale industrial enterprises\".",
    "sql": "select enddate, industrialoutputvalueap from ed_industryproduction where reportarea ='National' and statstandard ='State-owned and above-scale industrial enterprises' and reportperiod ='monthly';",
    "norm_sql": "select enddate , industrialoutputvalueap from ed_industryproduction where reportarea = 'National' and statstandard = 'State-owned and above-scale industrial enterprises' and reportperiod = 'monthly'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "mediumcomap(medium-sized enterprise (light industry))",
          "minitypecomap(small-scale enterprise (light industry))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialoutputvalueap",
          "mediumcomap",
          "minitypecomap"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "savingdeposits(resident savings deposits)",
          "claimsoncentralbank(claims on central bank)",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "claimsonotherresidentsec(claims on other resident sectors)",
          "otherassets(other assets)",
          "paidincapital(paid-up capital)",
          "liabilitiestocentralbank(liabilities to the central bank.)"
        ],
        "column_names_original_en": [
          "savingdeposits",
          "claimsoncentralbank",
          "liabilitiestonfinst",
          "claimsonotherresidentsec",
          "otherassets",
          "paidincapital",
          "liabilitiestocentralbank"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "subjectname(indicator name)",
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)",
          "reportperiod(statistical period)",
          "enddate(deadline)",
          "subjectsum(amount (in million of rmb))"
        ],
        "column_names_original_en": [
          "subjectname",
          "yoy",
          "id",
          "reportperiod",
          "enddate",
          "subjectsum"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hello, please help me check the monthly industrial output value of \"National\" \"state-owned and above-scale industrial enterprises\". | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) , ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets) , ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select enddate , industrialoutputvalueap from ed_industryproduction where reportarea = 'National' and statstandard = 'State-owned and above-scale industrial enterprises' and reportperiod = 'monthly'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.minitypecomap",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_otherdepositorycorpbs.otherassets",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectsum"
    ]
  },
  {
    "question": "I want to know the enterprise income and corporate income tax in Jiangsu Province in recent years.",
    "sql": "select enterpriseincome, enterpriseincometax from ed_financialbalance where province ='Jiangsu';",
    "norm_sql": "select enterpriseincome , enterpriseincometax from ed_financialbalance where province = 'Jiangsu'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "maturity(repurchase period)",
          "secumarket(securities market)",
          "valueceiling(maximum value (rmb))",
          "ratiofloor(minimum ratio (%))",
          "basiscode(billing baseline)",
          "effectivedate(effective date)",
          "valuefloor(minimum value/starting point (rmb))"
        ],
        "column_names_original_en": [
          "maturity",
          "secumarket",
          "valueceiling",
          "ratiofloor",
          "basiscode",
          "effectivedate",
          "valuefloor"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "province(province and city)",
          "enterpriseincometax(enterprise income tax (in million of rmb))",
          "enterpriseincome(enterprise income (in million of rmb))",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "reportarea(statistical area category)",
          "centralgovrevenue(central fiscal revenue (in million of yuan))",
          "gnationaldefense(defense expenditure growth rate)"
        ],
        "column_names_original_en": [
          "province",
          "enterpriseincometax",
          "enterpriseincome",
          "localgovrevenue",
          "reportarea",
          "centralgovrevenue",
          "gnationaldefense"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "cumcpitobacco(cumulative average of tobacco, alcohol, and supplies)",
          "qoqcpi(resident consumer price index (month-on-month))",
          "yoycpitobacco(tobacco, alcohol, and supplies year-on-year)",
          "enddate(deadline)",
          "cumcpitrafficcommunication(cumulative average of transportation and communication)",
          "yoycpi(resident consumer price index (year-on-year))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "cumcpitobacco",
          "qoqcpi",
          "yoycpitobacco",
          "enddate",
          "cumcpitrafficcommunication",
          "yoycpi",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the enterprise income and corporate income tax in Jiangsu Province in recent years. | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).centralgovrevenue(central fiscal revenue (in million of yuan)) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).cumcpitobacco(cumulative average of tobacco, alcohol, and supplies) , ed_consumerpriceindex(consumer price index).qoqcpi(resident consumer price index (month-on-month)) , ed_consumerpriceindex(consumer price index).yoycpitobacco(tobacco, alcohol, and supplies year-on-year) , ed_consumerpriceindex(consumer price index).enddate(deadline) , ed_consumerpriceindex(consumer price index).cumcpitrafficcommunication(cumulative average of transportation and communication) , ed_consumerpriceindex(consumer price index).yoycpi(resident consumer price index (year-on-year)) , ed_consumerpriceindex(consumer price index).id(record identifier)",
    "output_sequence": "select _ from _ where _ | select enterpriseincome , enterpriseincometax from ed_financialbalance where province = 'Jiangsu'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.maturity",
      "ed_taxrate.secumarket",
      "ed_taxrate.valueceiling",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.basiscode",
      "ed_taxrate.effectivedate",
      "ed_taxrate.valuefloor",
      "ed_financialbalance.*",
      "ed_financialbalance.province",
      "ed_financialbalance.enterpriseincometax",
      "ed_financialbalance.enterpriseincome",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.centralgovrevenue",
      "ed_financialbalance.gnationaldefense",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.cumcpitobacco",
      "ed_consumerpriceindex.qoqcpi",
      "ed_consumerpriceindex.yoycpitobacco",
      "ed_consumerpriceindex.enddate",
      "ed_consumerpriceindex.cumcpitrafficcommunication",
      "ed_consumerpriceindex.yoycpi",
      "ed_consumerpriceindex.id"
    ]
  },
  {
    "question": "Hello, can you help me check the \"end-of-period cumulative\" industrial value-added data for \"national\" \"all industrial enterprises\", preferably with the time?",
    "sql": "select enddate, industrialvalueadded from ed_industryproduction where reportarea ='National' and statstandard ='All Industrial Enterprises' and reportperiod ='End-of-Period Cumulative';",
    "norm_sql": "select enddate , industrialvalueadded from ed_industryproduction where reportarea = 'National' and statstandard = 'All Industrial Enterprises' and reportperiod = 'End-of-Period Cumulative'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "livalueap(light industry (in million of rmb))",
          "enddate(deadline)",
          "mediumcomap(medium-sized enterprise (light industry))",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "reportperiod(data statistics interval)",
          "reportarea(statistical area category)"
        ],
        "column_names_original_en": [
          "livalueap",
          "enddate",
          "mediumcomap",
          "statstandard",
          "industrialvalueadded",
          "reportperiod",
          "reportarea"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "commodity(product name)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "reportperiod(data statistical period)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "sovereigntycountry(the subject country)"
        ],
        "column_names_original_en": [
          "commodity",
          "eximvalueofgoods",
          "gyoyofexvaluegoods",
          "reportperiod",
          "gyoyofeximvaluegoods",
          "gyoyofimvaluegoods",
          "sovereigntycountry"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdp(gross domestic product (in million of rmb).)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "gdp",
          "gdppercapita",
          "primaryindustrygdp",
          "gdpgrowthyoy",
          "secondindustrygdp",
          "id",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hello, can you help me check the \"end-of-period cumulative\" industrial value-added data for \"national\" \"all industrial enterprises\", preferably with the time? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).reportarea(statistical area category) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).enddate(deadline)",
    "output_sequence": "select _ from _ where _ | select enddate , industrialvalueadded from ed_industryproduction where reportarea = 'National' and statstandard = 'All Industrial Enterprises' and reportperiod = 'End-of-Period Cumulative'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.enddate",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.reportarea",
      "ed_exportimport.*",
      "ed_exportimport.commodity",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.reportperiod",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.sovereigntycountry",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.enddate"
    ]
  },
  {
    "question": "What are the maximum value of currency reserves and the minimum value of government deposits?",
    "sql": "select max(moneyreserves), min(governmentsavings) from ed_moneyauthoritybs;",
    "norm_sql": "select max ( moneyreserves ) , min ( governmentsavings ) from ed_moneyauthoritybs",
    "sql_skeleton": "select max ( _ ) , min ( _ ) from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "moneyreserves(reserve currency (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "moneyandgold(currency gold (in million of rmb))"
        ],
        "column_names_original_en": [
          "moneyreserves",
          "governmentsavings",
          "otherliability",
          "claimtogovernment",
          "moneyissuance",
          "totalassets",
          "moneyandgold"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "demanddeposits(current deposits for enterprises)",
          "transferabledeposits(transferable deposits)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "depositsexcludedfromm2(deposits not included in broad money)"
        ],
        "column_names_original_en": [
          "claimsonotherdepositcorp",
          "liabilitiestocentralbank",
          "depositsincludedinm2",
          "demanddeposits",
          "transferabledeposits",
          "claimsonothernfinstitute",
          "depositsexcludedfromm2"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpicloth(clothing year-on-year)",
          "yoycpimedicare(medical care and personal care products year-on-year)",
          "yoycpi(resident consumer price index (year-on-year))",
          "qoqcpicloth(clothing month-on-month)",
          "cumcpientertainmentservice(accumulated average of entertainment, education, cultural goods and services)",
          "qoqcpifamilyequipmentservice(household equipment and services month-on-month)",
          "cumcpimedicare(cumulative average of healthcare and personal care products)"
        ],
        "column_names_original_en": [
          "yoycpicloth",
          "yoycpimedicare",
          "yoycpi",
          "qoqcpicloth",
          "cumcpientertainmentservice",
          "qoqcpifamilyequipmentservice",
          "cumcpimedicare"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the maximum value of currency reserves and the minimum value of government deposits? | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpicloth(clothing year-on-year) , ed_consumerpriceindex(consumer price index).yoycpimedicare(medical care and personal care products year-on-year) , ed_consumerpriceindex(consumer price index).yoycpi(resident consumer price index (year-on-year)) , ed_consumerpriceindex(consumer price index).qoqcpicloth(clothing month-on-month) , ed_consumerpriceindex(consumer price index).cumcpientertainmentservice(accumulated average of entertainment, education, cultural goods and services) , ed_consumerpriceindex(consumer price index).qoqcpifamilyequipmentservice(household equipment and services month-on-month) , ed_consumerpriceindex(consumer price index).cumcpimedicare(cumulative average of healthcare and personal care products)",
    "output_sequence": "select max ( _ ) , min ( _ ) from _ | select max ( moneyreserves ) , min ( governmentsavings ) from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpicloth",
      "ed_consumerpriceindex.yoycpimedicare",
      "ed_consumerpriceindex.yoycpi",
      "ed_consumerpriceindex.qoqcpicloth",
      "ed_consumerpriceindex.cumcpientertainmentservice",
      "ed_consumerpriceindex.qoqcpifamilyequipmentservice",
      "ed_consumerpriceindex.cumcpimedicare"
    ]
  },
  {
    "question": "Mr. Liao has been inspecting work recently. Please check for him the situation where our total liability exceeds 10 million yuan and list the records of the end date, foreign liability, and other liability.",
    "sql": "select enddate, abroadliability, otherliability from ed_moneyauthoritybs where totalliability > 10 ;",
    "norm_sql": "select enddate , abroadliability , otherliability from ed_moneyauthoritybs where totalliability > 10",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "abroadliability(abroad liabilities (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))",
          "totalliability(total liabilities (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "abroadliability",
          "otherliability",
          "totalliability",
          "moneyreserves",
          "otherforeignassets",
          "governmentsavings"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "id(record identifier)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "reportperiod(data statistical period)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "id",
          "indextype",
          "indexname",
          "indexvalue",
          "reportperiod",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "cumcpi(cumulative average of resident consumer price index)",
          "yoycpimedicare(medical care and personal care products year-on-year)",
          "yoycpicloth(clothing year-on-year)",
          "cumcpicloth(cumulative average of clothing)",
          "qoqcpifood(food price month-on-month)",
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)",
          "qoqcpitrafficcommunication(transportation and communication month-on-month)"
        ],
        "column_names_original_en": [
          "cumcpi",
          "yoycpimedicare",
          "yoycpicloth",
          "cumcpicloth",
          "qoqcpifood",
          "yoycpifamilyequipmentservice",
          "qoqcpitrafficcommunication"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Mr. Liao has been inspecting work recently. Please check for him the situation where our total liability exceeds 10 million yuan and list the records of the end date, foreign liability, and other liability. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).enddate(deadline) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).yoycpimedicare(medical care and personal care products year-on-year) , ed_consumerpriceindex(consumer price index).yoycpicloth(clothing year-on-year) , ed_consumerpriceindex(consumer price index).cumcpicloth(cumulative average of clothing) , ed_consumerpriceindex(consumer price index).qoqcpifood(food price month-on-month) , ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpitrafficcommunication(transportation and communication month-on-month)",
    "output_sequence": "select _ from _ where _ | select enddate , abroadliability , otherliability from ed_moneyauthoritybs where totalliability > 10",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_producerpiformp.*",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.enddate",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.yoycpimedicare",
      "ed_consumerpriceindex.yoycpicloth",
      "ed_consumerpriceindex.cumcpicloth",
      "ed_consumerpriceindex.qoqcpifood",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice",
      "ed_consumerpriceindex.qoqcpitrafficcommunication"
    ]
  },
  {
    "question": "Recently, Mr. Li is organizing data. Please help him extract the records of money reserves and bond issuance from the central bank's balance sheet.",
    "sql": "select moneyreserves, bondissuance from ed_moneyauthoritybs;",
    "norm_sql": "select moneyreserves , bondissuance from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "abroadliability(abroad liabilities (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))"
        ],
        "column_names_original_en": [
          "claimtononfinancialinst",
          "totalassets",
          "abroadliability",
          "bondissuance",
          "claimtogovernment",
          "moneyreserves",
          "otherforeignassets"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "gdp(gross domestic product (in million of rmb).)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "gdpgrowthyoy",
          "gdppercapita",
          "gdp",
          "secondindustrygdp",
          "thirdindustrygdp",
          "primaryindustrygdp",
          "enddate"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "enddate(deadline)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "reportperiod",
          "id",
          "enddate",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Recently, Mr. Li is organizing data. Please help him extract the records of money reserves and bond issuance from the central bank's balance sheet. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name)",
    "output_sequence": "select _ from _ | select moneyreserves , bondissuance from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.enddate",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexname"
    ]
  },
  {
    "question": "I am particularly interested in knowing the annual total industrial output value of \"all\" industrial enterprises in \"the whole country\".",
    "sql": "select enddate, industrialoutputvalueap from ed_industryproduction where reportarea ='the whole country' and statstandard ='all industrial enterprises' and reportperiod ='annual';",
    "norm_sql": "select enddate , industrialoutputvalueap from ed_industryproduction where reportarea = 'the whole country' and statstandard = 'all industrial enterprises' and reportperiod = 'annual'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexvalue(index)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indextype(index category)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "id",
          "reportperiod",
          "indexname",
          "indextype",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "subjectname(indicator name)",
          "yoy(year-on-year increase or decrease (%))",
          "subjectsum(amount (in million of rmb))",
          "reportperiod(statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "subjectname",
          "yoy",
          "subjectsum",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "largecomap(large-scale enterprise (light industry))",
          "mediumcomap(medium-sized enterprise (light industry))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialoutputvalueap",
          "largecomap",
          "mediumcomap"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I am particularly interested in knowing the annual total industrial output value of \"all\" industrial enterprises in \"the whole country\". | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).enddate(deadline) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry))",
    "output_sequence": "select _ from _ where _ | select enddate , industrialoutputvalueap from ed_industryproduction where reportarea = 'the whole country' and statstandard = 'all industrial enterprises' and reportperiod = 'annual'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.enddate",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.reportperiod",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.mediumcomap"
    ]
  },
  {
    "question": "Please check the data records for total assets and total liabilities in the monetary authority's balance sheet, and display.",
    "sql": "select totalassets, totalliability from ed_moneyauthoritybs ;",
    "norm_sql": "select totalassets , totalliability from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "totalassets(total assets (in million of rmb).)",
          "totalliability(total liabilities (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "enddate(deadline)",
          "bondissuance(bond issuance (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))"
        ],
        "column_names_original_en": [
          "totalassets",
          "totalliability",
          "claimtosavingsinst",
          "claimtononfinancialinst",
          "enddate",
          "bondissuance",
          "otherforeignassets"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "effectivedate(effective date)",
          "ratiofloor(minimum ratio (%))",
          "valueceiling(maximum value (rmb))",
          "typename(tax rate type)",
          "ratioceiling(maximum ratio (%))",
          "maturity(repurchase period)",
          "secumarket(securities market)"
        ],
        "column_names_original_en": [
          "effectivedate",
          "ratiofloor",
          "valueceiling",
          "typename",
          "ratioceiling",
          "maturity",
          "secumarket"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "reportperiod(data statistical period)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "commodity(product name)"
        ],
        "column_names_original_en": [
          "gyoyofimvaluegoods",
          "gyoyofeximvaluegoods",
          "gyoyofexvaluegoods",
          "eximvalueofgoods",
          "reportperiod",
          "imvalueofgoods",
          "commodity"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please check the data records for total assets and total liabilities in the monetary authority's balance sheet, and display. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).secumarket(securities market) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).commodity(product name)",
    "output_sequence": "select _ from _ | select totalassets , totalliability from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_taxrate.*",
      "ed_taxrate.effectivedate",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.valueceiling",
      "ed_taxrate.typename",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.maturity",
      "ed_taxrate.secumarket",
      "ed_exportimport.*",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.reportperiod",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.commodity"
    ]
  },
  {
    "question": "How many types of tax rate categories do we have?",
    "sql": "select count(*) from ed_taxrate;",
    "norm_sql": "select count ( * ) from ed_taxrate",
    "sql_skeleton": "select count ( _ ) from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "secumarket(securities market)",
          "valueceiling(maximum value (rmb))",
          "itemname(tax rate items)",
          "ratiofloor(minimum ratio (%))",
          "maturity(repurchase period)",
          "basiscode(billing baseline)"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "secumarket",
          "valueceiling",
          "itemname",
          "ratiofloor",
          "maturity",
          "basiscode"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "province(province)",
          "mediumcomap(medium-sized enterprise (light industry))",
          "livalueap(light industry (in million of rmb))",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "enddate(deadline)",
          "reportarea(statistical area category)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "mediumcomap",
          "livalueap",
          "stateownedcontrolledcomap",
          "enddate",
          "reportarea",
          "industrialvalueadded"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "claimstogov(claims on the government (net))",
          "centralbankbonds(central bank bonds)",
          "quasimoney(quasi-currency)",
          "netabroadassets(foreign net assets)",
          "fcdeposits(foreign currency deposit.)",
          "domesticloans(domestic credit)",
          "bonds(bonds)"
        ],
        "column_names_original_en": [
          "claimstogov",
          "centralbankbonds",
          "quasimoney",
          "netabroadassets",
          "fcdeposits",
          "domesticloans",
          "bonds"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How many types of tax rate categories do we have? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).basiscode(billing baseline) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds)",
    "output_sequence": "select count ( _ ) from _ | select count ( * ) from ed_taxrate",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.secumarket",
      "ed_taxrate.valueceiling",
      "ed_taxrate.itemname",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.maturity",
      "ed_taxrate.basiscode",
      "ed_industryproduction.*",
      "ed_industryproduction.province",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.industrialvalueadded",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.bonds"
    ]
  },
  {
    "question": "Calculate the amount of our fiscal revenue and fiscal expenditure in 1978.",
    "sql": "select localgovrevenue, localgovexpenditure from ed_financialbalance where strftime('%Y', enddate)='1978';",
    "norm_sql": "select localgovrevenue , localgovexpenditure from ed_financialbalance where strftime ( '%Y' , enddate ) = '1978'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "genterpriseincome(enterprise revenue growth rate)",
          "enterpriseincometax(enterprise income tax (in million of rmb))",
          "socialsecurity(social security expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "localgovrevenue",
          "localgovexpenditure",
          "gfinancialrevenue",
          "genterpriseincome",
          "enterpriseincometax",
          "socialsecurity"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "subjectsum(amount (in million of rmb))",
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectname(indicator name)",
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "subjectsum",
          "enddate",
          "reportperiod",
          "subjectname",
          "yoy",
          "id"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "id(record identifier)",
          "enddate(deadline)",
          "entrustedloans(trust loan (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "socialfinancing",
          "foreigncurrencyloans",
          "corporatebonds",
          "definancingofnonfe",
          "id",
          "enddate",
          "entrustedloans"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Calculate the amount of our fiscal revenue and fiscal expenditure in 1978. | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).genterpriseincome(enterprise revenue growth rate) , ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select localgovrevenue , localgovexpenditure from ed_financialbalance where strftime ( '%Y' , enddate ) = '1978'",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.genterpriseincome",
      "ed_financialbalance.enterpriseincometax",
      "ed_financialbalance.socialsecurity",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "ed_socialfinancing.*",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.id",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.entrustedloans"
    ]
  },
  {
    "question": "What were the amounts of bond issuance and foreign liabilities for us last year? Please obtain them from the central bank's balance sheet.",
    "sql": "select bondissuance, abroadliability from ed_moneyauthoritybs where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year'));",
    "norm_sql": "select bondissuance , abroadliability from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "bondissuance(bond issuance (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))",
          "reservedeposits(reserve deposit (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "selfownedmoney(own funds (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "bondissuance",
          "abroadliability",
          "reservedeposits",
          "claimtosavingsinst",
          "nonfinancialorgdeposits",
          "selfownedmoney"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "belowcounty(county and below)",
          "foodbeverage(catering industry)",
          "collectiveunits(collective unit)",
          "province(province and city)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "othersunits(other units)",
          "wholesaleretailtrade(wholesale and retail trade industry)"
        ],
        "column_names_original_en": [
          "belowcounty",
          "foodbeverage",
          "collectiveunits",
          "province",
          "retailvalueofscgoods",
          "othersunits",
          "wholesaleretailtrade"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpihousing(residential year-on-year)",
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)",
          "cumcpientertainmentservice(accumulated average of entertainment, education, cultural goods and services)",
          "cumcpitobacco(cumulative average of tobacco, alcohol, and supplies)",
          "yoycpitrafficcommunication(transportation and communication year-over-year)",
          "enddate(deadline)",
          "qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month)"
        ],
        "column_names_original_en": [
          "yoycpihousing",
          "yoycpifamilyequipmentservice",
          "cumcpientertainmentservice",
          "cumcpitobacco",
          "yoycpitrafficcommunication",
          "enddate",
          "qoqcpientertainmentservice"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What were the amounts of bond issuance and foreign liabilities for us last year? Please obtain them from the central bank's balance sheet. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpihousing(residential year-on-year) , ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year) , ed_consumerpriceindex(consumer price index).cumcpientertainmentservice(accumulated average of entertainment, education, cultural goods and services) , ed_consumerpriceindex(consumer price index).cumcpitobacco(cumulative average of tobacco, alcohol, and supplies) , ed_consumerpriceindex(consumer price index).yoycpitrafficcommunication(transportation and communication year-over-year) , ed_consumerpriceindex(consumer price index).enddate(deadline) , ed_consumerpriceindex(consumer price index).qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month)",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) | select bondissuance , abroadliability from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpihousing",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice",
      "ed_consumerpriceindex.cumcpientertainmentservice",
      "ed_consumerpriceindex.cumcpitobacco",
      "ed_consumerpriceindex.yoycpitrafficcommunication",
      "ed_consumerpriceindex.enddate",
      "ed_consumerpriceindex.qoqcpientertainmentservice"
    ]
  },
  {
    "question": "In which securities market are \"Treasury Bonds\" generally listed and traded?",
    "sql": "select secumarket from ed_taxrate where typename ='Treasury Bonds';",
    "norm_sql": "select secumarket from ed_taxrate where typename = 'Treasury Bonds'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "totalloans(various loans)",
          "id(record identifier)",
          "moneyincirculation(currency in circulation)",
          "financedeposits(financial deposit)",
          "totalsavings(all deposit accounts)",
          "orgdeposits(government and institutional deposits)",
          "corporatesavings(unit deposit/corporate deposit)"
        ],
        "column_names_original_en": [
          "totalloans",
          "id",
          "moneyincirculation",
          "financedeposits",
          "totalsavings",
          "orgdeposits",
          "corporatesavings"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)",
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)",
          "drrtype(reserve requirement ratio category)"
        ],
        "column_names_original_en": [
          "ratiofloor",
          "effectivedate",
          "ratioceiling",
          "id",
          "drrtype"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "secumarket(securities market)",
          "ratiofloor(minimum ratio (%))",
          "itemname(tax rate items)",
          "id(record identifier)",
          "maturity(repurchase period)",
          "valuefloor(minimum value/starting point (rmb))"
        ],
        "column_names_original_en": [
          "typename",
          "secumarket",
          "ratiofloor",
          "itemname",
          "id",
          "maturity",
          "valuefloor"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In which securities market are \"Treasury Bonds\" generally listed and traded? | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).orgdeposits(government and institutional deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb))",
    "output_sequence": "select _ from _ where _ | select secumarket from ed_taxrate where typename = 'Treasury Bonds'",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.orgdeposits",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.drrtype",
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.itemname",
      "ed_taxrate.id",
      "ed_taxrate.maturity",
      "ed_taxrate.valuefloor"
    ]
  },
  {
    "question": "Please provide a summary of the year-end accumulated RMB loan new additions.",
    "sql": "select enddate, subjectsum from ed_newincreasingloan where reportperiod ='Year-end accumulated';",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'Year-end accumulated'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)",
          "subjectsum(amount (in million of rmb))",
          "reportperiod(statistical period)",
          "enddate(deadline)",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "yoy",
          "id",
          "subjectsum",
          "reportperiod",
          "enddate",
          "subjectname"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "abroadliability(abroad liabilities (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "id(record identifier)",
          "selfownedmoney(own funds (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "moneyandgold(currency gold (in million of rmb))",
          "reservedeposits(reserve deposit (in million of rmb))"
        ],
        "column_names_original_en": [
          "abroadliability",
          "nonfinancialorgdeposits",
          "id",
          "selfownedmoney",
          "totalassets",
          "moneyandgold",
          "reservedeposits"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)",
          "typename(tax rate type)",
          "valuefloor(minimum value/starting point (rmb))",
          "id(record identifier)",
          "maturity(repurchase period)"
        ],
        "column_names_original_en": [
          "itemname",
          "ratiofloor",
          "effectivedate",
          "typename",
          "valuefloor",
          "id",
          "maturity"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please provide a summary of the year-end accumulated RMB loan new additions. | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).maturity(repurchase period)",
    "output_sequence": "select _ from _ where _ | select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'Year-end accumulated'",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectname",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.effectivedate",
      "ed_taxrate.typename",
      "ed_taxrate.valuefloor",
      "ed_taxrate.id",
      "ed_taxrate.maturity"
    ]
  },
  {
    "question": "I want to know the data situation of the Gross Domestic Product (GDP) of the primary industry in our country.",
    "sql": "select primaryindustrygdp from ed_grossdomesticproduct;",
    "norm_sql": "select primaryindustrygdp from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "foodbeverage(catering industry)",
          "othersunits(other units)",
          "county(county)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "id",
          "wholesaleretailtrade",
          "foodbeverage",
          "othersunits",
          "county",
          "retailvalueofscgoods"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "id(record identifier)",
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "enddate(deadline)",
          "indexvalue(index)"
        ],
        "column_names_original_en": [
          "id",
          "indexname",
          "reportperiod",
          "indextype",
          "enddate",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "province(province and city)",
          "id(record identifier)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "gdp(gross domestic product (in million of rmb).)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "primaryindustrygdp",
          "province",
          "id",
          "gdpgrowthyoy",
          "gdppercapita",
          "gdp",
          "thirdindustrygdp"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the data situation of the Gross Domestic Product (GDP) of the primary industry in our country. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb))",
    "output_sequence": "select _ from _ | select primaryindustrygdp from ed_grossdomesticproduct",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.id",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_producerpiformp.*",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.thirdindustrygdp"
    ]
  },
  {
    "question": "List the retail amount records of the catering industry in China.",
    "sql": "select foodbeverage from ed_retailvalueofscgoods;",
    "norm_sql": "select foodbeverage from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "foodbeverage(catering industry)",
          "reportperiod(data statistical period)",
          "reportarea(statistical category of region)",
          "belowcounty(county and below)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "collectiveunits(collective unit)",
          "stateownedunits(state-owned unit)"
        ],
        "column_names_original_en": [
          "foodbeverage",
          "reportperiod",
          "reportarea",
          "belowcounty",
          "wholesaleretailtrade",
          "collectiveunits",
          "stateownedunits"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indextype(index category)",
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "indexvalue(index)"
        ],
        "column_names_original_en": [
          "enddate",
          "indextype",
          "indexname",
          "reportperiod",
          "id",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enterpriseincometax(enterprise income tax (in million of rmb))",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "enddate(deadline)",
          "salestax(business tax (in million of rmb))",
          "nationaldefense(defense expenditure (in million of rmb))",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "reportarea(statistical area category)"
        ],
        "column_names_original_en": [
          "enterpriseincometax",
          "localgovexpenditure",
          "enddate",
          "salestax",
          "nationaldefense",
          "expenditurecitymc",
          "reportarea"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "List the retail amount records of the catering industry in China. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexvalue(index) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category)",
    "output_sequence": "select _ from _ | select foodbeverage from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexvalue",
      "ed_financialbalance.*",
      "ed_financialbalance.enterpriseincometax",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.enddate",
      "ed_financialbalance.salestax",
      "ed_financialbalance.nationaldefense",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.reportarea"
    ]
  },
  {
    "question": "Please provide me with the social retail sales data of collective units in our country.",
    "sql": "select collectiveunits from ed_retailvalueofscgoods;",
    "norm_sql": "select collectiveunits from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "collectiveunits(collective unit)",
          "id(record identifier)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "selfemployed(individual unit)",
          "reportperiod(data statistical period)",
          "city(city)",
          "wholesaleretailtrade(wholesale and retail trade industry)"
        ],
        "column_names_original_en": [
          "collectiveunits",
          "id",
          "retailvalueofscgoods",
          "selfemployed",
          "reportperiod",
          "city",
          "wholesaleretailtrade"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "qoqcpimedicare(healthcare and personal care products month-on-month)",
          "yoycpitrafficcommunication(transportation and communication year-over-year)",
          "qoqcpifood(food price month-on-month)",
          "yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year)",
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)",
          "qoqcpi(resident consumer price index (month-on-month))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "qoqcpimedicare",
          "yoycpitrafficcommunication",
          "qoqcpifood",
          "yoycpientertainmentservice",
          "yoycpifamilyequipmentservice",
          "qoqcpi",
          "id"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "comparetolastmonth(index month-on-month change (points))",
          "indextitle(index name)",
          "indexcode(index code)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "id",
          "reportperiod",
          "enddate",
          "comparetolastmonth",
          "indextitle",
          "indexcode",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please provide me with the social retail sales data of collective units in our country. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).qoqcpimedicare(healthcare and personal care products month-on-month) , ed_consumerpriceindex(consumer price index).yoycpitrafficcommunication(transportation and communication year-over-year) , ed_consumerpriceindex(consumer price index).qoqcpifood(food price month-on-month) , ed_consumerpriceindex(consumer price index).yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year) , ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpi(resident consumer price index (month-on-month)) , ed_consumerpriceindex(consumer price index).id(record identifier) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).indexvalue(index value)",
    "output_sequence": "select _ from _ | select collectiveunits from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.id",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.qoqcpimedicare",
      "ed_consumerpriceindex.yoycpitrafficcommunication",
      "ed_consumerpriceindex.qoqcpifood",
      "ed_consumerpriceindex.yoycpientertainmentservice",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice",
      "ed_consumerpriceindex.qoqcpi",
      "ed_consumerpriceindex.id",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.indexvalue"
    ]
  },
  {
    "question": "Show the highest and lowest ratio of \"Excess Reserve Ratio\" of \"Large Chinese Capital Banks\", Old Li.",
    "sql": "select ratioceiling, ratiofloor from ed_taxrate where typename ='Large Chinese Capital Banks' and itemname = 'Excess Reserve Ratio';",
    "norm_sql": "select ratioceiling , ratiofloor from ed_taxrate where typename = 'Large Chinese Capital Banks' and itemname = 'Excess Reserve Ratio'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "maturity(repurchase period)",
          "id(record identifier)",
          "basiscode(billing baseline)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "ratiofloor",
          "ratioceiling",
          "maturity",
          "id",
          "basiscode"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "comparetolastmonth(index month-on-month change (points))",
          "id(record identifier)",
          "indexvalue(index value)",
          "indexcode(index code)",
          "indextitle(index name)",
          "reportarea(statistical region category)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "comparetolastmonth",
          "id",
          "indexvalue",
          "indexcode",
          "indextitle",
          "reportarea"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "reportperiod(data statistics interval)",
          "creditloans(trust loan (in 100 million rmb))",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "rmbloans(rmb loans (in 100 million rmb))",
          "enddate(deadline)",
          "province(province and city)",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "creditloans",
          "socialfinancing",
          "rmbloans",
          "enddate",
          "province",
          "undiscountedbacceptances"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Show the highest and lowest ratio of \"Excess Reserve Ratio\" of \"Large Chinese Capital Banks\", Old Li. | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).basiscode(billing baseline) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
    "output_sequence": "select _ from _ where _ | select ratioceiling , ratiofloor from ed_taxrate where typename = 'Large Chinese Capital Banks' and itemname = 'Excess Reserve Ratio'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.maturity",
      "ed_taxrate.id",
      "ed_taxrate.basiscode",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.reportarea",
      "ed_socialfinancing.*",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.creditloans",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.province",
      "ed_socialfinancing.undiscountedbacceptances"
    ]
  },
  {
    "question": "I want to know the total trade value of our wholesale and retail trade industry.",
    "sql": "select wholesaleretailtrade from ed_retailvalueofscgoods;",
    "norm_sql": "select wholesaleretailtrade from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "jointventures(joint operating unit)",
          "enddate(deadline)",
          "county(county)",
          "foodbeverage(catering industry)",
          "collectiveunits(collective unit)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "wholesaleretailtrade",
          "jointventures",
          "enddate",
          "county",
          "foodbeverage",
          "collectiveunits",
          "id"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "claimtogovernment(claims on the government (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "id(record identifier)",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "selfownedmoney(own funds (in million of rmb))",
          "totalliability(total liabilities (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))"
        ],
        "column_names_original_en": [
          "claimtogovernment",
          "moneyandgold",
          "id",
          "otherforeignassets",
          "selfownedmoney",
          "totalliability",
          "claimtosavingsinst"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "capitalreceived(paid-up capital)",
          "bonds(bonds)",
          "fcdeposits(foreign currency deposit.)",
          "claimstogov(claims on the government (net))",
          "netabroadassets(foreign net assets)",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "moneyandquasimoney",
          "capitalreceived",
          "bonds",
          "fcdeposits",
          "claimstogov",
          "netabroadassets",
          "claimstononfinancialinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the total trade value of our wholesale and retail trade industry. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector)",
    "output_sequence": "select _ from _ | select wholesaleretailtrade from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.id",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.claimstononfinancialinst"
    ]
  },
  {
    "question": "I want to know the total amount of other assets in the balance sheet of other deposit-taking companies.",
    "sql": "select otherassets from ed_otherdepositorycorpbs;",
    "norm_sql": "select otherassets from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "timedeposits(fixed deposit for enterprises)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "id(record identifier)",
          "paidincapital(paid-up capital)",
          "otherassets(other assets)",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "claimsonotherdepositcorp(claims on other deposit-based company)"
        ],
        "column_names_original_en": [
          "timedeposits",
          "claimsonothernfinstitute",
          "id",
          "paidincapital",
          "otherassets",
          "liabilitiestonfinst",
          "claimsonotherdepositcorp"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "reportperiod(statistical period)",
          "yoy(year-on-year increase or decrease (%))",
          "subjectsum(amount (in million of rmb))",
          "enddate(deadline)",
          "subjectname(indicator name)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "yoy",
          "subjectsum",
          "enddate",
          "subjectname",
          "id"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "enddate(deadline)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "commodity(product name)",
          "sovereigntycountry(the subject country)",
          "id(record identifier)",
          "exvalueofgoods(total export amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "enddate",
          "gyoyofeximvaluegoods",
          "gyoyofexvaluegoods",
          "commodity",
          "sovereigntycountry",
          "id",
          "exvalueofgoods"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the total amount of other assets in the balance sheet of other deposit-taking companies. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) , ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).id(record identifier) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars))",
    "output_sequence": "select _ from _ | select otherassets from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_otherdepositorycorpbs.otherassets",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.id",
      "ed_exportimport.*",
      "ed_exportimport.enddate",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.commodity",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.id",
      "ed_exportimport.exvalueofgoods"
    ]
  },
  {
    "question": "What is the total amount of domestic credit in our country?",
    "sql": "select domesticloans from ed_chinamoneyandbanking;",
    "norm_sql": "select domesticloans from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "domesticloans(domestic credit)",
          "netabroadassets(foreign net assets)",
          "capitalreceived(paid-up capital)",
          "id(record identifier)",
          "money1(currency (narrow money m1))",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "claimstogov(claims on the government (net))"
        ],
        "column_names_original_en": [
          "domesticloans",
          "netabroadassets",
          "capitalreceived",
          "id",
          "money1",
          "claimstootherinst",
          "claimstogov"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "yoy(year-on-year increase or decrease (%))",
          "enddate(deadline)",
          "id(record identifier)",
          "subjectsum(amount (in million of rmb))",
          "reportperiod(statistical period)",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "yoy",
          "enddate",
          "id",
          "subjectsum",
          "reportperiod",
          "subjectname"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "reservedeposits(deposit of reserve funds)",
          "datatype(data type code)",
          "corporatesavings(unit deposit/corporate deposit)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "shorttermloans(short-term loan)",
          "assetsatifo(asset in international financial institutions)",
          "financialbonds(financial bonds)"
        ],
        "column_names_original_en": [
          "reservedeposits",
          "datatype",
          "corporatesavings",
          "trustedandcreditdeposits",
          "shorttermloans",
          "assetsatifo",
          "financialbonds"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the total amount of domestic credit in our country? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds)",
    "output_sequence": "select _ from _ | select domesticloans from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectname",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_chinafibalancesheetrmb.financialbonds"
    ]
  },
  {
    "question": "List the annual amount of individual income tax and corporate income tax revenue in each province and city.",
    "sql": "select individualincometax, enterpriseincometax from ed_financialbalance;",
    "norm_sql": "select individualincometax , enterpriseincometax from ed_financialbalance",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "supportunderdevelopedarea(policy subsidy expenditure (in million of rmb))",
          "individualincometax(personal income tax (in million of rmb))",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))",
          "reportperiod(data statistical period)",
          "enterpriseincome(enterprise income (in million of rmb))",
          "enterpriseincometax(enterprise income tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "supportunderdevelopedarea",
          "individualincometax",
          "expenditurecitymc",
          "centralgovexpenditure",
          "reportperiod",
          "enterpriseincome",
          "enterpriseincometax"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "effectivedate(effective date)",
          "ratioceiling(maximum ratio (%))",
          "drrtype(reserve requirement ratio category)",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "id",
          "effectivedate",
          "ratioceiling",
          "drrtype",
          "ratiofloor"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indextype(index category)",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "indexvalue(index)",
          "indexname(index name)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indextype",
          "reportperiod",
          "id",
          "indexvalue",
          "indexname",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "List the annual amount of individual income tax and corporate income tax revenue in each province and city. | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).supportunderdevelopedarea(policy subsidy expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).enddate(deadline)",
    "output_sequence": "select _ from _ | select individualincometax , enterpriseincometax from ed_financialbalance",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.supportunderdevelopedarea",
      "ed_financialbalance.individualincometax",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.centralgovexpenditure",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.enterpriseincome",
      "ed_financialbalance.enterpriseincometax",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratiofloor",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.enddate"
    ]
  },
  {
    "question": "What is the retail amount of our catering industry? Is there any record?",
    "sql": "select foodbeverage from ed_retailvalueofscgoods;",
    "norm_sql": "select foodbeverage from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "foodbeverage(catering industry)",
          "id(record identifier)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "othersunits(other units)",
          "collectiveunits(collective unit)",
          "othersindustry(other industries)",
          "city(city)"
        ],
        "column_names_original_en": [
          "foodbeverage",
          "id",
          "retailvalueofscgoods",
          "othersunits",
          "collectiveunits",
          "othersindustry",
          "city"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "loantogov(financial borrowing)",
          "orgdeposits(government and institutional deposits)",
          "enddate(deadline)",
          "financedeposits(financial deposit)",
          "shorttermloans(short-term loan)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "moneyincirculation(currency in circulation)"
        ],
        "column_names_original_en": [
          "loantogov",
          "orgdeposits",
          "enddate",
          "financedeposits",
          "shorttermloans",
          "trustedandcreditdeposits",
          "moneyincirculation"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "totalliability(total liabilities (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "otherforeignassets",
          "claimtootherfinnonfininst",
          "forex",
          "totalliability",
          "claimtosavingsinst",
          "nonfinancialorgdeposits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the retail amount of our catering industry? Is there any record? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).orgdeposits(government and institutional deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
    "output_sequence": "select _ from _ | select foodbeverage from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.id",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.city",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.orgdeposits",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.nonfinancialorgdeposits"
    ]
  },
  {
    "question": "I would like to see the billing basis for \"Trading Commission Rate\" of \"Corporate Bonds\".",
    "sql": "select basiscode from ed_taxrate where typename ='Corporate Bonds' and itemname = 'Trading Commission Rate';",
    "norm_sql": "select basiscode from ed_taxrate where typename = 'Corporate Bonds' and itemname = 'Trading Commission Rate'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "basiscode(billing baseline)",
          "id(record identifier)",
          "typename(tax rate type)",
          "ratiofloor(minimum ratio (%))",
          "itemname(tax rate items)",
          "effectivedate(effective date)",
          "valuefloor(minimum value/starting point (rmb))"
        ],
        "column_names_original_en": [
          "basiscode",
          "id",
          "typename",
          "ratiofloor",
          "itemname",
          "effectivedate",
          "valuefloor"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "reportarea(statistical region category)",
          "province(province and city)",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "rmbloans(rmb loans (in 100 million rmb))",
          "entrustedloans(trust loan (in 100 million of rmb))",
          "reportperiod(data statistics interval)"
        ],
        "column_names_original_en": [
          "reportarea",
          "province",
          "corporatebonds",
          "socialfinancing",
          "rmbloans",
          "entrustedloans",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "statecode(primary country)",
          "enddate(deadline)",
          "accuavgprice(cumulative average price)",
          "reportperiod(data statistical period)",
          "quantity(quantity)",
          "accueximvalue(accumulated amount)",
          "avgprice(average price)"
        ],
        "column_names_original_en": [
          "statecode",
          "enddate",
          "accuavgprice",
          "reportperiod",
          "quantity",
          "accueximvalue",
          "avgprice"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I would like to see the billing basis for \"Trading Commission Rate\" of \"Corporate Bonds\". | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).accuavgprice(cumulative average price) , ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).quantity(quantity) , ed_productexportimport(product import and export volume).accueximvalue(accumulated amount) , ed_productexportimport(product import and export volume).avgprice(average price)",
    "output_sequence": "select _ from _ where _ | select basiscode from ed_taxrate where typename = 'Corporate Bonds' and itemname = 'Trading Commission Rate'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.basiscode",
      "ed_taxrate.id",
      "ed_taxrate.typename",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.itemname",
      "ed_taxrate.effectivedate",
      "ed_taxrate.valuefloor",
      "ed_socialfinancing.*",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.province",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.reportperiod",
      "ed_productexportimport.*",
      "ed_productexportimport.statecode",
      "ed_productexportimport.enddate",
      "ed_productexportimport.accuavgprice",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.quantity",
      "ed_productexportimport.accueximvalue",
      "ed_productexportimport.avgprice"
    ]
  },
  {
    "question": "Do you know the accumulated industrial value added amount of national state-owned and above-scale industrial enterprises in recent years? If you don't know, let me look it up for you.",
    "sql": "select enddate, industrialvalueadded from ed_industryproduction where reportarea ='National' and statstandard ='State-owned and above-scale industrial enterprises' and reportperiod ='End of period';",
    "norm_sql": "select enddate , industrialvalueadded from ed_industryproduction where reportarea = 'National' and statstandard = 'State-owned and above-scale industrial enterprises' and reportperiod = 'End of period'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "province(province)",
          "mediumcomap(medium-sized enterprise (light industry))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded",
          "province",
          "mediumcomap"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "drrtype(reserve requirement ratio category)",
          "ratioceiling(maximum ratio (%))",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "id",
          "drrtype",
          "ratioceiling",
          "ratiofloor",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexname(index name)",
          "indexvalue(index value (points))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "enddate",
          "indexname",
          "indexvalue",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Do you know the accumulated industrial value added amount of national state-owned and above-scale industrial enterprises in recent years? If you don't know, let me look it up for you. | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier)",
    "output_sequence": "select _ from _ where _ | select enddate , industrialvalueadded from ed_industryproduction where reportarea = 'National' and statstandard = 'State-owned and above-scale industrial enterprises' and reportperiod = 'End of period'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.province",
      "ed_industryproduction.mediumcomap",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.effectivedate",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.id"
    ]
  },
  {
    "question": "How much were the total assets and total liabilities in the balance sheet of the monetary authority two years ago?",
    "sql": "select totalassets, totalliability from ed_moneyauthoritybs where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select totalassets , totalliability from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "totalassets(total assets (in million of rmb).)",
          "totalliability(total liabilities (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "reservedeposits(reserve deposit (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "totalassets",
          "totalliability",
          "moneyissuance",
          "claimtogovernment",
          "moneyandgold",
          "reservedeposits"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "claimstononfinancialinst(claims on the non-financial sector)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "id(record identifier)",
          "quasimoney(quasi-currency)",
          "claimstogov(claims on the government (net))",
          "money1(currency (narrow money m1))"
        ],
        "column_names_original_en": [
          "claimstononfinancialinst",
          "claimstospecificsavingorg",
          "moneyandquasimoney",
          "id",
          "quasimoney",
          "claimstogov",
          "money1"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "reportarea(statistical area category)",
          "id(record identifier)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "livalueap(light industry (in million of rmb))",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "reportperiod(data statistics interval)"
        ],
        "column_names_original_en": [
          "reportarea",
          "id",
          "industrialvalueadded",
          "industrialoutputvalueap",
          "livalueap",
          "stateownedcontrolledcomap",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How much were the total assets and total liabilities in the balance sheet of the monetary authority two years ago? | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).reportperiod(data statistics interval)",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) | select totalassets , totalliability from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.money1",
      "ed_industryproduction.*",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.id",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.reportperiod"
    ]
  },
  {
    "question": "How many types of tax rate projects do we have?",
    "sql": "select count(*) from ed_taxrate;",
    "norm_sql": "select count ( * ) from ed_taxrate",
    "sql_skeleton": "select count ( _ ) from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "sovereigntycountry(the subject country)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "province(province and city)",
          "enddate(deadline)",
          "reportarea(statistical category of the region)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "sovereigntycountry",
          "eximvalueofgoods",
          "province",
          "enddate",
          "reportarea",
          "gyoyofexvaluegoods"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "valueaddedtax(value added tax (in million of rmb))",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "socialsecurity(social security expenditure (in million of rmb))",
          "province(province and city)",
          "gsupportunderdevelopedarea(policy subsidy expenditure growth rate)",
          "agriculturetax(agricultural tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "valueaddedtax",
          "localgovexpenditure",
          "socialsecurity",
          "province",
          "gsupportunderdevelopedarea",
          "agriculturetax"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "ratiofloor(minimum ratio (%))",
          "id(record identifier)",
          "itemname(tax rate items)",
          "basiscode(billing baseline)",
          "valueceiling(maximum value (rmb))",
          "maturity(repurchase period)",
          "typename(tax rate type)"
        ],
        "column_names_original_en": [
          "ratiofloor",
          "id",
          "itemname",
          "basiscode",
          "valueceiling",
          "maturity",
          "typename"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How many types of tax rate projects do we have? | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).gsupportunderdevelopedarea(policy subsidy expenditure growth rate) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).typename(tax rate type)",
    "output_sequence": "select count ( _ ) from _ | select count ( * ) from ed_taxrate",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.reportperiod",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.province",
      "ed_exportimport.enddate",
      "ed_exportimport.reportarea",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_financialbalance.*",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.valueaddedtax",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.socialsecurity",
      "ed_financialbalance.province",
      "ed_financialbalance.gsupportunderdevelopedarea",
      "ed_financialbalance.agriculturetax",
      "ed_taxrate.*",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.id",
      "ed_taxrate.itemname",
      "ed_taxrate.basiscode",
      "ed_taxrate.valueceiling",
      "ed_taxrate.maturity",
      "ed_taxrate.typename"
    ]
  },
  {
    "question": "I want to know the data of claims to government debt, claims to non-financial sector debt, and claims to specific institution debt in the year 2000.",
    "sql": "select claimstogov, claimstononfinancialinst, claimstospecificsavingorg from ed_chinamoneyandbanking where strftime('%Y', enddate)='2000';",
    "norm_sql": "select claimstogov , claimstononfinancialinst , claimstospecificsavingorg from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = '2000'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "province(province and city)",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "reportperiod(data statistics interval)",
          "id(record identifier)",
          "reportarea(statistical region category)",
          "socialfinancing(total social financing scale (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "definancingofnonfe",
          "foreigncurrencyloans",
          "reportperiod",
          "id",
          "reportarea",
          "socialfinancing"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "basiscode(billing baseline)",
          "ratioceiling(maximum ratio (%))",
          "ratiofloor(minimum ratio (%))",
          "id(record identifier)",
          "valuefloor(minimum value/starting point (rmb))",
          "itemname(tax rate items)",
          "typename(tax rate type)"
        ],
        "column_names_original_en": [
          "basiscode",
          "ratioceiling",
          "ratiofloor",
          "id",
          "valuefloor",
          "itemname",
          "typename"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "bonds(bonds)",
          "capitalreceived(paid-up capital)"
        ],
        "column_names_original_en": [
          "enddate",
          "claimstogov",
          "claimstononfinancialinst",
          "claimstospecificsavingorg",
          "claimstootherinst",
          "bonds",
          "capitalreceived"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the data of claims to government debt, claims to non-financial sector debt, and claims to specific institution debt in the year 2000. | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital)",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select claimstogov , claimstononfinancialinst , claimstospecificsavingorg from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = '2000'",
    "tc_original": [
      "ed_socialfinancing.*",
      "ed_socialfinancing.province",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.id",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.socialfinancing",
      "ed_taxrate.*",
      "ed_taxrate.basiscode",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.id",
      "ed_taxrate.valuefloor",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.capitalreceived"
    ]
  },
  {
    "question": "What is the monthly industrial production value data of medium and small-sized enterprises within the scope of \"National\" \"all industrial enterprises\" annually, don't forget to differentiate by time?",
    "sql": "select enddate, mediumcomap, minitypecomap from ed_industryproduction where reportarea ='National' and statstandard ='all industrial enterprises' and reportperiod ='monthly';",
    "norm_sql": "select enddate , mediumcomap , minitypecomap from ed_industryproduction where reportarea = 'National' and statstandard = 'all industrial enterprises' and reportperiod = 'monthly'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "mediumcomap(medium-sized enterprise (light industry))",
          "minitypecomap(small-scale enterprise (light industry))",
          "hivalueap(heavy industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportarea",
          "reportperiod",
          "statstandard",
          "mediumcomap",
          "minitypecomap",
          "hivalueap"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "enddate(deadline)",
          "indexvalue(index value (points))",
          "reportperiod(data statistical period)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "id",
          "enddate",
          "indexvalue",
          "reportperiod",
          "indexname"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "corporatesavings(unit deposit/corporate deposit)",
          "id(record identifier)",
          "savingsdeposits(savings deposits)",
          "equityandotherinvestment(securities and investments)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "assetsatifo(asset in international financial institutions)",
          "othersavings(other deposits)"
        ],
        "column_names_original_en": [
          "corporatesavings",
          "id",
          "savingsdeposits",
          "equityandotherinvestment",
          "trustedandcreditdeposits",
          "assetsatifo",
          "othersavings"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the monthly industrial production value data of medium and small-sized enterprises within the scope of \"National\" \"all industrial enterprises\" annually, don't forget to differentiate by time? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) , ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits)",
    "output_sequence": "select _ from _ where _ | select enddate , mediumcomap , minitypecomap from ed_industryproduction where reportarea = 'National' and statstandard = 'all industrial enterprises' and reportperiod = 'monthly'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.minitypecomap",
      "ed_industryproduction.hivalueap",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_chinafibalancesheetrmb.othersavings"
    ]
  },
  {
    "question": "Wow, what are the detailed information of foreign currency deposits and capital received in our country in the past two years?",
    "sql": "select fcdeposits, capitalreceived from ed_chinamoneyandbanking where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select fcdeposits , capitalreceived from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "fcdeposits(foreign currency deposit.)",
          "capitalreceived(paid-up capital)",
          "quasimoney(quasi-currency)",
          "claimstogov(claims on the government (net))",
          "domesticloans(domestic credit)",
          "netabroadassets(foreign net assets)"
        ],
        "column_names_original_en": [
          "enddate",
          "fcdeposits",
          "capitalreceived",
          "quasimoney",
          "claimstogov",
          "domesticloans",
          "netabroadassets"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indexvalue(index value)",
          "id(record identifier)",
          "indextitle(index name)",
          "reportperiod(data statistical period)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "id",
          "indextitle",
          "reportperiod",
          "enddate"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "reportarea(statistical region category)",
          "indextitle(index name)",
          "comparetolastmonth(index month-on-month change (points))",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "id(record identifier)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "reportarea",
          "indextitle",
          "comparetolastmonth",
          "reportperiod",
          "enddate",
          "id",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Wow, what are the detailed information of foreign currency deposits and capital received in our country in the past two years? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).indexvalue(index value)",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select fcdeposits , capitalreceived from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.netabroadassets",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.enddate",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.indexvalue"
    ]
  },
  {
    "question": "Hi, do you know what are the threshold and maximum values for \"Trading Commission Rate\" when paying the commission rate for B-shares?",
    "sql": "select valuefloor, valueceiling from ed_taxrate where typename ='B-shares' and itemname = 'Trading Commission Rate';",
    "norm_sql": "select valuefloor , valueceiling from ed_taxrate where typename = 'B-shares' and itemname = 'Trading Commission Rate'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "basiscode(billing baseline)",
          "ratiofloor(minimum ratio (%))",
          "itemname(tax rate items)",
          "valuefloor(minimum value/starting point (rmb))",
          "secumarket(securities market)",
          "valueceiling(maximum value (rmb))",
          "typename(tax rate type)"
        ],
        "column_names_original_en": [
          "basiscode",
          "ratiofloor",
          "itemname",
          "valuefloor",
          "secumarket",
          "valueceiling",
          "typename"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "id(record identifier)",
          "enddate(deadline)",
          "accuavgprice(cumulative average price)",
          "statecode(primary country)",
          "quantity(quantity)",
          "avgprice(average price)",
          "accuquantity(accumulated quantity)"
        ],
        "column_names_original_en": [
          "id",
          "enddate",
          "accuavgprice",
          "statecode",
          "quantity",
          "avgprice",
          "accuquantity"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "id(record identifier)",
          "savingsdeposits(savings deposits)",
          "equityandotherinvestment(securities and investments)",
          "financedeposits(financial deposit)",
          "totalsavings(all deposit accounts)",
          "assetsatifo(asset in international financial institutions)",
          "corporatesavings(unit deposit/corporate deposit)"
        ],
        "column_names_original_en": [
          "id",
          "savingsdeposits",
          "equityandotherinvestment",
          "financedeposits",
          "totalsavings",
          "assetsatifo",
          "corporatesavings"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hi, do you know what are the threshold and maximum values for \"Trading Commission Rate\" when paying the commission rate for B-shares? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).typename(tax rate type) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).id(record identifier) , ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).accuavgprice(cumulative average price) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).quantity(quantity) , ed_productexportimport(product import and export volume).avgprice(average price) , ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit)",
    "output_sequence": "select _ from _ where _ | select valuefloor , valueceiling from ed_taxrate where typename = 'B-shares' and itemname = 'Trading Commission Rate'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.basiscode",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.itemname",
      "ed_taxrate.valuefloor",
      "ed_taxrate.secumarket",
      "ed_taxrate.valueceiling",
      "ed_taxrate.typename",
      "ed_productexportimport.*",
      "ed_productexportimport.id",
      "ed_productexportimport.enddate",
      "ed_productexportimport.accuavgprice",
      "ed_productexportimport.statecode",
      "ed_productexportimport.quantity",
      "ed_productexportimport.avgprice",
      "ed_productexportimport.accuquantity",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_chinafibalancesheetrmb.corporatesavings"
    ]
  },
  {
    "question": "Please display the amount of new Renminbi loans added each \"month\" of the year.",
    "sql": "select enddate, subjectsum from ed_newincreasingloan where reportperiod ='month';",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'month'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "accuquantity(accumulated quantity)",
          "enddate(deadline)",
          "currencycode(currency unit)",
          "category(product category)",
          "accueximvalue(accumulated amount)",
          "avgprice(average price)",
          "productname(product name)"
        ],
        "column_names_original_en": [
          "accuquantity",
          "enddate",
          "currencycode",
          "category",
          "accueximvalue",
          "avgprice",
          "productname"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "subjectsum",
          "id",
          "yoy",
          "subjectname"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "netabroadassets(foreign net assets)",
          "fcdeposits(foreign currency deposit.)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "quasimoney(quasi-currency)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "capitalreceived(paid-up capital)"
        ],
        "column_names_original_en": [
          "netabroadassets",
          "fcdeposits",
          "claimstospecificsavingorg",
          "quasimoney",
          "claimstootherinst",
          "claimstononfinancialinst",
          "capitalreceived"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please display the amount of new Renminbi loans added each \"month\" of the year. | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).currencycode(currency unit) , ed_productexportimport(product import and export volume).category(product category) , ed_productexportimport(product import and export volume).accueximvalue(accumulated amount) , ed_productexportimport(product import and export volume).avgprice(average price) , ed_productexportimport(product import and export volume).productname(product name) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital)",
    "output_sequence": "select _ from _ where _ | select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'month'",
    "tc_original": [
      "ed_productexportimport.*",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.enddate",
      "ed_productexportimport.currencycode",
      "ed_productexportimport.category",
      "ed_productexportimport.accueximvalue",
      "ed_productexportimport.avgprice",
      "ed_productexportimport.productname",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectname",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.capitalreceived"
    ]
  },
  {
    "question": "Please provide a detailed display of the year and the specific amount of agricultural tax revenue in Zhejiang Province that exceeded 10 million in 2005.",
    "sql": "select enddate, agriculturetax from ed_financialbalance where province = 'Zhejiang' and strftime('%Y', enddate) = '2005' and agriculturetax > 10;",
    "norm_sql": "select enddate , agriculturetax from ed_financialbalance where province = 'Zhejiang' and strftime ( '%Y' , enddate ) = '2005' and agriculturetax > 10",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = _ and _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "province(province and city)",
          "agriculturetax(agricultural tax (in million of rmb))",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "salestax(business tax (in million of rmb))",
          "nationaldefense(defense expenditure (in million of rmb))",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "agriculturetax",
          "gfinancialrevenue",
          "salestax",
          "nationaldefense",
          "expenditurecitymc"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexname(index name)",
          "indexvalue(index value (points))",
          "id(record identifier)",
          "enddate(deadline)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indexname",
          "indexvalue",
          "id",
          "enddate",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "stateownedunits(state-owned unit)",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "collectiveunits(collective unit)",
          "reportarea(statistical category of region)"
        ],
        "column_names_original_en": [
          "stateownedunits",
          "enddate",
          "reportperiod",
          "wholesaleretailtrade",
          "retailvalueofscgoods",
          "collectiveunits",
          "reportarea"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please provide a detailed display of the year and the specific amount of agricultural tax revenue in Zhejiang Province that exceeded 10 million in 2005. | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = _ and _ | select enddate , agriculturetax from ed_financialbalance where province = 'Zhejiang' and strftime ( '%Y' , enddate ) = '2005' and agriculturetax > 10",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.province",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.salestax",
      "ed_financialbalance.nationaldefense",
      "ed_financialbalance.expenditurecitymc",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.reportperiod",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.reportarea"
    ]
  },
  {
    "question": "Calculate the detailed record of total import and export value of goods in our country.",
    "sql": "select eximvalueofgoods from ed_exportimport;",
    "norm_sql": "select eximvalueofgoods from ed_exportimport",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "salestax(business tax (in million of rmb))",
          "enterpriseincome(enterprise income (in million of rmb))",
          "agriculturetax(agricultural tax (in million of rmb))",
          "commercialtax(business tax revenue (in million of rmb))",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "reportperiod(data statistical period)",
          "gfinancialrevenue(fiscal revenue growth rate)"
        ],
        "column_names_original_en": [
          "salestax",
          "enterpriseincome",
          "agriculturetax",
          "commercialtax",
          "localgovexpenditure",
          "reportperiod",
          "gfinancialrevenue"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "province(province and city)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "id(record identifier)",
          "reportarea(statistical category of the region)",
          "sovereigntycountry(the subject country)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "eximvalueofgoods",
          "province",
          "imvalueofgoods",
          "id",
          "reportarea",
          "sovereigntycountry",
          "enddate"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "indextitle(index name)",
          "id(record identifier)",
          "indexvalue(index value)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "indextitle",
          "id",
          "indexvalue",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Calculate the detailed record of total import and export value of goods in our country. | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb)) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).enddate(deadline) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period)",
    "output_sequence": "select _ from _ | select eximvalueofgoods from ed_exportimport",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.salestax",
      "ed_financialbalance.enterpriseincome",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.gfinancialrevenue",
      "ed_exportimport.*",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.province",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.id",
      "ed_exportimport.reportarea",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.enddate",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.reportperiod"
    ]
  },
  {
    "question": "In 2000, what are the sub-indices of our \"National Economic Industry Index\" and what are their corresponding index values, showing only the \"previous year same period\"?",
    "sql": "select indexname, indexvalue from ed_producerpiformp where indextype ='National Economic Industry Index' and reportperiod ='Previous Year Same Period' and strftime('%Y', enddate)='2000';",
    "norm_sql": "select indexname , indexvalue from ed_producerpiformp where indextype = 'National Economic Industry Index' and reportperiod = 'Previous Year Same Period' and strftime ( '%Y' , enddate ) = '2000'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "id"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "drrtype(reserve requirement ratio category)",
          "effectivedate(effective date)",
          "ratioceiling(maximum ratio (%))",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "id",
          "drrtype",
          "effectivedate",
          "ratioceiling",
          "ratiofloor"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "ratiofloor(minimum ratio (%))",
          "valuefloor(minimum value/starting point (rmb))",
          "typename(tax rate type)",
          "itemname(tax rate items)",
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)",
          "maturity(repurchase period)"
        ],
        "column_names_original_en": [
          "ratiofloor",
          "valuefloor",
          "typename",
          "itemname",
          "ratioceiling",
          "id",
          "maturity"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In 2000, what are the sub-indices of our \"National Economic Industry Index\" and what are their corresponding index values, showing only the \"previous year same period\"? | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).maturity(repurchase period)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = _ | select indexname , indexvalue from ed_producerpiformp where indextype = 'National Economic Industry Index' and reportperiod = 'Previous Year Same Period' and strftime ( '%Y' , enddate ) = '2000'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.ratiofloor",
      "ed_taxrate.*",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.valuefloor",
      "ed_taxrate.typename",
      "ed_taxrate.itemname",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.id",
      "ed_taxrate.maturity"
    ]
  },
  {
    "question": "What is the index value of \"Electric Power Industry\" for \"Previous Year Same Month\" from 2008 until now? What is the index type and has it ever changed?",
    "sql": "select indextype, indexvalue from ed_producerpiformp where indexname='Electric Power Industry' and reportperiod='Previous Year Same Month' and strftime('%Y', enddate)>='2008';",
    "norm_sql": "select indextype , indexvalue from ed_producerpiformp where indexname = 'Electric Power Industry' and reportperiod = 'Previous Year Same Month' and strftime ( '%Y' , enddate ) >= '2008'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) >= _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexvalue(index)",
          "enddate(deadline)",
          "indextype(index category)",
          "id(record identifier)",
          "indexname(index name)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "enddate",
          "indextype",
          "id",
          "indexname",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "currencycode(currency unit)",
          "enddate(deadline)",
          "category(product category)",
          "quantity(quantity)",
          "avgprice(average price)",
          "unitname(company name)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "currencycode",
          "enddate",
          "category",
          "quantity",
          "avgprice",
          "unitname",
          "id"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "subjectsum(amount (in million of rmb))",
          "reportperiod(statistical period)",
          "id(record identifier)",
          "subjectname(indicator name)",
          "enddate(deadline)",
          "yoy(year-on-year increase or decrease (%))"
        ],
        "column_names_original_en": [
          "subjectsum",
          "reportperiod",
          "id",
          "subjectname",
          "enddate",
          "yoy"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the index value of \"Electric Power Industry\" for \"Previous Year Same Month\" from 2008 until now? What is the index type and has it ever changed? | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).currencycode(currency unit) , ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).category(product category) , ed_productexportimport(product import and export volume).quantity(quantity) , ed_productexportimport(product import and export volume).avgprice(average price) , ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).id(record identifier) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) >= _ | select indextype , indexvalue from ed_producerpiformp where indexname = 'Electric Power Industry' and reportperiod = 'Previous Year Same Month' and strftime ( '%Y' , enddate ) >= '2008'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.reportperiod",
      "ed_productexportimport.*",
      "ed_productexportimport.currencycode",
      "ed_productexportimport.enddate",
      "ed_productexportimport.category",
      "ed_productexportimport.quantity",
      "ed_productexportimport.avgprice",
      "ed_productexportimport.unitname",
      "ed_productexportimport.id",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.yoy"
    ]
  },
  {
    "question": "Can you please give me the names of the provinces and cities where the fiscal revenue growth rate has exceeded 5% in the past ten years, along with the fiscal revenue growth rate field?",
    "sql": "select province, gfinancialrevenue from ed_financialbalance where gfinancialrevenue > 5 and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-10 year'));",
    "norm_sql": "select province , gfinancialrevenue from ed_financialbalance where gfinancialrevenue > 5 and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "province(province and city)",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))",
          "gnationaldefense(defense expenditure growth rate)",
          "agriculturetax(agricultural tax (in million of rmb))",
          "gfinancialexpenditure(fiscal expenditure growth rate)"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "gfinancialrevenue",
          "centralgovexpenditure",
          "gnationaldefense",
          "agriculturetax",
          "gfinancialexpenditure"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "enddate(deadline)",
          "moneyissuance(currency issuance (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "claimtosavingsinst",
          "moneyandgold",
          "enddate",
          "moneyissuance",
          "bondissuance",
          "otherforeignassets",
          "id"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "id(record identifier)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "reportperiod",
          "enddate",
          "id",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you please give me the names of the provinces and cities where the fiscal revenue growth rate has exceeded 5% in the past ten years, along with the fiscal revenue growth rate field? | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select province , gfinancialrevenue from ed_financialbalance where gfinancialrevenue > 5 and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.province",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.centralgovexpenditure",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.id",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexname"
    ]
  },
  {
    "question": "Display the total records of currency and quasi-money in China, as well as the amount of currency and quasi-money.",
    "sql": "select moneyandquasimoney, money1, quasimoney from ed_chinamoneyandbanking;",
    "norm_sql": "select moneyandquasimoney , money1 , quasimoney from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "bondissuance(bond issuance (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "totalliability(total liabilities (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))"
        ],
        "column_names_original_en": [
          "bondissuance",
          "moneyandgold",
          "claimtononfinancialinst",
          "moneyissuance",
          "totalliability",
          "abroadliability",
          "nonfinancialorgdeposits"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "fcdeposits(foreign currency deposit.)",
          "centralbankbonds(central bank bonds)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "money1(currency (narrow money m1))",
          "quasimoney(quasi-currency)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "fcdeposits",
          "centralbankbonds",
          "moneyandquasimoney",
          "claimstospecificsavingorg",
          "money1",
          "quasimoney",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "totalloans(various loans)",
          "loantogov(financial borrowing)",
          "othersavings(other deposits)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "reservedeposits(deposit of reserve funds)",
          "overseasloans((two) overseas loans)",
          "datatype(data type code)"
        ],
        "column_names_original_en": [
          "totalloans",
          "loantogov",
          "othersavings",
          "trustedandcreditdeposits",
          "reservedeposits",
          "overseasloans",
          "datatype"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Display the total records of currency and quasi-money in China, as well as the amount of currency and quasi-money. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code)",
    "output_sequence": "select _ from _ | select moneyandquasimoney , money1 , quasimoney from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_chinafibalancesheetrmb.datatype"
    ]
  },
  {
    "question": "Help me pull up the data records of China's currency and banking, and list the net assets abroad and domestic credit data.",
    "sql": "select netabroadassets, domesticloans from ed_chinamoneyandbanking;",
    "norm_sql": "select netabroadassets , domesticloans from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "capitalreceived(paid-up capital)",
          "quasimoney(quasi-currency)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "fcdeposits(foreign currency deposit.)",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "netabroadassets",
          "domesticloans",
          "capitalreceived",
          "quasimoney",
          "moneyandquasimoney",
          "fcdeposits",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "gnationaldefense(defense expenditure growth rate)",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "supportunderdevelopedarea(policy subsidy expenditure (in million of rmb))",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "centralgovrevenue(central fiscal revenue (in million of yuan))",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "nationaldefense(defense expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "gnationaldefense",
          "expenditurecitymc",
          "supportunderdevelopedarea",
          "operatingexpensescesh",
          "centralgovrevenue",
          "gfinancialrevenue",
          "nationaldefense"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "sovereigntycountry(the subject country)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "reportarea(statistical category of the region)",
          "enddate(deadline)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "id(record identifier)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "sovereigntycountry",
          "exvalueofgoods",
          "reportarea",
          "enddate",
          "eximvalueofgoods",
          "id",
          "gyoyofexvaluegoods"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help me pull up the data records of China's currency and banking, and list the net assets abroad and domestic credit data. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).supportunderdevelopedarea(policy subsidy expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).centralgovrevenue(central fiscal revenue (in million of yuan)) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease)",
    "output_sequence": "select _ from _ | select netabroadassets , domesticloans from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_financialbalance.*",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.supportunderdevelopedarea",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.centralgovrevenue",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.nationaldefense",
      "ed_exportimport.*",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.reportarea",
      "ed_exportimport.enddate",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.id",
      "ed_exportimport.gyoyofexvaluegoods"
    ]
  },
  {
    "question": "Please help me find the data records for the total retail sales of consumer goods.",
    "sql": "select retailvalueofscgoods from ed_retailvalueofscgoods;",
    "norm_sql": "select retailvalueofscgoods from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "commercialtax(business tax revenue (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))",
          "gsocialsecurity(social security expenditure growth rate)",
          "gnationaldefense(defense expenditure growth rate)",
          "province(province and city)",
          "enddate(deadline)",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))"
        ],
        "column_names_original_en": [
          "commercialtax",
          "valueaddedtax",
          "gsocialsecurity",
          "gnationaldefense",
          "province",
          "enddate",
          "operatingexpensescesh"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "jointventures(joint operating unit)",
          "reportarea(statistical category of region)",
          "othersunits(other units)",
          "othersindustry(other industries)",
          "reportperiod(data statistical period)",
          "foodbeverage(catering industry)"
        ],
        "column_names_original_en": [
          "retailvalueofscgoods",
          "jointventures",
          "reportarea",
          "othersunits",
          "othersindustry",
          "reportperiod",
          "foodbeverage"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "reportarea(statistical region category)",
          "indextitle(index name)",
          "indexcode(index code)",
          "reportperiod(data statistical period)",
          "comparetolastmonth(index month-on-month change (points))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "reportarea",
          "indextitle",
          "indexcode",
          "reportperiod",
          "comparetolastmonth"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me find the data records for the total retail sales of consumer goods. | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gsocialsecurity(social security expenditure growth rate) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points))",
    "output_sequence": "select _ from _ | select retailvalueofscgoods from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.valueaddedtax",
      "ed_financialbalance.gsocialsecurity",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.province",
      "ed_financialbalance.enddate",
      "ed_financialbalance.operatingexpensescesh",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.foodbeverage",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.comparetolastmonth"
    ]
  },
  {
    "question": "What is the average value of the foreign net assets in China in recent years?",
    "sql": "select avg(netabroadassets) from ed_chinamoneyandbanking;",
    "norm_sql": "select avg ( netabroadassets ) from ed_chinamoneyandbanking",
    "sql_skeleton": "select avg ( _ ) from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "netabroadassets(foreign net assets)",
          "id(record identifier)",
          "centralbankbonds(central bank bonds)",
          "bonds(bonds)",
          "quasimoney(quasi-currency)",
          "fcdeposits(foreign currency deposit.)",
          "money1(currency (narrow money m1))"
        ],
        "column_names_original_en": [
          "netabroadassets",
          "id",
          "centralbankbonds",
          "bonds",
          "quasimoney",
          "fcdeposits",
          "money1"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "enddate(deadline)",
          "reportarea(statistical region category)",
          "comparetolastmonth(index month-on-month change (points))",
          "indexcode(index code)",
          "id(record identifier)",
          "indexvalue(index value)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportarea",
          "comparetolastmonth",
          "indexcode",
          "id",
          "indexvalue",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)",
          "drrtype(reserve requirement ratio category)",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "id",
          "ratiofloor",
          "effectivedate",
          "drrtype",
          "ratioceiling"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the average value of the foreign net assets in China in recent years? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%))",
    "output_sequence": "select avg ( _ ) from _ | select avg ( netabroadassets ) from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.money1",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.reportperiod",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratioceiling"
    ]
  },
  {
    "question": "Please help me query the \"cumulative year-end\" total retail sales of consumer goods in each province and city, including the province and city fields.",
    "sql": "select province, retailvalueofscgoods from ed_retailvalueofscgoods where reportperiod ='cumulative year-end';",
    "norm_sql": "select province , retailvalueofscgoods from ed_retailvalueofscgoods where reportperiod = 'cumulative year-end'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "province(province and city)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "reportarea(statistical category of region)",
          "stateownedunits(state-owned unit)",
          "selfemployed(individual unit)",
          "collectiveunits(collective unit)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "province",
          "retailvalueofscgoods",
          "reportarea",
          "stateownedunits",
          "selfemployed",
          "collectiveunits"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indexvalue(index value (points))",
          "enddate(deadline)",
          "indexname(index name)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indexvalue",
          "enddate",
          "indexname",
          "id"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indexvalue(index value)",
          "id(record identifier)",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indextitle(index name)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "id",
          "enddate",
          "reportperiod",
          "indextitle"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me query the \"cumulative year-end\" total retail sales of consumer goods in each province and city, including the province and city fields. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name)",
    "output_sequence": "select _ from _ where _ | select province , retailvalueofscgoods from ed_retailvalueofscgoods where reportperiod = 'cumulative year-end'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.collectiveunits",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.id",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle"
    ]
  },
  {
    "question": "What is the total retail value of social consumer goods in various industries, such as the food and beverage industry, wholesale and retail trade industry, and other industries?",
    "sql": "select foodbeverage, wholesaleretailtrade, othersindustry from ed_retailvalueofscgoods;",
    "norm_sql": "select foodbeverage , wholesaleretailtrade , othersindustry from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "foodbeverage(catering industry)",
          "othersindustry(other industries)",
          "county(county)",
          "jointventures(joint operating unit)",
          "collectiveunits(collective unit)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "wholesaleretailtrade",
          "foodbeverage",
          "othersindustry",
          "county",
          "jointventures",
          "collectiveunits",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsoncentralbank(claims on central bank)",
          "depositswithcentralbank(reserve deposit)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "claimsonotherdepositcorp(claims on other deposit-based company)"
        ],
        "column_names_original_en": [
          "claimsoncentralbank",
          "depositswithcentralbank",
          "claimsonotherfinstitute",
          "liabtootherfinancialcorp",
          "liabilitiestonfinst",
          "claimsonothernfinstitute",
          "claimsonotherdepositcorp"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexname(index name)",
          "id(record identifier)",
          "indexvalue(index value (points))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "enddate",
          "indexname",
          "id",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the total retail value of social consumer goods in various industries, such as the food and beverage industry, wholesale and retail trade industry, and other industries? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points))",
    "output_sequence": "select _ from _ | select foodbeverage , wholesaleretailtrade , othersindustry from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.enddate",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexvalue"
    ]
  },
  {
    "question": "Please check the data records of claims on other depository corporations in the table of assets and liabilities of other depository corporations.",
    "sql": "select claimsonotherdepositcorp from ed_otherdepositorycorpbs;",
    "norm_sql": "select claimsonotherdepositcorp from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "totalliabilities(total liabilities)",
          "otherassets(other assets)",
          "enddate(deadline)",
          "timedeposits(fixed deposit for enterprises)",
          "cashinvault(cash on hand)",
          "foreignassets(foreign net assets)"
        ],
        "column_names_original_en": [
          "claimsonotherdepositcorp",
          "totalliabilities",
          "otherassets",
          "enddate",
          "timedeposits",
          "cashinvault",
          "foreignassets"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "basiscode(billing baseline)",
          "itemname(tax rate items)",
          "id(record identifier)",
          "effectivedate(effective date)",
          "valuefloor(minimum value/starting point (rmb))",
          "maturity(repurchase period)"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "basiscode",
          "itemname",
          "id",
          "effectivedate",
          "valuefloor",
          "maturity"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "indexvalue(index value)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextitle",
          "indexvalue",
          "id",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please check the data records of claims on other depository corporations in the table of assets and liabilities of other depository corporations. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).maturity(repurchase period) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline)",
    "output_sequence": "select _ from _ | select claimsonotherdepositcorp from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.otherassets",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_taxrate.*",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.basiscode",
      "ed_taxrate.itemname",
      "ed_taxrate.id",
      "ed_taxrate.effectivedate",
      "ed_taxrate.valuefloor",
      "ed_taxrate.maturity",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.enddate"
    ]
  },
  {
    "question": "What is the amount of cumulative industrial value added at the end of the year in \"national\" \"state-owned and large-scale industrial enterprises\" in the past three years?",
    "sql": "select enddate, industrialvalueadded from ed_industryproduction where reportarea='national' and statstandard='state-owned and large-scale industrial enterprises' and reportperiod='end of year cumulative' and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select enddate , industrialvalueadded from ed_industryproduction where reportarea = 'national' and statstandard = 'state-owned and large-scale industrial enterprises' and reportperiod = 'end of year cumulative' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "largecomap(large-scale enterprise (light industry))",
          "mediumcomap(medium-sized enterprise (light industry))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded",
          "largecomap",
          "mediumcomap"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "moneyandgold(currency gold (in million of rmb))",
          "id(record identifier)",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "forex(foreign exchange (in million of rmb))"
        ],
        "column_names_original_en": [
          "moneyandgold",
          "id",
          "claimtosavingsinst",
          "moneyreserves",
          "bondissuance",
          "nonfinancialorgdeposits",
          "forex"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "savingdeposits(resident savings deposits)",
          "timedeposits(fixed deposit for enterprises)",
          "claimsonotherresidentsec(claims on other resident sectors)",
          "bondissue(bond issuance)",
          "cashinvault(cash on hand)",
          "claimsonotherdepositcorp(claims on other deposit-based company)"
        ],
        "column_names_original_en": [
          "depositsincludedinm2",
          "savingdeposits",
          "timedeposits",
          "claimsonotherresidentsec",
          "bondissue",
          "cashinvault",
          "claimsonotherdepositcorp"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the amount of cumulative industrial value added at the end of the year in \"national\" \"state-owned and large-scale industrial enterprises\" in the past three years? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , industrialvalueadded from ed_industryproduction where reportarea = 'national' and statstandard = 'state-owned and large-scale industrial enterprises' and reportperiod = 'end of year cumulative' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.mediumcomap",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.forex",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp"
    ]
  },
  {
    "question": "Please look at the amount of total liabilities and total assets in the balance sheet of other deposit-taking financial corporations in October last year.",
    "sql": "select totalassets, totalliabilities from ed_otherdepositorycorpbs where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year')) and strftime('%m', enddate)='10';",
    "norm_sql": "select totalassets , totalliabilities from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) and strftime ( '%m' , enddate ) = '10'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpihousing(residential year-on-year)",
          "yoycpimedicare(medical care and personal care products year-on-year)",
          "yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year)",
          "yoycpifood(food year-on-year)",
          "cumcpifood(accumulated average of food)",
          "qoqcpitrafficcommunication(transportation and communication month-on-month)",
          "qoqcpihousing(residential month-to-month)"
        ],
        "column_names_original_en": [
          "yoycpihousing",
          "yoycpimedicare",
          "yoycpientertainmentservice",
          "yoycpifood",
          "cumcpifood",
          "qoqcpitrafficcommunication",
          "qoqcpihousing"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)",
          "indextype(index category)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexname",
          "indexvalue",
          "id",
          "indextype",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "totalassets(total assets)",
          "totalliabilities(total liabilities)",
          "cashinvault(cash on hand)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "claimsongovernment(claims on government (net))",
          "liabilitiestocentralbank(liabilities to the central bank.)"
        ],
        "column_names_original_en": [
          "enddate",
          "totalassets",
          "totalliabilities",
          "cashinvault",
          "liabtootherdepositcorp",
          "claimsongovernment",
          "liabilitiestocentralbank"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please look at the amount of total liabilities and total assets in the balance sheet of other deposit-taking financial corporations in October last year. | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpihousing(residential year-on-year) , ed_consumerpriceindex(consumer price index).yoycpimedicare(medical care and personal care products year-on-year) , ed_consumerpriceindex(consumer price index).yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year) , ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) , ed_consumerpriceindex(consumer price index).cumcpifood(accumulated average of food) , ed_consumerpriceindex(consumer price index).qoqcpitrafficcommunication(transportation and communication month-on-month) , ed_consumerpriceindex(consumer price index).qoqcpihousing(residential month-to-month) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.)",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) and strftime ( _ ) = _ | select totalassets , totalliabilities from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) and strftime ( '%m' , enddate ) = '10'",
    "tc_original": [
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpihousing",
      "ed_consumerpriceindex.yoycpimedicare",
      "ed_consumerpriceindex.yoycpientertainmentservice",
      "ed_consumerpriceindex.yoycpifood",
      "ed_consumerpriceindex.cumcpifood",
      "ed_consumerpriceindex.qoqcpitrafficcommunication",
      "ed_consumerpriceindex.qoqcpihousing",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.reportperiod",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank"
    ]
  },
  {
    "question": "Wang Gong said, show him the records of household savings deposits and transferable deposits in the asset-liability table of other deposit-taking companies.",
    "sql": "select savingdeposits, transferabledeposits from ed_otherdepositorycorpbs;",
    "norm_sql": "select savingdeposits , transferabledeposits from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "savingdeposits(resident savings deposits)",
          "transferabledeposits(transferable deposits)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "foreignliabilities(foreign liabilities)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "totalassets(total assets)"
        ],
        "column_names_original_en": [
          "savingdeposits",
          "transferabledeposits",
          "claimsonotherfinstitute",
          "foreignliabilities",
          "liabtootherdepositcorp",
          "claimsonotherdepositcorp",
          "totalassets"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "moneyreserves(reserve currency (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "totalassets(total assets (in million of rmb).)"
        ],
        "column_names_original_en": [
          "moneyreserves",
          "nonfinancialorgdeposits",
          "claimtootherfinnonfininst",
          "claimtosavingsbanks",
          "otherliability",
          "claimtononfinancialinst",
          "totalassets"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "reportperiod(statistical period)",
          "enddate(deadline)",
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)",
          "subjectname(indicator name)",
          "subjectsum(amount (in million of rmb))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "enddate",
          "yoy",
          "id",
          "subjectname",
          "subjectsum"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Wang Gong said, show him the records of household savings deposits and transferable deposits in the asset-liability table of other deposit-taking companies. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb))",
    "output_sequence": "select _ from _ | select savingdeposits , transferabledeposits from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.foreignliabilities",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.totalassets",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.subjectsum"
    ]
  },
  {
    "question": "Please find the records of claims to non-monetary financial institution debt and claims to non-financial sector debt in the balance sheet of the monetary authority.",
    "sql": "select claimtootherfinnonfininst, claimtononfinancialinst from ed_moneyauthoritybs;",
    "norm_sql": "select claimtootherfinnonfininst , claimtononfinancialinst from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "selfownedmoney(own funds (in million of rmb))"
        ],
        "column_names_original_en": [
          "claimtootherfinnonfininst",
          "claimtononfinancialinst",
          "governmentsavings",
          "forex",
          "moneyissuance",
          "totalassets",
          "selfownedmoney"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indextype(index category)",
          "id(record identifier)",
          "indexname(index name)",
          "indexvalue(index)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "indextype",
          "id",
          "indexname",
          "indexvalue",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexname(index name)",
          "indexvalue(index value (points))",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexname",
          "indexvalue",
          "reportperiod",
          "id",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please find the records of claims to non-monetary financial institution debt and claims to non-financial sector debt in the balance sheet of the monetary authority. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline)",
    "output_sequence": "select _ from _ | select claimtootherfinnonfininst , claimtononfinancialinst from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.reportperiod",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.enddate"
    ]
  },
  {
    "question": "Since 2015, what is the annual amount of claims on other deposit-taking corporations and claims on other financial institutions in China? Please check from the balance sheets of other deposit-taking corporations.",
    "sql": "select enddate, claimsonotherdepositcorp, claimsonotherfinstitute from ed_otherdepositorycorpbs where strftime('%Y', enddate)>='2015';",
    "norm_sql": "select enddate , claimsonotherdepositcorp , claimsonotherfinstitute from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) >= '2015'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) >= _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "otherassets(other assets)",
          "claimsonotherresidentsec(claims on other resident sectors)",
          "demanddeposits(current deposits for enterprises)",
          "depositsincludedinm2(inclusion of broad money deposits.)"
        ],
        "column_names_original_en": [
          "enddate",
          "claimsonotherdepositcorp",
          "claimsonotherfinstitute",
          "otherassets",
          "claimsonotherresidentsec",
          "demanddeposits",
          "depositsincludedinm2"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "gtaxs(various tax revenues growth rate)",
          "gnationaldefense(defense expenditure growth rate)",
          "valueaddedtax(value added tax (in million of rmb))",
          "agriculturetax(agricultural tax (in million of rmb))",
          "salestax(business tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "localgovrevenue",
          "gtaxs",
          "gnationaldefense",
          "valueaddedtax",
          "agriculturetax",
          "salestax"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "sharesandotherinvestments(equity and other investments)",
          "domesticloans((one) domestic loan)",
          "reservedeposits(deposit of reserve funds)",
          "agriculturaldeposits(agricultural deposit)",
          "shorttermloans(short-term loan)",
          "orgdeposits(government and institutional deposits)",
          "corporatesavings(unit deposit/corporate deposit)"
        ],
        "column_names_original_en": [
          "sharesandotherinvestments",
          "domesticloans",
          "reservedeposits",
          "agriculturaldeposits",
          "shorttermloans",
          "orgdeposits",
          "corporatesavings"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Since 2015, what is the annual amount of claims on other deposit-taking corporations and claims on other financial institutions in China? Please check from the balance sheets of other deposit-taking corporations. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) , ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gtaxs(various tax revenues growth rate) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).orgdeposits(government and institutional deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit)",
    "output_sequence": "select _ from _ where strftime ( _ ) >= _ | select enddate , claimsonotherdepositcorp , claimsonotherfinstitute from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) >= '2015'",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.otherassets",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.gtaxs",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.valueaddedtax",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.salestax",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.orgdeposits",
      "ed_chinafibalancesheetrmb.corporatesavings"
    ]
  },
  {
    "question": "Can you help me check if there have been any loan amounts recorded as \"end-of-period cumulative\" exceeding 500,000 in the past five years? If yes, please display the time and the newly added loan amount.",
    "sql": "select enddate, subjectsum from ed_newincreasingloan where reportperiod = 'end-of-period cumulative' and subjectsum > 500,000 and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-5 year'));",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'end-of-period cumulative' and subjectsum > 500 , 000 and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-5 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "subjectsum",
          "yoy",
          "id",
          "subjectname"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexvalue(index value (points))"
        ],
        "column_names_original_en": [
          "id",
          "indexname",
          "reportperiod",
          "enddate",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdp(gross domestic product (in million of rmb).)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "province(province and city)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "enddate(deadline)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "gdp",
          "secondindustrygdp",
          "province",
          "gdppercapita",
          "enddate",
          "gdpgrowthyoy",
          "thirdindustrygdp"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you help me check if there have been any loan amounts recorded as \"end-of-period cumulative\" exceeding 500,000 in the past five years? If yes, please display the time and the newly added loan amount. | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'end-of-period cumulative' and subjectsum > 500 , 000 and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-5 year' ) )",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectname",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexvalue",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.thirdindustrygdp"
    ]
  },
  {
    "question": "What is the amount of bond issuance and paid-in capital in our balance sheet of other deposit-taking financial institutions in the first quarter of this year?",
    "sql": "select enddate, bondissue, paidincapital from ed_otherdepositorycorpbs where strftime('%Y', enddate) = strftime('%Y', date()) and round(strftime('%m',enddate)/3.0 + 0.495) = 1;",
    "norm_sql": "select enddate , bondissue , paidincapital from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( ) ) and round ( strftime ( '%m' , enddate ) / 3.0 + 0.495 ) = 1",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( ) ) and round ( strftime ( _ ) / _ + _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "bondissue(bond issuance)",
          "paidincapital(paid-up capital)",
          "demanddeposits(current deposits for enterprises)",
          "foreignassets(foreign net assets)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "depositsexcludedfromm2(deposits not included in broad money)"
        ],
        "column_names_original_en": [
          "enddate",
          "bondissue",
          "paidincapital",
          "demanddeposits",
          "foreignassets",
          "liabilitiestocentralbank",
          "depositsexcludedfromm2"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indexvalue(index)",
          "indextype(index category)",
          "id(record identifier)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "indexvalue",
          "indextype",
          "id",
          "indexname"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)",
          "effectivedate(effective date)",
          "drrtype(reserve requirement ratio category)",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "id",
          "effectivedate",
          "drrtype",
          "ratiofloor"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the amount of bond issuance and paid-in capital in our balance sheet of other deposit-taking financial institutions in the first quarter of this year? | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) , ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexname(index name) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%))",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( ) ) and round ( strftime ( _ ) / _ + _ ) = _ | select enddate , bondissue , paidincapital from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( ) ) and round ( strftime ( '%m' , enddate ) / 3.0 + 0.495 ) = 1",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexname",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratiofloor"
    ]
  },
  {
    "question": "Li Gong has been checking the data recently. Please retrieve the records of our claims on other depositary corporations and other financial institutions from the balance sheets of other depositary companies from June last year.",
    "sql": "select claimsonotherdepositcorp, claimsonotherfinstitute from ed_otherdepositorycorpbs where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year')) and strftime('%m', enddate)='6';",
    "norm_sql": "select claimsonotherdepositcorp , claimsonotherfinstitute from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) and strftime ( '%m' , enddate ) = '6'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "totalassets(total assets)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "demanddeposits(current deposits for enterprises)",
          "enddate(deadline)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "timedeposits(fixed deposit for enterprises)"
        ],
        "column_names_original_en": [
          "totalassets",
          "claimsonotherfinstitute",
          "demanddeposits",
          "enddate",
          "claimsonotherdepositcorp",
          "liabilitiestocentralbank",
          "timedeposits"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "commercialtax(business tax revenue (in million of rmb))",
          "agriculturetax(agricultural tax (in million of rmb))",
          "gsupportunderdevelopedarea(policy subsidy expenditure growth rate)",
          "enddate(deadline)",
          "id(record identifier)",
          "socialsecurity(social security expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "localgovexpenditure",
          "commercialtax",
          "agriculturetax",
          "gsupportunderdevelopedarea",
          "enddate",
          "id",
          "socialsecurity"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "indexname(index name)",
          "indexvalue(index value (points))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "id",
          "indexname",
          "indexvalue",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Li Gong has been checking the data recently. Please retrieve the records of our claims on other depositary corporations and other financial institutions from the balance sheets of other depositary companies from June last year. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gsupportunderdevelopedarea(policy subsidy expenditure growth rate) , ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline)",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) and strftime ( _ ) = _ | select claimsonotherdepositcorp , claimsonotherfinstitute from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) and strftime ( '%m' , enddate ) = '6'",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_financialbalance.*",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.gsupportunderdevelopedarea",
      "ed_financialbalance.enddate",
      "ed_financialbalance.id",
      "ed_financialbalance.socialsecurity",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.enddate"
    ]
  },
  {
    "question": "Please help me check the records of customs import-export concept, and provide the import total and import year-on-year growth and decline data for records where the import total is less than 20 million.",
    "sql": "select imvalueofgoods, gyoyofimvaluegoods from ed_exportimport where imvalueofgoods < 20;",
    "norm_sql": "select imvalueofgoods , gyoyofimvaluegoods from ed_exportimport where imvalueofgoods < 20",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "id(record identifier)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "reportarea(statistical category of the region)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "exvalueofgoods(total export amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "eximvalueofgoods",
          "id",
          "gyoyofeximvaluegoods",
          "gyoyofimvaluegoods",
          "reportarea",
          "imvalueofgoods",
          "exvalueofgoods"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "valueceiling(maximum value (rmb))",
          "typename(tax rate type)",
          "valuefloor(minimum value/starting point (rmb))",
          "maturity(repurchase period)",
          "itemname(tax rate items)",
          "effectivedate(effective date)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "valueceiling",
          "typename",
          "valuefloor",
          "maturity",
          "itemname",
          "effectivedate",
          "id"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "indexname(index name)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indexvalue(index value (points))"
        ],
        "column_names_original_en": [
          "enddate",
          "indexname",
          "id",
          "reportperiod",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me check the records of customs import-export concept, and provide the import total and import year-on-year growth and decline data for records where the import total is less than 20 million. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).id(record identifier) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points))",
    "output_sequence": "select _ from _ where _ | select imvalueofgoods , gyoyofimvaluegoods from ed_exportimport where imvalueofgoods < 20",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.id",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.reportarea",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.exvalueofgoods",
      "ed_taxrate.*",
      "ed_taxrate.valueceiling",
      "ed_taxrate.typename",
      "ed_taxrate.valuefloor",
      "ed_taxrate.maturity",
      "ed_taxrate.itemname",
      "ed_taxrate.effectivedate",
      "ed_taxrate.id",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexvalue"
    ]
  },
  {
    "question": "Which provinces experienced negative year-on-year GDP growth two years ago?",
    "sql": "select province from ed_grossdomesticproduct where gdpgrowthyoy<0 and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select province from ed_grossdomesticproduct where gdpgrowthyoy < 0 and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "enddate(deadline)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "gdp(gross domestic product (in million of rmb).)"
        ],
        "column_names_original_en": [
          "province",
          "enddate",
          "gdpgrowthyoy",
          "thirdindustrygdp",
          "gdppercapita",
          "primaryindustrygdp",
          "gdp"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexname(index name)",
          "id(record identifier)",
          "indexvalue(index)",
          "indextype(index category)",
          "reportperiod(data statistical period)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexname",
          "id",
          "indexvalue",
          "indextype",
          "reportperiod",
          "enddate"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indexvalue(index value (points))",
          "id(record identifier)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "indexvalue",
          "id",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Which provinces experienced negative year-on-year GDP growth two years ago? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).enddate(deadline) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select province from ed_grossdomesticproduct where gdpgrowthyoy < 0 and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.gdp",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.enddate",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexname"
    ]
  },
  {
    "question": "Please list the \"year-end cumulative\" retail sales data of social consumer goods for state-owned and collective units in Shanghai last year.",
    "sql": "select stateownedunits, collectiveunits from ed_retailvalueofscgoods where province = 'Shanghai' and reportperiod = 'year-end cumulative' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year'));",
    "norm_sql": "select stateownedunits , collectiveunits from ed_retailvalueofscgoods where province = 'Shanghai' and reportperiod = 'year-end cumulative' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "collectiveunits(collective unit)",
          "reportperiod(data statistical period)",
          "othersindustry(other industries)",
          "stateownedunits(state-owned unit)",
          "enddate(deadline)",
          "jointventures(joint operating unit)",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "collectiveunits",
          "reportperiod",
          "othersindustry",
          "stateownedunits",
          "enddate",
          "jointventures",
          "province"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "centralgovrevenue(central fiscal revenue (in million of yuan))",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))",
          "enddate(deadline)",
          "gsocialsecurity(social security expenditure growth rate)",
          "gsupportunderdevelopedarea(policy subsidy expenditure growth rate)",
          "gfinancialrevenue(fiscal revenue growth rate)"
        ],
        "column_names_original_en": [
          "gfinancialexpenditure",
          "centralgovrevenue",
          "centralgovexpenditure",
          "enddate",
          "gsocialsecurity",
          "gsupportunderdevelopedarea",
          "gfinancialrevenue"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "mediumcomap(medium-sized enterprise (light industry))",
          "id(record identifier)",
          "minitypecomap(small-scale enterprise (light industry))",
          "collectivecomap(collective enterprise (light industry))",
          "enddate(deadline)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))"
        ],
        "column_names_original_en": [
          "mediumcomap",
          "id",
          "minitypecomap",
          "collectivecomap",
          "enddate",
          "industrialvalueadded",
          "industrialoutputvalueap"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the \"year-end cumulative\" retail sales data of social consumer goods for state-owned and collective units in Shanghai last year. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).centralgovrevenue(central fiscal revenue (in million of yuan)) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).gsocialsecurity(social security expenditure growth rate) , ed_financialbalance(government revenue and expenditure).gsupportunderdevelopedarea(policy subsidy expenditure growth rate) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select stateownedunits , collectiveunits from ed_retailvalueofscgoods where province = 'Shanghai' and reportperiod = 'year-end cumulative' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.province",
      "ed_financialbalance.*",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.centralgovrevenue",
      "ed_financialbalance.centralgovexpenditure",
      "ed_financialbalance.enddate",
      "ed_financialbalance.gsocialsecurity",
      "ed_financialbalance.gsupportunderdevelopedarea",
      "ed_financialbalance.gfinancialrevenue",
      "ed_industryproduction.*",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.id",
      "ed_industryproduction.minitypecomap",
      "ed_industryproduction.collectivecomap",
      "ed_industryproduction.enddate",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.industrialoutputvalueap"
    ]
  },
  {
    "question": "Help me find out the GDP and per capita GDP for the past three years.",
    "sql": "select gdp, gdppercapita from ed_grossdomesticproduct where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select gdp , gdppercapita from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "gdp(gross domestic product (in million of rmb).)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "province(province and city)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "id(record identifier)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "gdp",
          "gdppercapita",
          "province",
          "gdpgrowthyoy",
          "id",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index value (points))",
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "indexname",
          "reportperiod",
          "id"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "totalliabilities(total liabilities)",
          "reserveassets(reserve assets)",
          "demanddeposits(current deposits for enterprises)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "depositsexcludedfromm2(deposits not included in broad money)",
          "otherliabilities(other liabilities)",
          "claimsonotherfinstitute(claims on other financial institutions)"
        ],
        "column_names_original_en": [
          "totalliabilities",
          "reserveassets",
          "demanddeposits",
          "liabtootherfinancialcorp",
          "depositsexcludedfromm2",
          "otherliabilities",
          "claimsonotherfinstitute"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help me find out the GDP and per capita GDP for the past three years. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions)",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select gdp , gdppercapita from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.id",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute"
    ]
  },
  {
    "question": "Show the amount of foreign assets and reserve assets in the balance sheet of other deposit-taking companies when our total assets exceed 30 million, and record the time.",
    "sql": "select enddate, foreignassets, reserveassets from ed_otherdepositorycorpbs where totalassets > 30000000;",
    "norm_sql": "select enddate , foreignassets , reserveassets from ed_otherdepositorycorpbs where totalassets > 30000000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "enddate(deadline)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "id",
          "reportperiod",
          "indextitle",
          "enddate",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "id(record identifier)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "sovereigntycountry(the subject country)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "province(province and city)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "id",
          "imvalueofgoods",
          "exvalueofgoods",
          "sovereigntycountry",
          "gyoyofexvaluegoods",
          "province",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "totalassets(total assets)",
          "bondissue(bond issuance)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "foreignassets",
          "reserveassets",
          "totalassets",
          "bondissue",
          "cashinvault",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Show the amount of foreign assets and reserve assets in the balance sheet of other deposit-taking companies when our total assets exceed 30 million, and record the time. | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).enddate(deadline) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ where _ | select enddate , foreignassets , reserveassets from ed_otherdepositorycorpbs where totalassets > 30000000",
    "tc_original": [
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indexvalue",
      "ed_exportimport.*",
      "ed_exportimport.id",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.province",
      "ed_exportimport.enddate",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "Hello, can you show me the detailed data of per capita Gross Domestic Product in our country over the years?",
    "sql": "select gdppercapita from ed_grossdomesticproduct;",
    "norm_sql": "select gdppercapita from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdppercapita(per capita gross domestic product (cny/person))",
          "province(province and city)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "id(record identifier)",
          "enddate(deadline)",
          "gdp(gross domestic product (in million of rmb).)"
        ],
        "column_names_original_en": [
          "gdppercapita",
          "province",
          "secondindustrygdp",
          "thirdindustrygdp",
          "id",
          "enddate",
          "gdp"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indextitle(index name)",
          "id(record identifier)",
          "enddate(deadline)",
          "indexvalue(index value)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indextitle",
          "id",
          "enddate",
          "indexvalue",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "commercialtax(business tax revenue (in million of rmb))",
          "enddate(deadline)",
          "enterpriseincometax(enterprise income tax (in million of rmb))",
          "enterpriseincome(enterprise income (in million of rmb))",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "agriculturetax(agricultural tax (in million of rmb))",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))"
        ],
        "column_names_original_en": [
          "commercialtax",
          "enddate",
          "enterpriseincometax",
          "enterpriseincome",
          "gfinancialrevenue",
          "agriculturetax",
          "operatingexpensescesh"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hello, can you show me the detailed data of per capita Gross Domestic Product in our country over the years? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
    "output_sequence": "select _ from _ | select gdppercapita from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdp",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.reportperiod",
      "ed_financialbalance.*",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.enddate",
      "ed_financialbalance.enterpriseincometax",
      "ed_financialbalance.enterpriseincome",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.operatingexpensescesh"
    ]
  },
  {
    "question": "Can you help me look at the total retail sales of consumer goods in Beijing over the years?",
    "sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province ='Beijing';",
    "norm_sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Beijing'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "province(province and city)",
          "commodity(product name)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "reportarea(statistical category of the region)",
          "enddate(deadline)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "province",
          "commodity",
          "exvalueofgoods",
          "gyoyofeximvaluegoods",
          "reportarea",
          "enddate",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "netabroadassets(foreign net assets)",
          "enddate(deadline)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "bonds(bonds)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "claimstogov(claims on the government (net))",
          "fcdeposits(foreign currency deposit.)"
        ],
        "column_names_original_en": [
          "netabroadassets",
          "enddate",
          "claimstospecificsavingorg",
          "bonds",
          "claimstootherinst",
          "claimstogov",
          "fcdeposits"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "jointventures(joint operating unit)",
          "belowcounty(county and below)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "province(province and city)",
          "reportperiod(data statistical period)",
          "stateownedunits(state-owned unit)"
        ],
        "column_names_original_en": [
          "wholesaleretailtrade",
          "jointventures",
          "belowcounty",
          "retailvalueofscgoods",
          "province",
          "reportperiod",
          "stateownedunits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you help me look at the total retail sales of consumer goods in Beijing over the years? | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).reportperiod(data statistical period) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit)",
    "output_sequence": "select _ from _ where _ | select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Beijing'",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.province",
      "ed_exportimport.commodity",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.reportarea",
      "ed_exportimport.enddate",
      "ed_exportimport.reportperiod",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.stateownedunits"
    ]
  },
  {
    "question": "Please find the names of provinces and cities where the monthly industrial added value has exceeded 1 billion within the scope of \"All Industrial Enterprises\" in each \"province/city\" over the years.",
    "sql": "select province from ed_industryproduction where reportarea = 'province/city' and statstandard = 'All Industrial Enterprises' and reportperiod = 'monthly' and industrialvalueadded > 1000;",
    "norm_sql": "select province from ed_industryproduction where reportarea = 'province/city' and statstandard = 'All Industrial Enterprises' and reportperiod = 'monthly' and industrialvalueadded > 1000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "province(province)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "minitypecomap(small-scale enterprise (light industry))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportarea",
          "reportperiod",
          "province",
          "statstandard",
          "industrialvalueadded",
          "minitypecomap",
          "id"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "drrtype(reserve requirement ratio category)",
          "id(record identifier)",
          "ratioceiling(maximum ratio (%))",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "drrtype",
          "id",
          "ratioceiling",
          "ratiofloor",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexvalue(index value)",
          "id(record identifier)",
          "indextitle(index name)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "enddate",
          "indexvalue",
          "id",
          "indextitle"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please find the names of provinces and cities where the monthly industrial added value has exceeded 1 billion within the scope of \"All Industrial Enterprises\" in each \"province/city\" over the years. | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) , ed_industryproduction(industrial production).id(record identifier) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name)",
    "output_sequence": "select _ from _ where _ | select province from ed_industryproduction where reportarea = 'province/city' and statstandard = 'All Industrial Enterprises' and reportperiod = 'monthly' and industrialvalueadded > 1000",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.province",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.minitypecomap",
      "ed_industryproduction.id",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.effectivedate",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.indextitle"
    ]
  },
  {
    "question": "How many provinces and cities in China had a fiscal revenue growth rate exceeding 5% in the year 2000?",
    "sql": "select count(*) from ed_financialbalance where gfinancialrevenue >5 and strftime('%Y', enddate)='2000';",
    "norm_sql": "select count ( * ) from ed_financialbalance where gfinancialrevenue > 5 and strftime ( '%Y' , enddate ) = '2000'",
    "sql_skeleton": "select count ( _ ) from _ where _ and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))",
          "gsocialsecurity(social security expenditure growth rate)",
          "individualincometax(personal income tax (in million of rmb))",
          "genterpriseincome(enterprise revenue growth rate)",
          "enterpriseincome(enterprise income (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "gfinancialrevenue",
          "centralgovexpenditure",
          "gsocialsecurity",
          "individualincometax",
          "genterpriseincome",
          "enterpriseincome"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "assetsatifo(asset in international financial institutions)",
          "loantogov(financial borrowing)",
          "equityandotherinvestment(securities and investments)",
          "enddate(deadline)",
          "moneyincirculation(currency in circulation)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "domesticloans((one) domestic loan)"
        ],
        "column_names_original_en": [
          "assetsatifo",
          "loantogov",
          "equityandotherinvestment",
          "enddate",
          "moneyincirculation",
          "trustedandcreditdeposits",
          "domesticloans"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "indexvalue(index value)",
          "enddate(deadline)",
          "indextitle(index name)",
          "indexcode(index code)",
          "id(record identifier)",
          "reportarea(statistical region category)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "enddate",
          "indextitle",
          "indexcode",
          "id",
          "reportarea",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How many provinces and cities in China had a fiscal revenue growth rate exceeding 5% in the year 2000? | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gsocialsecurity(social security expenditure growth rate) , ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).genterpriseincome(enterprise revenue growth rate) , ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period)",
    "output_sequence": "select count ( _ ) from _ where _ and strftime ( _ ) = _ | select count ( * ) from ed_financialbalance where gfinancialrevenue > 5 and strftime ( '%Y' , enddate ) = '2000'",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.centralgovexpenditure",
      "ed_financialbalance.gsocialsecurity",
      "ed_financialbalance.individualincometax",
      "ed_financialbalance.genterpriseincome",
      "ed_financialbalance.enterpriseincome",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.domesticloans",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.reportperiod"
    ]
  },
  {
    "question": "What are the amounts of imported goods and exported goods over the years? Please list them.",
    "sql": "select imvalueofgoods, exvalueofgoods from ed_exportimport;",
    "norm_sql": "select imvalueofgoods , exvalueofgoods from ed_exportimport",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "enddate(deadline)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "province(province and city)",
          "sovereigntycountry(the subject country)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "exvalueofgoods",
          "imvalueofgoods",
          "enddate",
          "gyoyofeximvaluegoods",
          "province",
          "sovereigntycountry",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indexvalue(index value)",
          "indextitle(index name)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "indextitle",
          "reportperiod",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "indexvalue(index value (points))",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexname",
          "reportperiod",
          "indexvalue",
          "id",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the amounts of imported goods and exported goods over the years? Please list them. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).reportperiod(data statistical period) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline)",
    "output_sequence": "select _ from _ | select imvalueofgoods , exvalueofgoods from ed_exportimport",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.enddate",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.province",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.reportperiod",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.id",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.enddate"
    ]
  },
  {
    "question": "What are the records in \"State-owned and Large-scale Industrial Enterprises\" in Beijing that have an annual industrial added value exceeding 1 billion? Only include the time and industrial added value fields.",
    "sql": "select enddate, industrialvalueadded from ed_industryproduction where province = 'Beijing' and statstandard ='State-owned and Large-scale Industrial Enterprises' and reportperiod ='annual' and industrialvalueadded > 1000;",
    "norm_sql": "select enddate , industrialvalueadded from ed_industryproduction where province = 'Beijing' and statstandard = 'State-owned and Large-scale Industrial Enterprises' and reportperiod = 'annual' and industrialvalueadded > 1000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "province(province)",
          "reportperiod(data statistics interval)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "enddate(deadline)",
          "largecomap(large-scale enterprise (light industry))",
          "statstandard(statistical caliber)"
        ],
        "column_names_original_en": [
          "stateownedcontrolledcomap",
          "province",
          "reportperiod",
          "industrialvalueadded",
          "enddate",
          "largecomap",
          "statstandard"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "drrtype(reserve requirement ratio category)",
          "effectivedate(effective date)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "drrtype",
          "effectivedate",
          "ratiofloor",
          "ratioceiling",
          "id"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "qoqcpimedicare(healthcare and personal care products month-on-month)",
          "yoycpifood(food year-on-year)",
          "qoqcpitrafficcommunication(transportation and communication month-on-month)",
          "yoycpitrafficcommunication(transportation and communication year-over-year)",
          "qoqcpifamilyequipmentservice(household equipment and services month-on-month)",
          "cumcpitobacco(cumulative average of tobacco, alcohol, and supplies)",
          "qoqcpicloth(clothing month-on-month)"
        ],
        "column_names_original_en": [
          "qoqcpimedicare",
          "yoycpifood",
          "qoqcpitrafficcommunication",
          "yoycpitrafficcommunication",
          "qoqcpifamilyequipmentservice",
          "cumcpitobacco",
          "qoqcpicloth"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the records in \"State-owned and Large-scale Industrial Enterprises\" in Beijing that have an annual industrial added value exceeding 1 billion? Only include the time and industrial added value fields. | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).statstandard(statistical caliber) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).qoqcpimedicare(healthcare and personal care products month-on-month) , ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpitrafficcommunication(transportation and communication month-on-month) , ed_consumerpriceindex(consumer price index).yoycpitrafficcommunication(transportation and communication year-over-year) , ed_consumerpriceindex(consumer price index).qoqcpifamilyequipmentservice(household equipment and services month-on-month) , ed_consumerpriceindex(consumer price index).cumcpitobacco(cumulative average of tobacco, alcohol, and supplies) , ed_consumerpriceindex(consumer price index).qoqcpicloth(clothing month-on-month)",
    "output_sequence": "select _ from _ where _ | select enddate , industrialvalueadded from ed_industryproduction where province = 'Beijing' and statstandard = 'State-owned and Large-scale Industrial Enterprises' and reportperiod = 'annual' and industrialvalueadded > 1000",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.province",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.enddate",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.statstandard",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.id",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.qoqcpimedicare",
      "ed_consumerpriceindex.yoycpifood",
      "ed_consumerpriceindex.qoqcpitrafficcommunication",
      "ed_consumerpriceindex.yoycpitrafficcommunication",
      "ed_consumerpriceindex.qoqcpifamilyequipmentservice",
      "ed_consumerpriceindex.cumcpitobacco",
      "ed_consumerpriceindex.qoqcpicloth"
    ]
  },
  {
    "question": "What is the annual cumulative amount of industrial value added in \"National\" \"state-owned and above-scale industrial enterprises\" in the past three years?",
    "sql": "select enddate, industrialvalueadded from ed_industryproduction where reportarea = 'National' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'annual cumulative' and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select enddate , industrialvalueadded from ed_industryproduction where reportarea = 'National' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'annual cumulative' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "minitypecomap(small-scale enterprise (light industry))",
          "largecomap(large-scale enterprise (light industry))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded",
          "minitypecomap",
          "largecomap"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "yoy(year-on-year increase or decrease (%))",
          "subjectsum(amount (in million of rmb))",
          "id(record identifier)",
          "subjectname(indicator name)",
          "reportperiod(statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "yoy",
          "subjectsum",
          "id",
          "subjectname",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "effectivedate(effective date)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "drrtype(reserve requirement ratio category)"
        ],
        "column_names_original_en": [
          "id",
          "effectivedate",
          "ratiofloor",
          "ratioceiling",
          "drrtype"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the annual cumulative amount of industrial value added in \"National\" \"state-owned and above-scale industrial enterprises\" in the past three years? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , industrialvalueadded from ed_industryproduction where reportarea = 'National' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'annual cumulative' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.minitypecomap",
      "ed_industryproduction.largecomap",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.reportperiod",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.drrtype"
    ]
  },
  {
    "question": "Help Wang find the retail amount in our other industries.",
    "sql": "select othersindustry from ed_retailvalueofscgoods;",
    "norm_sql": "select othersindustry from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "enddate(deadline)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "othersindustry(other industries)",
          "reportarea(statistical category of region)",
          "jointventures(joint operating unit)",
          "province(province and city)",
          "stateownedunits(state-owned unit)"
        ],
        "column_names_original_en": [
          "enddate",
          "wholesaleretailtrade",
          "othersindustry",
          "reportarea",
          "jointventures",
          "province",
          "stateownedunits"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "id(record identifier)",
          "quasimoney(quasi-currency)",
          "money1(currency (narrow money m1))",
          "capitalreceived(paid-up capital)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "claimstospecificsavingorg",
          "id",
          "quasimoney",
          "money1",
          "capitalreceived"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdppercapita(per capita gross domestic product (cny/person))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)"
        ],
        "column_names_original_en": [
          "gdppercapita",
          "gdpgrowthyoy",
          "secondindustrygdp",
          "primaryindustrygdp",
          "thirdindustrygdp",
          "province",
          "gdp"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help Wang find the retail amount in our other industries. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).)",
    "output_sequence": "select _ from _ | select othersindustry from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp"
    ]
  },
  {
    "question": "Please check the annual amount of new RMB loans.",
    "sql": "select enddate, subjectsum from ed_newincreasingloan;",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "subjectsum(amount (in million of rmb))",
          "reportperiod(statistical period)",
          "id(record identifier)",
          "subjectname(indicator name)",
          "yoy(year-on-year increase or decrease (%))"
        ],
        "column_names_original_en": [
          "enddate",
          "subjectsum",
          "reportperiod",
          "id",
          "subjectname",
          "yoy"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "netabroadassets(foreign net assets)",
          "fcdeposits(foreign currency deposit.)",
          "capitalreceived(paid-up capital)",
          "enddate(deadline)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "money1(currency (narrow money m1))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "netabroadassets",
          "fcdeposits",
          "capitalreceived",
          "enddate",
          "claimstospecificsavingorg",
          "money1",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "basiscode(billing baseline)",
          "valueceiling(maximum value (rmb))",
          "typename(tax rate type)",
          "secumarket(securities market)",
          "ratioceiling(maximum ratio (%))",
          "itemname(tax rate items)",
          "maturity(repurchase period)"
        ],
        "column_names_original_en": [
          "basiscode",
          "valueceiling",
          "typename",
          "secumarket",
          "ratioceiling",
          "itemname",
          "maturity"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please check the annual amount of new RMB loans. | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).maturity(repurchase period)",
    "output_sequence": "select _ from _ | select enddate , subjectsum from ed_newincreasingloan",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.yoy",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_taxrate.*",
      "ed_taxrate.basiscode",
      "ed_taxrate.valueceiling",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.itemname",
      "ed_taxrate.maturity"
    ]
  },
  {
    "question": "I want to know the data records of foreign net assets and foreign currency deposits in China.",
    "sql": "select netabroadassets, fcdeposits from ed_chinamoneyandbanking;",
    "norm_sql": "select netabroadassets , fcdeposits from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "netabroadassets(foreign net assets)",
          "fcdeposits(foreign currency deposit.)",
          "centralbankbonds(central bank bonds)",
          "capitalreceived(paid-up capital)",
          "money1(currency (narrow money m1))",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "bonds(bonds)"
        ],
        "column_names_original_en": [
          "netabroadassets",
          "fcdeposits",
          "centralbankbonds",
          "capitalreceived",
          "money1",
          "claimstononfinancialinst",
          "bonds"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "gdp(gross domestic product (in million of rmb).)",
          "province(province and city)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "enddate(deadline)",
          "gdppercapita(per capita gross domestic product (cny/person))"
        ],
        "column_names_original_en": [
          "gdpgrowthyoy",
          "gdp",
          "province",
          "thirdindustrygdp",
          "primaryindustrygdp",
          "enddate",
          "gdppercapita"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "indexvalue(index value (points))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "id",
          "indexname",
          "reportperiod",
          "indexvalue",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the data records of foreign net assets and foreign currency deposits in China. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline)",
    "output_sequence": "select _ from _ | select netabroadassets , fcdeposits from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.bonds",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdppercapita",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.enddate"
    ]
  },
  {
    "question": "What is the net foreign assets in China's monetary banking business?",
    "sql": "select netabroadassets from ed_chinamoneyandbanking;",
    "norm_sql": "select netabroadassets from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "netabroadassets(foreign net assets)",
          "fcdeposits(foreign currency deposit.)",
          "bonds(bonds)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "capitalreceived(paid-up capital)",
          "money1(currency (narrow money m1))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "netabroadassets",
          "fcdeposits",
          "bonds",
          "claimstootherinst",
          "capitalreceived",
          "money1",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "collectiveunits(collective unit)",
          "id(record identifier)",
          "belowcounty(county and below)",
          "enddate(deadline)",
          "selfemployed(individual unit)",
          "city(city)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "collectiveunits",
          "id",
          "belowcounty",
          "enddate",
          "selfemployed",
          "city",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indexvalue(index value)",
          "indextitle(index name)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indexvalue",
          "indextitle",
          "enddate",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the net foreign assets in China's monetary banking business? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier)",
    "output_sequence": "select _ from _ | select netabroadassets from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.id",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.reportperiod",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.id"
    ]
  },
  {
    "question": "Please query the detailed list of total import value and total export value of goods over the years.",
    "sql": "select imvalueofgoods, exvalueofgoods from ed_exportimport;",
    "norm_sql": "select imvalueofgoods , exvalueofgoods from ed_exportimport",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "reportarea(statistical category of the region)",
          "sovereigntycountry(the subject country)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "id(record identifier)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "exvalueofgoods",
          "imvalueofgoods",
          "reportarea",
          "sovereigntycountry",
          "gyoyofexvaluegoods",
          "id",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "reserveassets(reserve assets)",
          "depositsexcludedfromm2(deposits not included in broad money)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "timedeposits(fixed deposit for enterprises)",
          "claimsoncentralbank(claims on central bank)",
          "transferabledeposits(transferable deposits)"
        ],
        "column_names_original_en": [
          "reserveassets",
          "depositsexcludedfromm2",
          "liabilitiestocentralbank",
          "liabtootherfinancialcorp",
          "timedeposits",
          "claimsoncentralbank",
          "transferabledeposits"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "id(record identifier)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp",
          "id",
          "gdpgrowthyoy",
          "province"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please query the detailed list of total import value and total export value of goods over the years. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).reportperiod(data statistical period) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).province(province and city)",
    "output_sequence": "select _ from _ | select imvalueofgoods , exvalueofgoods from ed_exportimport",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.reportarea",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.id",
      "ed_exportimport.reportperiod",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.province"
    ]
  },
  {
    "question": "List the total amount of retail sales of consumer goods for each \"province/city\" and \"year\" two years ago.",
    "sql": "select province, retailvalueofscgoods from ed_retailvalueofscgoods where reportarea = 'province/city' and reportperiod = 'year' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select province , retailvalueofscgoods from ed_retailvalueofscgoods where reportarea = 'province/city' and reportperiod = 'year' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "money1(currency (narrow money m1))",
          "centralbankbonds(central bank bonds)",
          "bonds(bonds)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "domesticloans(domestic credit)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))"
        ],
        "column_names_original_en": [
          "money1",
          "centralbankbonds",
          "bonds",
          "claimstootherinst",
          "domesticloans",
          "claimstononfinancialinst",
          "moneyandquasimoney"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "reportarea(statistical category of region)",
          "province(province and city)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "belowcounty(county and below)",
          "othersunits(other units)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "reportarea",
          "province",
          "retailvalueofscgoods",
          "belowcounty",
          "othersunits"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indextype(index category)",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indextype",
          "reportperiod",
          "indexname",
          "indexvalue",
          "id",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "List the total amount of retail sales of consumer goods for each \"province/city\" and \"year\" two years ago. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select province , retailvalueofscgoods from ed_retailvalueofscgoods where reportarea = 'province/city' and reportperiod = 'year' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.othersunits",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate"
    ]
  },
  {
    "question": "Help me count the number of listed companies in 2020 that have stock codes starting with 60 and have conducted share buybacks.",
    "sql": "select count(*) from lc_buyback where strftime('%Y', advancedate)='2020' and secucode like '60%';",
    "norm_sql": "select count ( * ) from lc_buyback where strftime ( '%Y' , advancedate ) = '2020' and secucode like '60%'",
    "sql_skeleton": "select count ( _ ) from lc_buyback where strftime ( _ , advancedate ) = _ and secucode like _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "id(record identifier)",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "reportperiod(data statistics interval)",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "entrustedloans(trust loan (in 100 million of rmb))",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "id",
          "socialfinancing",
          "foreigncurrencyloans",
          "reportperiod",
          "definancingofnonfe",
          "entrustedloans",
          "undiscountedbacceptances"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "id(record identifier)",
          "subjectname(indicator name)",
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))"
        ],
        "column_names_original_en": [
          "id",
          "subjectname",
          "enddate",
          "reportperiod",
          "subjectsum",
          "yoy"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "indexcode(index code)",
          "indextitle(index name)",
          "enddate(deadline)",
          "comparetolastmonth(index month-on-month change (points))",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "reportarea(statistical region category)"
        ],
        "column_names_original_en": [
          "indexcode",
          "indextitle",
          "enddate",
          "comparetolastmonth",
          "id",
          "reportperiod",
          "reportarea"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help me count the number of listed companies in 2020 that have stock codes starting with 60 and have conducted share buybacks. | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category)",
    "output_sequence": "select count ( _ ) from lc_buyback where strftime ( _ , advancedate ) = _ and secucode like _ | select count ( * ) from lc_buyback where strftime ( '%Y' , advancedate ) = '2020' and secucode like '60%'",
    "tc_original": [
      "ed_socialfinancing.*",
      "ed_socialfinancing.id",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.reportarea"
    ]
  },
  {
    "question": "I want to know the growth rate of various taxes in each province and city of my country over the years.",
    "sql": "select gtaxs from ed_financialbalance;",
    "norm_sql": "select gtaxs from ed_financialbalance",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "indexname(index name)",
          "enddate(deadline)",
          "indexvalue(index value (points))",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "id",
          "indexname",
          "enddate",
          "indexvalue",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "entrustedloans(trust loan (in 100 million of rmb))",
          "creditloans(trust loan (in 100 million rmb))",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "id(record identifier)",
          "corporatebonds(corporate bonds (in hundred million rmb))"
        ],
        "column_names_original_en": [
          "definancingofnonfe",
          "entrustedloans",
          "creditloans",
          "foreigncurrencyloans",
          "undiscountedbacceptances",
          "id",
          "corporatebonds"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "gtaxs(various tax revenues growth rate)",
          "socialsecurity(social security expenditure (in million of rmb))",
          "salestax(business tax (in million of rmb))",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))",
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "gnationaldefense(defense expenditure growth rate)"
        ],
        "column_names_original_en": [
          "gtaxs",
          "socialsecurity",
          "salestax",
          "localgovexpenditure",
          "centralgovexpenditure",
          "gfinancialexpenditure",
          "gnationaldefense"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the growth rate of various taxes in each province and city of my country over the years. | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).gtaxs(various tax revenues growth rate) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate)",
    "output_sequence": "select _ from _ | select gtaxs from ed_financialbalance",
    "tc_original": [
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.reportperiod",
      "ed_socialfinancing.*",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.creditloans",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.id",
      "ed_socialfinancing.corporatebonds",
      "ed_financialbalance.*",
      "ed_financialbalance.gtaxs",
      "ed_financialbalance.socialsecurity",
      "ed_financialbalance.salestax",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.centralgovexpenditure",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.gnationaldefense"
    ]
  },
  {
    "question": "What is the annual \"end-of-period cumulative\" industrial value added in the scope of \"all industrial enterprises\" in Beijing?",
    "sql": "select enddate, industrialvalueadded from ed_industryproduction where province ='Beijing' and statstandard ='all industrial enterprises' and reportperiod ='end-of-period cumulative' ;",
    "norm_sql": "select enddate , industrialvalueadded from ed_industryproduction where province = 'Beijing' and statstandard = 'all industrial enterprises' and reportperiod = 'end-of-period cumulative'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistics interval)",
          "province(province)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "reportarea(statistical area category)",
          "collectivecomap(collective enterprise (light industry))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "province",
          "statstandard",
          "industrialvalueadded",
          "reportarea",
          "collectivecomap"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "avgprice(average price)",
          "operatetype(import and export categories)",
          "id(record identifier)",
          "currencycode(currency unit)",
          "category(product category)",
          "accuavgprice(cumulative average price)",
          "quantity(quantity)"
        ],
        "column_names_original_en": [
          "avgprice",
          "operatetype",
          "id",
          "currencycode",
          "category",
          "accuavgprice",
          "quantity"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "id(record identifier)",
          "province(province and city)",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "reportarea(statistical region category)",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "enddate(deadline)",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))"
        ],
        "column_names_original_en": [
          "id",
          "province",
          "undiscountedbacceptances",
          "reportarea",
          "socialfinancing",
          "enddate",
          "definancingofnonfe"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the annual \"end-of-period cumulative\" industrial value added in the scope of \"all industrial enterprises\" in Beijing? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).avgprice(average price) , ed_productexportimport(product import and export volume).operatetype(import and export categories) , ed_productexportimport(product import and export volume).id(record identifier) , ed_productexportimport(product import and export volume).currencycode(currency unit) , ed_productexportimport(product import and export volume).category(product category) , ed_productexportimport(product import and export volume).accuavgprice(cumulative average price) , ed_productexportimport(product import and export volume).quantity(quantity) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
    "output_sequence": "select _ from _ where _ | select enddate , industrialvalueadded from ed_industryproduction where province = 'Beijing' and statstandard = 'all industrial enterprises' and reportperiod = 'end-of-period cumulative'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.province",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.collectivecomap",
      "ed_productexportimport.*",
      "ed_productexportimport.avgprice",
      "ed_productexportimport.operatetype",
      "ed_productexportimport.id",
      "ed_productexportimport.currencycode",
      "ed_productexportimport.category",
      "ed_productexportimport.accuavgprice",
      "ed_productexportimport.quantity",
      "ed_socialfinancing.*",
      "ed_socialfinancing.id",
      "ed_socialfinancing.province",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.definancingofnonfe"
    ]
  },
  {
    "question": "Please check the situation of the quantity of central bank bonds issued by the People's Bank of China in 2005, and list the number of central bank bonds.",
    "sql": "select centralbankbonds from ed_chinamoneyandbanking where strftime('%Y', enddate)='2005' and centralbankbonds < 10000000;",
    "norm_sql": "select centralbankbonds from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = '2005' and centralbankbonds < 10000000",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _ and _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "centralbankbonds(central bank bonds)",
          "claimstogov(claims on the government (net))",
          "fcdeposits(foreign currency deposit.)",
          "bonds(bonds)",
          "capitalreceived(paid-up capital)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)"
        ],
        "column_names_original_en": [
          "enddate",
          "centralbankbonds",
          "claimstogov",
          "fcdeposits",
          "bonds",
          "capitalreceived",
          "claimstootherinst"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "id",
          "reportperiod",
          "indexname",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "totalsavings(all deposit accounts)",
          "id(record identifier)",
          "totalloans(various loans)",
          "savingsdeposits(savings deposits)",
          "datatype(data type code)",
          "currencyname(currency unit code)",
          "overseasloans((two) overseas loans)"
        ],
        "column_names_original_en": [
          "totalsavings",
          "id",
          "totalloans",
          "savingsdeposits",
          "datatype",
          "currencyname",
          "overseasloans"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please check the situation of the quantity of central bank bonds issued by the People's Bank of China in 2005, and list the number of central bank bonds. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans)",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ and _ | select centralbankbonds from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = '2005' and centralbankbonds < 10000000",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.claimstootherinst",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.enddate",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.overseasloans"
    ]
  },
  {
    "question": "What is the gross domestic product of the primary, secondary, and tertiary industries in each province and city in 2020?",
    "sql": "select province, primaryindustrygdp, secondindustrygdp, thirdindustrygdp from ed_grossdomesticproduct where strftime('%Y', enddate)='2020';",
    "norm_sql": "select province , primaryindustrygdp , secondindustrygdp , thirdindustrygdp from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = '2020'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "enddate(deadline)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "gdp(gross domestic product (in million of rmb).)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)"
        ],
        "column_names_original_en": [
          "province",
          "enddate",
          "primaryindustrygdp",
          "secondindustrygdp",
          "thirdindustrygdp",
          "gdp",
          "gdpgrowthyoy"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "transferabledeposits(transferable deposits)",
          "otherassets(other assets)",
          "totalassets(total assets)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "id(record identifier)",
          "paidincapital(paid-up capital)"
        ],
        "column_names_original_en": [
          "liabilitiestonfinst",
          "transferabledeposits",
          "otherassets",
          "totalassets",
          "claimsonothernfinstitute",
          "id",
          "paidincapital"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "qoqcpimedicare(healthcare and personal care products month-on-month)",
          "id(record identifier)",
          "qoqcpitrafficcommunication(transportation and communication month-on-month)",
          "qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month)",
          "cumcpimedicare(cumulative average of healthcare and personal care products)",
          "qoqcpi(resident consumer price index (month-on-month))",
          "yoycpimedicare(medical care and personal care products year-on-year)"
        ],
        "column_names_original_en": [
          "qoqcpimedicare",
          "id",
          "qoqcpitrafficcommunication",
          "qoqcpientertainmentservice",
          "cumcpimedicare",
          "qoqcpi",
          "yoycpimedicare"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the gross domestic product of the primary, secondary, and tertiary industries in each province and city in 2020? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).qoqcpimedicare(healthcare and personal care products month-on-month) , ed_consumerpriceindex(consumer price index).id(record identifier) , ed_consumerpriceindex(consumer price index).qoqcpitrafficcommunication(transportation and communication month-on-month) , ed_consumerpriceindex(consumer price index).qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month) , ed_consumerpriceindex(consumer price index).cumcpimedicare(cumulative average of healthcare and personal care products) , ed_consumerpriceindex(consumer price index).qoqcpi(resident consumer price index (month-on-month)) , ed_consumerpriceindex(consumer price index).yoycpimedicare(medical care and personal care products year-on-year)",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select province , primaryindustrygdp , secondindustrygdp , thirdindustrygdp from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = '2020'",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_otherdepositorycorpbs.otherassets",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.qoqcpimedicare",
      "ed_consumerpriceindex.id",
      "ed_consumerpriceindex.qoqcpitrafficcommunication",
      "ed_consumerpriceindex.qoqcpientertainmentservice",
      "ed_consumerpriceindex.cumcpimedicare",
      "ed_consumerpriceindex.qoqcpi",
      "ed_consumerpriceindex.yoycpimedicare"
    ]
  },
  {
    "question": "What are the total amounts of goods import and export in China over the years since records are available?",
    "sql": "select imvalueofgoods, exvalueofgoods from ed_exportimport;",
    "norm_sql": "select imvalueofgoods , exvalueofgoods from ed_exportimport",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "enddate(deadline)",
          "reportarea(statistical category of the region)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "commodity(product name)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "exvalueofgoods",
          "imvalueofgoods",
          "enddate",
          "reportarea",
          "gyoyofimvaluegoods",
          "commodity",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "qoqcpifamilyequipmentservice(household equipment and services month-on-month)",
          "yoycpicloth(clothing year-on-year)",
          "yoycpihousing(residential year-on-year)",
          "yoycpitrafficcommunication(transportation and communication year-over-year)",
          "id(record identifier)",
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)",
          "qoqcpifood(food price month-on-month)"
        ],
        "column_names_original_en": [
          "qoqcpifamilyequipmentservice",
          "yoycpicloth",
          "yoycpihousing",
          "yoycpitrafficcommunication",
          "id",
          "yoycpifamilyequipmentservice",
          "qoqcpifood"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "province(province and city)",
          "stateownedunits(state-owned unit)",
          "selfemployed(individual unit)",
          "jointventures(joint operating unit)",
          "belowcounty(county and below)",
          "othersunits(other units)",
          "foodbeverage(catering industry)"
        ],
        "column_names_original_en": [
          "province",
          "stateownedunits",
          "selfemployed",
          "jointventures",
          "belowcounty",
          "othersunits",
          "foodbeverage"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the total amounts of goods import and export in China over the years since records are available? | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).reportperiod(data statistical period) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).qoqcpifamilyequipmentservice(household equipment and services month-on-month) , ed_consumerpriceindex(consumer price index).yoycpicloth(clothing year-on-year) , ed_consumerpriceindex(consumer price index).yoycpihousing(residential year-on-year) , ed_consumerpriceindex(consumer price index).yoycpitrafficcommunication(transportation and communication year-over-year) , ed_consumerpriceindex(consumer price index).id(record identifier) , ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpifood(food price month-on-month) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry)",
    "output_sequence": "select _ from _ | select imvalueofgoods , exvalueofgoods from ed_exportimport",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.enddate",
      "ed_exportimport.reportarea",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.commodity",
      "ed_exportimport.reportperiod",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.qoqcpifamilyequipmentservice",
      "ed_consumerpriceindex.yoycpicloth",
      "ed_consumerpriceindex.yoycpihousing",
      "ed_consumerpriceindex.yoycpitrafficcommunication",
      "ed_consumerpriceindex.id",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice",
      "ed_consumerpriceindex.qoqcpifood",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.foodbeverage"
    ]
  },
  {
    "question": "Please display the index value of \"Non-metallic Mineral Mining and Dressing Industry\" in the \"National Economic Industry Index\" for the \"same month of the previous year\".",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod ='same month of the previous year' and indextype ='National Economic Industry Index' and indexname ='Non-metallic Mineral Mining and Dressing Industry';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'same month of the previous year' and indextype = 'National Economic Industry Index' and indexname = 'Non-metallic Mineral Mining and Dressing Industry'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indextype(index category)",
          "id(record identifier)",
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indextype",
          "id",
          "indexname",
          "indexvalue",
          "enddate",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "city(city)",
          "othersindustry(other industries)",
          "jointventures(joint operating unit)",
          "collectiveunits(collective unit)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "reportarea(statistical category of region)"
        ],
        "column_names_original_en": [
          "wholesaleretailtrade",
          "city",
          "othersindustry",
          "jointventures",
          "collectiveunits",
          "retailvalueofscgoods",
          "reportarea"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "sharesandotherinvestments(equity and other investments)",
          "shorttermloans(short-term loan)",
          "totalsavings(all deposit accounts)",
          "corporatesavings(unit deposit/corporate deposit)",
          "loantogov(financial borrowing)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "othersavings(other deposits)"
        ],
        "column_names_original_en": [
          "sharesandotherinvestments",
          "shorttermloans",
          "totalsavings",
          "corporatesavings",
          "loantogov",
          "trustedandcreditdeposits",
          "othersavings"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please display the index value of \"Non-metallic Mineral Mining and Dressing Industry\" in the \"National Economic Industry Index\" for the \"same month of the previous year\". | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits)",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'same month of the previous year' and indextype = 'National Economic Industry Index' and indexname = 'Non-metallic Mineral Mining and Dressing Industry'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.reportarea",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.othersavings"
    ]
  },
  {
    "question": "I want to see the average index value of \"Agricultural and sideline food processing industry\" two years ago within the \"same month of the previous year\" range.",
    "sql": "select avg(indexvalue) from ed_producerpiformp  where indexname ='Agricultural and sideline food processing industry' and reportperiod ='same month of the previous year' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-2 year')) ;",
    "norm_sql": "select avg ( indexvalue ) from ed_producerpiformp where indexname = 'Agricultural and sideline food processing industry' and reportperiod = 'same month of the previous year' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select avg ( _ ) from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)",
          "indextype(index category)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "indexname",
          "indexvalue",
          "id",
          "indextype"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "id(record identifier)",
          "enddate(deadline)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "gdp(gross domestic product (in million of rmb).)"
        ],
        "column_names_original_en": [
          "province",
          "primaryindustrygdp",
          "secondindustrygdp",
          "id",
          "enddate",
          "thirdindustrygdp",
          "gdp"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "centralbankbonds(central bank bonds)",
          "netabroadassets(foreign net assets)",
          "quasimoney(quasi-currency)",
          "domesticloans(domestic credit)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "claimstootherinst",
          "claimstononfinancialinst",
          "centralbankbonds",
          "netabroadassets",
          "quasimoney",
          "domesticloans",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to see the average index value of \"Agricultural and sideline food processing industry\" two years ago within the \"same month of the previous year\" range. | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indextype(index category) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline)",
    "output_sequence": "select avg ( _ ) from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select avg ( indexvalue ) from ed_producerpiformp where indexname = 'Agricultural and sideline food processing industry' and reportperiod = 'same month of the previous year' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indextype",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.gdp",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.enddate"
    ]
  },
  {
    "question": "How much is the personal income tax revenue in Shaanxi province in recent years?",
    "sql": "select individualincometax from ed_financialbalance where province ='Shaanxi';",
    "norm_sql": "select individualincometax from ed_financialbalance where province = 'Shaanxi'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "province(province and city)",
          "individualincometax(personal income tax (in million of rmb))",
          "supportunderdevelopedarea(policy subsidy expenditure (in million of rmb))",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "genterpriseincome(enterprise revenue growth rate)",
          "enterpriseincome(enterprise income (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "individualincometax",
          "supportunderdevelopedarea",
          "expenditurecitymc",
          "gfinancialrevenue",
          "genterpriseincome",
          "enterpriseincome"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "cumcpi(cumulative average of resident consumer price index)",
          "yoycpimedicare(medical care and personal care products year-on-year)",
          "yoycpihousing(residential year-on-year)",
          "qoqcpicloth(clothing month-on-month)",
          "cumcpitobacco(cumulative average of tobacco, alcohol, and supplies)",
          "cumcpicloth(cumulative average of clothing)",
          "qoqcpifood(food price month-on-month)"
        ],
        "column_names_original_en": [
          "cumcpi",
          "yoycpimedicare",
          "yoycpihousing",
          "qoqcpicloth",
          "cumcpitobacco",
          "cumcpicloth",
          "qoqcpifood"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "totalliability(total liabilities (in million of rmb))",
          "reservedeposits(reserve deposit (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "totalassets(total assets (in million of rmb).)"
        ],
        "column_names_original_en": [
          "claimtosavingsinst",
          "totalliability",
          "reservedeposits",
          "claimtootherfinnonfininst",
          "moneyreserves",
          "otherforeignassets",
          "totalassets"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How much is the personal income tax revenue in Shaanxi province in recent years? | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).supportunderdevelopedarea(policy subsidy expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).genterpriseincome(enterprise revenue growth rate) , ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb)) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).yoycpimedicare(medical care and personal care products year-on-year) , ed_consumerpriceindex(consumer price index).yoycpihousing(residential year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpicloth(clothing month-on-month) , ed_consumerpriceindex(consumer price index).cumcpitobacco(cumulative average of tobacco, alcohol, and supplies) , ed_consumerpriceindex(consumer price index).cumcpicloth(cumulative average of clothing) , ed_consumerpriceindex(consumer price index).qoqcpifood(food price month-on-month) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).)",
    "output_sequence": "select _ from _ where _ | select individualincometax from ed_financialbalance where province = 'Shaanxi'",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.province",
      "ed_financialbalance.individualincometax",
      "ed_financialbalance.supportunderdevelopedarea",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.genterpriseincome",
      "ed_financialbalance.enterpriseincome",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.yoycpimedicare",
      "ed_consumerpriceindex.yoycpihousing",
      "ed_consumerpriceindex.qoqcpicloth",
      "ed_consumerpriceindex.cumcpitobacco",
      "ed_consumerpriceindex.cumcpicloth",
      "ed_consumerpriceindex.qoqcpifood",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.totalassets"
    ]
  },
  {
    "question": "I want to know the top 10 records of the highest number of bond issuances in the balance sheet of other deposit-taking companies in 2000, displaying the time and the number of bond issuances.",
    "sql": "select enddate, bondissue from ed_otherdepositorycorpbs where strftime('%Y', enddate)='2000' order by bondissue desc limit 10;",
    "norm_sql": "select enddate , bondissue from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = '2000' order by bondissue desc limit 10",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _ order by _ desc limit _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsonothernfinstitute(claims on non-financial institution)",
          "savingdeposits(resident savings deposits)",
          "depositswithcentralbank(reserve deposit)",
          "bondissue(bond issuance)",
          "paidincapital(paid-up capital)",
          "enddate(deadline)",
          "demanddeposits(current deposits for enterprises)"
        ],
        "column_names_original_en": [
          "claimsonothernfinstitute",
          "savingdeposits",
          "depositswithcentralbank",
          "bondissue",
          "paidincapital",
          "enddate",
          "demanddeposits"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "indextitle(index name)",
          "indexvalue(index value)",
          "id(record identifier)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "indextitle",
          "indexvalue",
          "id",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)",
          "drrtype(reserve requirement ratio category)",
          "id(record identifier)",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "ratiofloor",
          "effectivedate",
          "drrtype",
          "id",
          "ratioceiling"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the top 10 records of the highest number of bond issuances in the balance sheet of other deposit-taking companies in 2000, displaying the time and the number of bond issuances. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%))",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ order by _ desc limit _ | select enddate , bondissue from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = '2000' order by bondissue desc limit 10",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.demanddeposits",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.reportperiod",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratioceiling"
    ]
  },
  {
    "question": "Show the amounts of monetary and quasi-monetary money when the total amount exceeds 100 million yuan since the records.",
    "sql": "select money1, quasimoney from ed_chinamoneyandbanking where moneyandquasimoney > 100000000;",
    "norm_sql": "select money1 , quasimoney from ed_chinamoneyandbanking where moneyandquasimoney > 100000000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "money1(currency (narrow money m1))",
          "quasimoney(quasi-currency)",
          "fcdeposits(foreign currency deposit.)",
          "capitalreceived(paid-up capital)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "netabroadassets(foreign net assets)"
        ],
        "column_names_original_en": [
          "moneyandquasimoney",
          "money1",
          "quasimoney",
          "fcdeposits",
          "capitalreceived",
          "claimstootherinst",
          "netabroadassets"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "selfownedmoney(own funds (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "claimtosavingsinst",
          "selfownedmoney",
          "claimtononfinancialinst",
          "otherforeignassets",
          "nonfinancialorgdeposits",
          "forex",
          "claimtosavingsbanks"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "id(record identifier)",
          "yoycpitrafficcommunication(transportation and communication year-over-year)",
          "cumcpifood(accumulated average of food)",
          "cumcpientertainmentservice(accumulated average of entertainment, education, cultural goods and services)",
          "cumcpimedicare(cumulative average of healthcare and personal care products)",
          "yoycpihousing(residential year-on-year)",
          "qoqcpifood(food price month-on-month)"
        ],
        "column_names_original_en": [
          "id",
          "yoycpitrafficcommunication",
          "cumcpifood",
          "cumcpientertainmentservice",
          "cumcpimedicare",
          "yoycpihousing",
          "qoqcpifood"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Show the amounts of monetary and quasi-monetary money when the total amount exceeds 100 million yuan since the records. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).id(record identifier) , ed_consumerpriceindex(consumer price index).yoycpitrafficcommunication(transportation and communication year-over-year) , ed_consumerpriceindex(consumer price index).cumcpifood(accumulated average of food) , ed_consumerpriceindex(consumer price index).cumcpientertainmentservice(accumulated average of entertainment, education, cultural goods and services) , ed_consumerpriceindex(consumer price index).cumcpimedicare(cumulative average of healthcare and personal care products) , ed_consumerpriceindex(consumer price index).yoycpihousing(residential year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpifood(food price month-on-month)",
    "output_sequence": "select _ from _ where _ | select money1 , quasimoney from ed_chinamoneyandbanking where moneyandquasimoney > 100000000",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.id",
      "ed_consumerpriceindex.yoycpitrafficcommunication",
      "ed_consumerpriceindex.cumcpifood",
      "ed_consumerpriceindex.cumcpientertainmentservice",
      "ed_consumerpriceindex.cumcpimedicare",
      "ed_consumerpriceindex.yoycpihousing",
      "ed_consumerpriceindex.qoqcpifood"
    ]
  },
  {
    "question": "How much is the fiscal borrowing in the income and expenditure of China's credit?",
    "sql": "select loantogov from ed_chinafibalancesheetrmb;",
    "norm_sql": "select loantogov from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdppercapita(per capita gross domestic product (cny/person))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "gdppercapita",
          "secondindustrygdp",
          "id",
          "province",
          "gdp",
          "gdpgrowthyoy",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "loantogov(financial borrowing)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "datatype(data type code)",
          "financedeposits(financial deposit)",
          "shorttermloans(short-term loan)",
          "agriculturaldeposits(agricultural deposit)",
          "financialbonds(financial bonds)"
        ],
        "column_names_original_en": [
          "loantogov",
          "trustedandcreditdeposits",
          "datatype",
          "financedeposits",
          "shorttermloans",
          "agriculturaldeposits",
          "financialbonds"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "drrtype(reserve requirement ratio category)",
          "effectivedate(effective date)",
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "drrtype",
          "effectivedate",
          "ratioceiling",
          "id",
          "ratiofloor"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How much is the fiscal borrowing in the income and expenditure of China's credit? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%))",
    "output_sequence": "select _ from _ | select loantogov from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.financialbonds",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratiofloor"
    ]
  },
  {
    "question": "Help me find the records of financial bonds and money in circulation in the credit records of China's financial institutions in the past three years.",
    "sql": "select financialbonds, moneyincirculation from ed_chinafibalancesheetrmb  where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select financialbonds , moneyincirculation from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "financialbonds(financial bonds)",
          "moneyincirculation(currency in circulation)",
          "orgdeposits(government and institutional deposits)",
          "reservedeposits(deposit of reserve funds)",
          "sharesandotherinvestments(equity and other investments)",
          "financedeposits(financial deposit)"
        ],
        "column_names_original_en": [
          "enddate",
          "financialbonds",
          "moneyincirculation",
          "orgdeposits",
          "reservedeposits",
          "sharesandotherinvestments",
          "financedeposits"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "indexvalue(index value)",
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "id(record identifier)",
          "comparetolastmonth(index month-on-month change (points))",
          "enddate(deadline)",
          "indexcode(index code)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "reportperiod",
          "indextitle",
          "id",
          "comparetolastmonth",
          "enddate",
          "indexcode"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsonotherresidentsec(claims on other resident sectors)",
          "paidincapital(paid-up capital)",
          "totalliabilities(total liabilities)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "bondissue(bond issuance)",
          "depositsexcludedfromm2(deposits not included in broad money)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "claimsonotherresidentsec",
          "paidincapital",
          "totalliabilities",
          "depositsincludedinm2",
          "bondissue",
          "depositsexcludedfromm2",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help me find the records of financial bonds and money in circulation in the credit records of China's financial institutions in the past three years. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).orgdeposits(government and institutional deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).indexcode(index code) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) , ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier)",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select financialbonds , moneyincirculation from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.orgdeposits",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.financedeposits",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.indexcode",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_otherdepositorycorpbs.id"
    ]
  },
  {
    "question": "Please list the records in these years where the total value of goods exports exceeds 20 million, and provide the total value of exports and the year-on-year increase or decrease in exports.",
    "sql": "select exvalueofgoods, gyoyofexvaluegoods from ed_exportimport where exvalueofgoods > 20;",
    "norm_sql": "select exvalueofgoods , gyoyofexvaluegoods from ed_exportimport where exvalueofgoods > 20",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "ratiofloor(minimum ratio (%))",
          "drrtype(reserve requirement ratio category)",
          "id(record identifier)",
          "ratioceiling(maximum ratio (%))",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "ratiofloor",
          "drrtype",
          "id",
          "ratioceiling",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "enddate(deadline)",
          "id(record identifier)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "gdp",
          "gdppercapita",
          "enddate",
          "id",
          "thirdindustrygdp",
          "secondindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "sovereigntycountry(the subject country)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "reportperiod(data statistical period)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "exvalueofgoods",
          "gyoyofexvaluegoods",
          "sovereigntycountry",
          "gyoyofimvaluegoods",
          "reportperiod",
          "eximvalueofgoods",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the records in these years where the total value of goods exports exceeds 20 million, and provide the total value of exports and the year-on-year increase or decrease in exports. | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).id(record identifier)",
    "output_sequence": "select _ from _ where _ | select exvalueofgoods , gyoyofexvaluegoods from ed_exportimport where exvalueofgoods > 20",
    "tc_original": [
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.effectivedate",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_exportimport.*",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.reportperiod",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.id"
    ]
  },
  {
    "question": "Please list the amounts of our company's demand deposits and time deposits in the balance sheet of other deposit-taking companies.",
    "sql": "select demanddeposits, timedeposits from ed_otherdepositorycorpbs ;",
    "norm_sql": "select demanddeposits , timedeposits from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "province(province and city)",
          "enddate(deadline)",
          "commercialtax(business tax revenue (in million of rmb))",
          "individualincometax(personal income tax (in million of rmb))",
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "supportunderdevelopedarea(policy subsidy expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "localgovrevenue",
          "province",
          "enddate",
          "commercialtax",
          "individualincometax",
          "gfinancialexpenditure",
          "supportunderdevelopedarea"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "demanddeposits(current deposits for enterprises)",
          "timedeposits(fixed deposit for enterprises)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "transferabledeposits(transferable deposits)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "id(record identifier)",
          "bondissue(bond issuance)"
        ],
        "column_names_original_en": [
          "demanddeposits",
          "timedeposits",
          "liabilitiestocentralbank",
          "transferabledeposits",
          "liabtootherdepositcorp",
          "id",
          "bondissue"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "province(province and city)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "gdp(gross domestic product (in million of rmb).)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "primaryindustrygdp",
          "province",
          "gdppercapita",
          "gdp",
          "gdpgrowthyoy",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the amounts of our company's demand deposits and time deposits in the balance sheet of other deposit-taking companies. | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).supportunderdevelopedarea(policy subsidy expenditure (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb))",
    "output_sequence": "select _ from _ | select demanddeposits , timedeposits from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.province",
      "ed_financialbalance.enddate",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.individualincometax",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.supportunderdevelopedarea",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp"
    ]
  },
  {
    "question": "Please help Mr. Li check the respective amounts of domestic loans and overseas loans in China's financial institutions' balance sheet for credit income and expenditure.",
    "sql": "select domesticloans, overseasloans from ed_chinafibalancesheetrmb;",
    "norm_sql": "select domesticloans , overseasloans from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "othersavings(other deposits)",
          "overseasloans((two) overseas loans)",
          "loantogov(financial borrowing)",
          "domesticloans((one) domestic loan)",
          "reservedeposits(deposit of reserve funds)",
          "corporatesavings(unit deposit/corporate deposit)",
          "mediumlongtermloans(medium-to-long term loans)"
        ],
        "column_names_original_en": [
          "othersavings",
          "overseasloans",
          "loantogov",
          "domesticloans",
          "reservedeposits",
          "corporatesavings",
          "mediumlongtermloans"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "basiscode(billing baseline)",
          "itemname(tax rate items)",
          "effectivedate(effective date)",
          "id(record identifier)",
          "ratioceiling(maximum ratio (%))",
          "secumarket(securities market)",
          "maturity(repurchase period)"
        ],
        "column_names_original_en": [
          "basiscode",
          "itemname",
          "effectivedate",
          "id",
          "ratioceiling",
          "secumarket",
          "maturity"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "province(province and city)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "id(record identifier)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "gdppercapita",
          "gdp",
          "primaryindustrygdp",
          "id",
          "gdpgrowthyoy"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help Mr. Li check the respective amounts of domestic loans and overseas loans in China's financial institutions' balance sheet for credit income and expenditure. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).maturity(repurchase period) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
    "output_sequence": "select _ from _ | select domesticloans , overseasloans from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_taxrate.*",
      "ed_taxrate.basiscode",
      "ed_taxrate.itemname",
      "ed_taxrate.effectivedate",
      "ed_taxrate.id",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.secumarket",
      "ed_taxrate.maturity",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.gdpgrowthyoy"
    ]
  },
  {
    "question": "What is the local fiscal revenue in Zhejiang Province in recent years?",
    "sql": "select localgovrevenue from ed_financialbalance where province = 'Zhejiang';",
    "norm_sql": "select localgovrevenue from ed_financialbalance where province = 'Zhejiang'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "province(province and city)",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "commercialtax(business tax revenue (in million of rmb))",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))",
          "id(record identifier)",
          "gnationaldefense(defense expenditure growth rate)"
        ],
        "column_names_original_en": [
          "province",
          "localgovrevenue",
          "commercialtax",
          "gfinancialrevenue",
          "centralgovexpenditure",
          "id",
          "gnationaldefense"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "commodity(product name)",
          "province(province and city)",
          "id(record identifier)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "eximvalueofgoods",
          "imvalueofgoods",
          "commodity",
          "province",
          "id",
          "gyoyofexvaluegoods",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)",
          "cumcpientertainmentservice(accumulated average of entertainment, education, cultural goods and services)",
          "yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year)",
          "yoycpicloth(clothing year-on-year)",
          "qoqcpicloth(clothing month-on-month)",
          "yoycpimedicare(medical care and personal care products year-on-year)",
          "cumcpitrafficcommunication(cumulative average of transportation and communication)"
        ],
        "column_names_original_en": [
          "yoycpifamilyequipmentservice",
          "cumcpientertainmentservice",
          "yoycpientertainmentservice",
          "yoycpicloth",
          "qoqcpicloth",
          "yoycpimedicare",
          "cumcpitrafficcommunication"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the local fiscal revenue in Zhejiang Province in recent years? | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).enddate(deadline) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year) , ed_consumerpriceindex(consumer price index).cumcpientertainmentservice(accumulated average of entertainment, education, cultural goods and services) , ed_consumerpriceindex(consumer price index).yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year) , ed_consumerpriceindex(consumer price index).yoycpicloth(clothing year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpicloth(clothing month-on-month) , ed_consumerpriceindex(consumer price index).yoycpimedicare(medical care and personal care products year-on-year) , ed_consumerpriceindex(consumer price index).cumcpitrafficcommunication(cumulative average of transportation and communication)",
    "output_sequence": "select _ from _ where _ | select localgovrevenue from ed_financialbalance where province = 'Zhejiang'",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.province",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.centralgovexpenditure",
      "ed_financialbalance.id",
      "ed_financialbalance.gnationaldefense",
      "ed_exportimport.*",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.commodity",
      "ed_exportimport.province",
      "ed_exportimport.id",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.enddate",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice",
      "ed_consumerpriceindex.cumcpientertainmentservice",
      "ed_consumerpriceindex.yoycpientertainmentservice",
      "ed_consumerpriceindex.yoycpicloth",
      "ed_consumerpriceindex.qoqcpicloth",
      "ed_consumerpriceindex.yoycpimedicare",
      "ed_consumerpriceindex.cumcpitrafficcommunication"
    ]
  },
  {
    "question": "Please help me search for the respective amounts of claims on central bank and liabilities to central bank in our other depository corporation's balance sheet",
    "sql": "select claimsoncentralbank, liabilitiestocentralbank from ed_otherdepositorycorpbs;",
    "norm_sql": "select claimsoncentralbank , liabilitiestocentralbank from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsoncentralbank(claims on central bank)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "paidincapital(paid-up capital)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "foreignassets(foreign net assets)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "transferabledeposits(transferable deposits)"
        ],
        "column_names_original_en": [
          "claimsoncentralbank",
          "liabilitiestocentralbank",
          "paidincapital",
          "claimsonotherdepositcorp",
          "foreignassets",
          "claimsonothernfinstitute",
          "transferabledeposits"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "basiscode(billing baseline)",
          "secumarket(securities market)",
          "typename(tax rate type)",
          "id(record identifier)",
          "maturity(repurchase period)",
          "valueceiling(maximum value (rmb))",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "basiscode",
          "secumarket",
          "typename",
          "id",
          "maturity",
          "valueceiling",
          "ratiofloor"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "reportarea(statistical area category)",
          "supportunderdevelopedarea(policy subsidy expenditure (in million of rmb))",
          "id(record identifier)",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))",
          "agriculturetax(agricultural tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "reportarea",
          "supportunderdevelopedarea",
          "id",
          "expenditurecitymc",
          "localgovexpenditure",
          "valueaddedtax",
          "agriculturetax"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me search for the respective amounts of claims on central bank and liabilities to central bank in our other depository corporation's balance sheet | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).supportunderdevelopedarea(policy subsidy expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb))",
    "output_sequence": "select _ from _ | select claimsoncentralbank , liabilitiestocentralbank from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_taxrate.*",
      "ed_taxrate.basiscode",
      "ed_taxrate.secumarket",
      "ed_taxrate.typename",
      "ed_taxrate.id",
      "ed_taxrate.maturity",
      "ed_taxrate.valueceiling",
      "ed_taxrate.ratiofloor",
      "ed_financialbalance.*",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.supportunderdevelopedarea",
      "ed_financialbalance.id",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.valueaddedtax",
      "ed_financialbalance.agriculturetax"
    ]
  },
  {
    "question": "How much is the accumulated deposit reserve in the balance sheet of China's financial institutions in terms of credit income and expenditure over the years?",
    "sql": "select reservedeposits from ed_chinafibalancesheetrmb;",
    "norm_sql": "select reservedeposits from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "reservedeposits(deposit of reserve funds)",
          "overseasloans((two) overseas loans)",
          "othersavings(other deposits)",
          "assetsatifo(asset in international financial institutions)",
          "mediumlongtermloans(medium-to-long term loans)",
          "moneyincirculation(currency in circulation)",
          "agriculturaldeposits(agricultural deposit)"
        ],
        "column_names_original_en": [
          "reservedeposits",
          "overseasloans",
          "othersavings",
          "assetsatifo",
          "mediumlongtermloans",
          "moneyincirculation",
          "agriculturaldeposits"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "gfinancialrevenue(fiscal revenue growth rate)",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "valueaddedtax(value added tax (in million of rmb))",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "centralgovrevenue(central fiscal revenue (in million of yuan))",
          "gtaxs(various tax revenues growth rate)"
        ],
        "column_names_original_en": [
          "gfinancialrevenue",
          "expenditurecitymc",
          "gfinancialexpenditure",
          "valueaddedtax",
          "operatingexpensescesh",
          "centralgovrevenue",
          "gtaxs"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "secondindustrygdp(the second industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "enddate(deadline)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "gdp(gross domestic product (in million of rmb).)"
        ],
        "column_names_original_en": [
          "secondindustrygdp",
          "gdppercapita",
          "enddate",
          "thirdindustrygdp",
          "primaryindustrygdp",
          "gdpgrowthyoy",
          "gdp"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How much is the accumulated deposit reserve in the balance sheet of China's financial institutions in terms of credit income and expenditure over the years? | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).centralgovrevenue(central fiscal revenue (in million of yuan)) , ed_financialbalance(government revenue and expenditure).gtaxs(various tax revenues growth rate) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).)",
    "output_sequence": "select _ from _ | select reservedeposits from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_financialbalance.*",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.valueaddedtax",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.centralgovrevenue",
      "ed_financialbalance.gtaxs",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.gdp"
    ]
  },
  {
    "question": "Can you show me the value of \"Agricultural and sideline food processing industry\" in the \"National Economic Sector Index\" for the \"same month of the previous year\"?",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod ='same month of the previous year' and indextype ='National Economic Sector Index' and indexname ='Agricultural and sideline food processing industry';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'same month of the previous year' and indextype = 'National Economic Sector Index' and indexname = 'Agricultural and sideline food processing industry'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "id",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "commercialtax(business tax revenue (in million of rmb))",
          "reportarea(statistical area category)",
          "valueaddedtax(value added tax (in million of rmb))",
          "supportunderdevelopedarea(policy subsidy expenditure (in million of rmb))",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "agriculturetax(agricultural tax (in million of rmb))",
          "centralgovrevenue(central fiscal revenue (in million of yuan))"
        ],
        "column_names_original_en": [
          "commercialtax",
          "reportarea",
          "valueaddedtax",
          "supportunderdevelopedarea",
          "expenditurecitymc",
          "agriculturetax",
          "centralgovrevenue"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "commodity(product name)",
          "imvalueofgoods(total import amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "gyoyofexvaluegoods",
          "gyoyofimvaluegoods",
          "id",
          "reportperiod",
          "eximvalueofgoods",
          "commodity",
          "imvalueofgoods"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you show me the value of \"Agricultural and sideline food processing industry\" in the \"National Economic Sector Index\" for the \"same month of the previous year\"? | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).supportunderdevelopedarea(policy subsidy expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).centralgovrevenue(central fiscal revenue (in million of yuan)) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars))",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'same month of the previous year' and indextype = 'National Economic Sector Index' and indexname = 'Agricultural and sideline food processing industry'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_financialbalance.*",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.valueaddedtax",
      "ed_financialbalance.supportunderdevelopedarea",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.centralgovrevenue",
      "ed_exportimport.*",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.id",
      "ed_exportimport.reportperiod",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.commodity",
      "ed_exportimport.imvalueofgoods"
    ]
  },
  {
    "question": "Please list our tax rate categories.",
    "sql": "select typename from ed_taxrate;",
    "norm_sql": "select typename from ed_taxrate",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "valueceiling(maximum value (rmb))",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)",
          "itemname(tax rate items)",
          "valuefloor(minimum value/starting point (rmb))",
          "ratioceiling(maximum ratio (%))",
          "typename(tax rate type)"
        ],
        "column_names_original_en": [
          "valueceiling",
          "ratiofloor",
          "effectivedate",
          "itemname",
          "valuefloor",
          "ratioceiling",
          "typename"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "gtaxs(various tax revenues growth rate)",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))",
          "enddate(deadline)",
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "commercialtax(business tax revenue (in million of rmb))",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "nationaldefense(defense expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "gtaxs",
          "centralgovexpenditure",
          "enddate",
          "gfinancialexpenditure",
          "commercialtax",
          "localgovexpenditure",
          "nationaldefense"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indexvalue(index value)",
          "indextitle(index name)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "indextitle",
          "id",
          "reportperiod",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list our tax rate categories. | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).typename(tax rate type) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).gtaxs(various tax revenues growth rate) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline)",
    "output_sequence": "select _ from _ | select typename from ed_taxrate",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.valueceiling",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.effectivedate",
      "ed_taxrate.itemname",
      "ed_taxrate.valuefloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.typename",
      "ed_financialbalance.*",
      "ed_financialbalance.gtaxs",
      "ed_financialbalance.centralgovexpenditure",
      "ed_financialbalance.enddate",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.nationaldefense",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.enddate"
    ]
  },
  {
    "question": "What is the minimum threshold value for \"Securities Transaction Stamp Tax\" in \"A shares\"?",
    "sql": "select valuefloor from ed_taxrate where typename ='A shares' and itemname = 'Securities Transaction Stamp Tax';",
    "norm_sql": "select valuefloor from ed_taxrate where typename = 'A shares' and itemname = 'Securities Transaction Stamp Tax'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "valuefloor(minimum value/starting point (rmb))",
          "secumarket(securities market)",
          "ratiofloor(minimum ratio (%))",
          "id(record identifier)",
          "valueceiling(maximum value (rmb))"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "valuefloor",
          "secumarket",
          "ratiofloor",
          "id",
          "valueceiling"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "id(record identifier)",
          "enddate(deadline)",
          "comparetolastmonth(index month-on-month change (points))",
          "reportperiod(data statistical period)",
          "reportarea(statistical region category)",
          "indexvalue(index value)",
          "indextitle(index name)"
        ],
        "column_names_original_en": [
          "id",
          "enddate",
          "comparetolastmonth",
          "reportperiod",
          "reportarea",
          "indexvalue",
          "indextitle"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "indexname",
          "reportperiod",
          "id",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the minimum threshold value for \"Securities Transaction Stamp Tax\" in \"A shares\"? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).indextitle(index name) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline)",
    "output_sequence": "select _ from _ where _ | select valuefloor from ed_taxrate where typename = 'A shares' and itemname = 'Securities Transaction Stamp Tax'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.valuefloor",
      "ed_taxrate.secumarket",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.id",
      "ed_taxrate.valueceiling",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.indextitle",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.enddate"
    ]
  },
  {
    "question": "Please check the annual \"end-of-period cumulative\" amount of newly added RMB loans in the year 2000.",
    "sql": "select enddate, subjectsum from ed_newincreasingloan where reportperiod = 'End-of-Period Cumulative' and strftime('%Y', enddate) = '2000';",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'End-of-Period Cumulative' and strftime ( '%Y' , enddate ) = '2000'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "id(record identifier)",
          "subjectname(indicator name)",
          "yoy(year-on-year increase or decrease (%))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "subjectsum",
          "id",
          "subjectname",
          "yoy"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexname(index name)",
          "id(record identifier)",
          "indexvalue(index value (points))",
          "enddate(deadline)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indexname",
          "id",
          "indexvalue",
          "enddate",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indexvalue(index)",
          "enddate(deadline)",
          "id(record identifier)",
          "indexname(index name)",
          "indextype(index category)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indexvalue",
          "enddate",
          "id",
          "indexname",
          "indextype"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please check the annual \"end-of-period cumulative\" amount of newly added RMB loans in the year 2000. | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indextype(index category)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = _ | select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'End-of-Period Cumulative' and strftime ( '%Y' , enddate ) = '2000'",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.yoy",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.reportperiod",
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indextype"
    ]
  },
  {
    "question": "I heard that we have a lot of data in our database, so please show the detailed data of bonds and central bank bonds for the year 2015.",
    "sql": "select bonds, centralbankbonds from ed_chinamoneyandbanking where strftime('%Y', enddate)='2015';",
    "norm_sql": "select bonds , centralbankbonds from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = '2015'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "bonds(bonds)",
          "centralbankbonds(central bank bonds)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "netabroadassets(foreign net assets)",
          "money1(currency (narrow money m1))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "bonds",
          "centralbankbonds",
          "claimstospecificsavingorg",
          "netabroadassets",
          "money1",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "gnationaldefense(defense expenditure growth rate)",
          "gsocialsecurity(social security expenditure growth rate)",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "individualincometax(personal income tax (in million of rmb))",
          "gtaxs(various tax revenues growth rate)",
          "socialsecurity(social security expenditure (in million of rmb))",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "gnationaldefense",
          "gsocialsecurity",
          "localgovrevenue",
          "individualincometax",
          "gtaxs",
          "socialsecurity",
          "expenditurecitymc"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "commodity(product name)",
          "sovereigntycountry(the subject country)",
          "province(province and city)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "id(record identifier)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "commodity",
          "sovereigntycountry",
          "province",
          "exvalueofgoods",
          "gyoyofeximvaluegoods",
          "id",
          "gyoyofimvaluegoods"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I heard that we have a lot of data in our database, so please show the detailed data of bonds and central bank bonds for the year 2015. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).gsocialsecurity(social security expenditure growth rate) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gtaxs(various tax revenues growth rate) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease)",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select bonds , centralbankbonds from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = '2015'",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_financialbalance.*",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.gsocialsecurity",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.individualincometax",
      "ed_financialbalance.gtaxs",
      "ed_financialbalance.socialsecurity",
      "ed_financialbalance.expenditurecitymc",
      "ed_exportimport.*",
      "ed_exportimport.commodity",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.province",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.id",
      "ed_exportimport.gyoyofimvaluegoods"
    ]
  },
  {
    "question": "Can you query the specific amounts of foreign assets, reserve assets, foreign liabilities, and bond issues in the balance sheet of other deposit-type financial institutions?",
    "sql": "select foreignassets, reserveassets, foreignliabilities, bondissue from ed_otherdepositorycorpbs;",
    "norm_sql": "select foreignassets , reserveassets , foreignliabilities , bondissue from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "foreignassets(foreign net assets)",
          "reserveassets(reserve assets)",
          "foreignliabilities(foreign liabilities)",
          "bondissue(bond issuance)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "paidincapital(paid-up capital)"
        ],
        "column_names_original_en": [
          "foreignassets",
          "reserveassets",
          "foreignliabilities",
          "bondissue",
          "claimsonotherfinstitute",
          "liabtootherfinancialcorp",
          "paidincapital"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "cumcpitobacco(cumulative average of tobacco, alcohol, and supplies)",
          "cumcpicloth(cumulative average of clothing)",
          "qoqcpicloth(clothing month-on-month)",
          "cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services)",
          "qoqcpimedicare(healthcare and personal care products month-on-month)",
          "id(record identifier)",
          "cumcpitrafficcommunication(cumulative average of transportation and communication)"
        ],
        "column_names_original_en": [
          "cumcpitobacco",
          "cumcpicloth",
          "qoqcpicloth",
          "cumcpifamilyequipmentservice",
          "qoqcpimedicare",
          "id",
          "cumcpitrafficcommunication"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "reportarea(statistical region category)",
          "province(province and city)",
          "enddate(deadline)",
          "rmbloans(rmb loans (in 100 million rmb))",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "corporatebonds(corporate bonds (in hundred million rmb))"
        ],
        "column_names_original_en": [
          "reportarea",
          "province",
          "enddate",
          "rmbloans",
          "socialfinancing",
          "undiscountedbacceptances",
          "corporatebonds"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you query the specific amounts of foreign assets, reserve assets, foreign liabilities, and bond issues in the balance sheet of other deposit-type financial institutions? | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).cumcpitobacco(cumulative average of tobacco, alcohol, and supplies) , ed_consumerpriceindex(consumer price index).cumcpicloth(cumulative average of clothing) , ed_consumerpriceindex(consumer price index).qoqcpicloth(clothing month-on-month) , ed_consumerpriceindex(consumer price index).cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services) , ed_consumerpriceindex(consumer price index).qoqcpimedicare(healthcare and personal care products month-on-month) , ed_consumerpriceindex(consumer price index).id(record identifier) , ed_consumerpriceindex(consumer price index).cumcpitrafficcommunication(cumulative average of transportation and communication) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb))",
    "output_sequence": "select _ from _ | select foreignassets , reserveassets , foreignliabilities , bondissue from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.foreignliabilities",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.cumcpitobacco",
      "ed_consumerpriceindex.cumcpicloth",
      "ed_consumerpriceindex.qoqcpicloth",
      "ed_consumerpriceindex.cumcpifamilyequipmentservice",
      "ed_consumerpriceindex.qoqcpimedicare",
      "ed_consumerpriceindex.id",
      "ed_consumerpriceindex.cumcpitrafficcommunication",
      "ed_socialfinancing.*",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.province",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.corporatebonds"
    ]
  },
  {
    "question": "Please briefly list the trade amount of various units in our country, such as state-owned units and collective units.",
    "sql": "select stateownedunits, collectiveunits from ed_retailvalueofscgoods ;",
    "norm_sql": "select stateownedunits , collectiveunits from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "stateownedunits(state-owned unit)",
          "collectiveunits(collective unit)",
          "othersunits(other units)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "province(province and city)",
          "reportperiod(data statistical period)",
          "foodbeverage(catering industry)"
        ],
        "column_names_original_en": [
          "stateownedunits",
          "collectiveunits",
          "othersunits",
          "wholesaleretailtrade",
          "province",
          "reportperiod",
          "foodbeverage"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indexvalue(index value)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "id",
          "reportperiod",
          "indextitle",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indextype(index category)",
          "indexname(index name)",
          "id(record identifier)",
          "indexvalue(index)",
          "reportperiod(data statistical period)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indextype",
          "indexname",
          "id",
          "indexvalue",
          "reportperiod",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please briefly list the trade amount of various units in our country, such as state-owned units and collective units. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).enddate(deadline)",
    "output_sequence": "select _ from _ | select stateownedunits , collectiveunits from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.foodbeverage",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.enddate",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.enddate"
    ]
  },
  {
    "question": "What was the GDP of each province and city last year?",
    "sql": "select province, gdp from ed_grossdomesticproduct where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year'));",
    "norm_sql": "select province , gdp from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "gdp(gross domestic product (in million of rmb).)",
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "thirdindustrygdp",
          "gdp",
          "enddate",
          "id",
          "province",
          "gdpgrowthyoy",
          "secondindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "selfemployed(individual unit)",
          "belowcounty(county and below)",
          "county(county)",
          "reportperiod(data statistical period)",
          "stateownedunits(state-owned unit)",
          "othersunits(other units)",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "selfemployed",
          "belowcounty",
          "county",
          "reportperiod",
          "stateownedunits",
          "othersunits",
          "province"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "province(province and city)",
          "enddate(deadline)",
          "supportunderdevelopedarea(policy subsidy expenditure (in million of rmb))",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "nationaldefense(defense expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "gfinancialexpenditure",
          "localgovrevenue",
          "province",
          "enddate",
          "supportunderdevelopedarea",
          "operatingexpensescesh",
          "nationaldefense"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What was the GDP of each province and city last year? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).supportunderdevelopedarea(policy subsidy expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) | select province , gdp from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.province",
      "ed_financialbalance.*",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.province",
      "ed_financialbalance.enddate",
      "ed_financialbalance.supportunderdevelopedarea",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.nationaldefense"
    ]
  },
  {
    "question": "What is the total value of import and export goods in our country as well as the year-on-year growth rate?",
    "sql": "select eximvalueofgoods, gyoyofeximvaluegoods from ed_exportimport;",
    "norm_sql": "select eximvalueofgoods , gyoyofeximvaluegoods from ed_exportimport",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "commodity(product name)",
          "reportperiod(data statistical period)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "enddate(deadline)",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "eximvalueofgoods",
          "gyoyofeximvaluegoods",
          "commodity",
          "reportperiod",
          "imvalueofgoods",
          "enddate",
          "province"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "claimstononfinancialinst(claims on the non-financial sector)",
          "fcdeposits(foreign currency deposit.)",
          "id(record identifier)",
          "bonds(bonds)",
          "quasimoney(quasi-currency)",
          "domesticloans(domestic credit)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)"
        ],
        "column_names_original_en": [
          "claimstononfinancialinst",
          "fcdeposits",
          "id",
          "bonds",
          "quasimoney",
          "domesticloans",
          "claimstospecificsavingorg"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "indexcode(index code)",
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "indexvalue(index value)",
          "enddate(deadline)",
          "comparetolastmonth(index month-on-month change (points))",
          "reportarea(statistical region category)"
        ],
        "column_names_original_en": [
          "indexcode",
          "reportperiod",
          "indextitle",
          "indexvalue",
          "enddate",
          "comparetolastmonth",
          "reportarea"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the total value of import and export goods in our country as well as the year-on-year growth rate? | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).province(province and city) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category)",
    "output_sequence": "select _ from _ | select eximvalueofgoods , gyoyofeximvaluegoods from ed_exportimport",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.commodity",
      "ed_exportimport.reportperiod",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.enddate",
      "ed_exportimport.province",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.reportarea"
    ]
  },
  {
    "question": "Please count the total retail sales of consumer goods in Beijing over the years.",
    "sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province ='Beijing';",
    "norm_sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Beijing'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "province(province and city)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "belowcounty(county and below)",
          "reportarea(statistical category of region)",
          "selfemployed(individual unit)",
          "county(county)"
        ],
        "column_names_original_en": [
          "province",
          "retailvalueofscgoods",
          "wholesaleretailtrade",
          "belowcounty",
          "reportarea",
          "selfemployed",
          "county"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indexvalue(index value)",
          "id(record identifier)",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indextitle(index name)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "id",
          "enddate",
          "reportperiod",
          "indextitle"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indextype(index category)",
          "indexvalue(index)",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "enddate(deadline)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "indextype",
          "indexvalue",
          "reportperiod",
          "id",
          "enddate",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please count the total retail sales of consumer goods in Beijing over the years. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexname(index name)",
    "output_sequence": "select _ from _ where _ | select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Beijing'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.county",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexname"
    ]
  },
  {
    "question": "Please check the data of retail value of social consumer goods for state-owned units in our country in recent years.",
    "sql": "select stateownedunits from ed_retailvalueofscgoods;",
    "norm_sql": "select stateownedunits from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "stateownedunits(state-owned unit)",
          "city(city)",
          "reportperiod(data statistical period)",
          "collectiveunits(collective unit)",
          "othersindustry(other industries)",
          "selfemployed(individual unit)",
          "county(county)"
        ],
        "column_names_original_en": [
          "stateownedunits",
          "city",
          "reportperiod",
          "collectiveunits",
          "othersindustry",
          "selfemployed",
          "county"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "indexvalue(index value (points))",
          "indexname(index name)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "id",
          "indexvalue",
          "indexname",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "valueceiling(maximum value (rmb))",
          "ratioceiling(maximum ratio (%))",
          "valuefloor(minimum value/starting point (rmb))",
          "maturity(repurchase period)",
          "basiscode(billing baseline)",
          "typename(tax rate type)",
          "itemname(tax rate items)"
        ],
        "column_names_original_en": [
          "valueceiling",
          "ratioceiling",
          "valuefloor",
          "maturity",
          "basiscode",
          "typename",
          "itemname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please check the data of retail value of social consumer goods for state-owned units in our country in recent years. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).itemname(tax rate items)",
    "output_sequence": "select _ from _ | select stateownedunits from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.county",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.enddate",
      "ed_taxrate.*",
      "ed_taxrate.valueceiling",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valuefloor",
      "ed_taxrate.maturity",
      "ed_taxrate.basiscode",
      "ed_taxrate.typename",
      "ed_taxrate.itemname"
    ]
  },
  {
    "question": "Please check: When our foreign currency deposits exceed 10 million yuan in total, how much is the total value of central bank bonds and bonds respectively?",
    "sql": "select centralbankbonds, bonds from ed_chinamoneyandbanking where fcdeposits > 1000000;",
    "norm_sql": "select centralbankbonds , bonds from ed_chinamoneyandbanking where fcdeposits > 1000000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpifood(food year-on-year)",
          "qoqcpihousing(residential month-to-month)",
          "qoqcpitobacco(tobacco, alcohol, and supplies month-on-month)",
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)",
          "qoqcpitrafficcommunication(transportation and communication month-on-month)",
          "yoycpi(resident consumer price index (year-on-year))",
          "qoqcpifamilyequipmentservice(household equipment and services month-on-month)"
        ],
        "column_names_original_en": [
          "yoycpifood",
          "qoqcpihousing",
          "qoqcpitobacco",
          "yoycpifamilyequipmentservice",
          "qoqcpitrafficcommunication",
          "yoycpi",
          "qoqcpifamilyequipmentservice"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "province(province and city)",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "creditloans(trust loan (in 100 million rmb))",
          "entrustedloans(trust loan (in 100 million of rmb))",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "reportperiod(data statistics interval)"
        ],
        "column_names_original_en": [
          "province",
          "socialfinancing",
          "corporatebonds",
          "creditloans",
          "entrustedloans",
          "definancingofnonfe",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "fcdeposits(foreign currency deposit.)",
          "bonds(bonds)",
          "centralbankbonds(central bank bonds)",
          "enddate(deadline)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "money1(currency (narrow money m1))",
          "domesticloans(domestic credit)"
        ],
        "column_names_original_en": [
          "fcdeposits",
          "bonds",
          "centralbankbonds",
          "enddate",
          "claimstononfinancialinst",
          "money1",
          "domesticloans"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please check: When our foreign currency deposits exceed 10 million yuan in total, how much is the total value of central bank bonds and bonds respectively? | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpihousing(residential month-to-month) , ed_consumerpriceindex(consumer price index).qoqcpitobacco(tobacco, alcohol, and supplies month-on-month) , ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpitrafficcommunication(transportation and communication month-on-month) , ed_consumerpriceindex(consumer price index).yoycpi(resident consumer price index (year-on-year)) , ed_consumerpriceindex(consumer price index).qoqcpifamilyequipmentservice(household equipment and services month-on-month) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit)",
    "output_sequence": "select _ from _ where _ | select centralbankbonds , bonds from ed_chinamoneyandbanking where fcdeposits > 1000000",
    "tc_original": [
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpifood",
      "ed_consumerpriceindex.qoqcpihousing",
      "ed_consumerpriceindex.qoqcpitobacco",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice",
      "ed_consumerpriceindex.qoqcpitrafficcommunication",
      "ed_consumerpriceindex.yoycpi",
      "ed_consumerpriceindex.qoqcpifamilyequipmentservice",
      "ed_socialfinancing.*",
      "ed_socialfinancing.province",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.creditloans",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.reportperiod",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.domesticloans"
    ]
  },
  {
    "question": "What type of index does the \"Metal Products Industry\" belong to? Also, check its related statistical period and index value.",
    "sql": "select reportperiod, indextype, indexvalue from ed_producerpiformp where indexname ='Metal Products Industry';",
    "norm_sql": "select reportperiod , indextype , indexvalue from ed_producerpiformp where indexname = 'Metal Products Industry'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "id",
          "enddate"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indexvalue(index value (points))"
        ],
        "column_names_original_en": [
          "id",
          "enddate",
          "reportperiod",
          "indexname",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "gdp(gross domestic product (in million of rmb).)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "province(province and city)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "thirdindustrygdp",
          "primaryindustrygdp",
          "gdp",
          "secondindustrygdp",
          "province",
          "gdppercapita",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What type of index does the \"Metal Products Industry\" belong to? Also, check its related statistical period and index value. | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline)",
    "output_sequence": "select _ from _ where _ | select reportperiod , indextype , indexvalue from ed_producerpiformp where indexname = 'Metal Products Industry'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.indexvalue",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.enddate"
    ]
  },
  {
    "question": "What is the threshold of \"handling fee\" for \"corporate bonds\" and how many days is the repurchase period?",
    "sql": "select valuefloor, maturity from ed_taxrate where typename = 'corporate bonds' and itemname = 'handling fee';",
    "norm_sql": "select valuefloor , maturity from ed_taxrate where typename = 'corporate bonds' and itemname = 'handling fee'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "basiscode(billing baseline)",
          "valuefloor(minimum value/starting point (rmb))",
          "ratiofloor(minimum ratio (%))",
          "id(record identifier)",
          "typename(tax rate type)",
          "maturity(repurchase period)"
        ],
        "column_names_original_en": [
          "itemname",
          "basiscode",
          "valuefloor",
          "ratiofloor",
          "id",
          "typename",
          "maturity"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "id(record identifier)",
          "indexname(index name)",
          "enddate(deadline)",
          "indextype(index category)",
          "reportperiod(data statistical period)",
          "indexvalue(index)"
        ],
        "column_names_original_en": [
          "id",
          "indexname",
          "enddate",
          "indextype",
          "reportperiod",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "entrustedloans(trust loan (in 100 million of rmb))",
          "creditloans(trust loan (in 100 million rmb))",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "rmbloans(rmb loans (in 100 million rmb))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "socialfinancing",
          "corporatebonds",
          "entrustedloans",
          "creditloans",
          "foreigncurrencyloans",
          "rmbloans",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the threshold of \"handling fee\" for \"corporate bonds\" and how many days is the repurchase period? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).maturity(repurchase period) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexvalue(index) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline)",
    "output_sequence": "select _ from _ where _ | select valuefloor , maturity from ed_taxrate where typename = 'corporate bonds' and itemname = 'handling fee'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.basiscode",
      "ed_taxrate.valuefloor",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.id",
      "ed_taxrate.typename",
      "ed_taxrate.maturity",
      "ed_producerpiformp.*",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexvalue",
      "ed_socialfinancing.*",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.creditloans",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.enddate"
    ]
  },
  {
    "question": "Is it possible to find records of self-owned funds and government deposits in the balance sheet of the monetary authority?",
    "sql": "select selfownedmoney, governmentsavings from ed_moneyauthoritybs;",
    "norm_sql": "select selfownedmoney , governmentsavings from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "selfownedmoney(own funds (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))"
        ],
        "column_names_original_en": [
          "claimtootherfinnonfininst",
          "selfownedmoney",
          "claimtogovernment",
          "abroadliability",
          "claimtosavingsbanks",
          "forex",
          "governmentsavings"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "shorttermloans(short-term loan)",
          "currencyname(currency unit code)",
          "enddate(deadline)",
          "othersavings(other deposits)",
          "equityandotherinvestment(securities and investments)",
          "totalsavings(all deposit accounts)",
          "assetsatifo(asset in international financial institutions)"
        ],
        "column_names_original_en": [
          "shorttermloans",
          "currencyname",
          "enddate",
          "othersavings",
          "equityandotherinvestment",
          "totalsavings",
          "assetsatifo"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "enterpriseincometax(enterprise income tax (in million of rmb))",
          "salestax(business tax (in million of rmb))",
          "gsocialsecurity(social security expenditure growth rate)",
          "genterpriseincome(enterprise revenue growth rate)",
          "gnationaldefense(defense expenditure growth rate)",
          "socialsecurity(social security expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "expenditurecitymc",
          "enterpriseincometax",
          "salestax",
          "gsocialsecurity",
          "genterpriseincome",
          "gnationaldefense",
          "socialsecurity"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Is it possible to find records of self-owned funds and government deposits in the balance sheet of the monetary authority? | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gsocialsecurity(social security expenditure growth rate) , ed_financialbalance(government revenue and expenditure).genterpriseincome(enterprise revenue growth rate) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb))",
    "output_sequence": "select _ from _ | select selfownedmoney , governmentsavings from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_financialbalance.*",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.enterpriseincometax",
      "ed_financialbalance.salestax",
      "ed_financialbalance.gsocialsecurity",
      "ed_financialbalance.genterpriseincome",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.socialsecurity"
    ]
  },
  {
    "question": "How is the record of China's GDP over the years?",
    "sql": "select gdp from ed_grossdomesticproduct;",
    "norm_sql": "select gdp from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdp(gross domestic product (in million of rmb).)",
          "id(record identifier)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "enddate(deadline)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "gdp",
          "id",
          "gdpgrowthyoy",
          "thirdindustrygdp",
          "enddate",
          "secondindustrygdp",
          "province"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "gsupportunderdevelopedarea(policy subsidy expenditure growth rate)",
          "centralgovrevenue(central fiscal revenue (in million of yuan))",
          "individualincometax(personal income tax (in million of rmb))",
          "gnationaldefense(defense expenditure growth rate)",
          "socialsecurity(social security expenditure (in million of rmb))",
          "province(province and city)",
          "gfinancialexpenditure(fiscal expenditure growth rate)"
        ],
        "column_names_original_en": [
          "gsupportunderdevelopedarea",
          "centralgovrevenue",
          "individualincometax",
          "gnationaldefense",
          "socialsecurity",
          "province",
          "gfinancialexpenditure"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "comparetolastmonth(index month-on-month change (points))",
          "indexcode(index code)",
          "indexvalue(index value)",
          "indextitle(index name)",
          "reportarea(statistical region category)",
          "reportperiod(data statistical period)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "comparetolastmonth",
          "indexcode",
          "indexvalue",
          "indextitle",
          "reportarea",
          "reportperiod",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How is the record of China's GDP over the years? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).gsupportunderdevelopedarea(policy subsidy expenditure growth rate) , ed_financialbalance(government revenue and expenditure).centralgovrevenue(central fiscal revenue (in million of yuan)) , ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).enddate(deadline)",
    "output_sequence": "select _ from _ | select gdp from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_financialbalance.*",
      "ed_financialbalance.gsupportunderdevelopedarea",
      "ed_financialbalance.centralgovrevenue",
      "ed_financialbalance.individualincometax",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.socialsecurity",
      "ed_financialbalance.province",
      "ed_financialbalance.gfinancialexpenditure",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.enddate"
    ]
  },
  {
    "question": "Xiao Li, help me query how many different index names we have in each index type.",
    "sql": "select indextype, count(distinct indexname) from ed_producerpiformp group by indextype;",
    "norm_sql": "select indextype , count ( distinct indexname ) from ed_producerpiformp group by indextype",
    "sql_skeleton": "select _ , count ( distinct _ ) from _ group by _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indextype(index category)",
          "indexname(index name)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexvalue(index)"
        ],
        "column_names_original_en": [
          "indextype",
          "indexname",
          "id",
          "reportperiod",
          "enddate",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indexvalue(index value)",
          "indextitle(index name)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "indextitle",
          "id",
          "reportperiod",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "otherforeignassets(other foreign assets (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))",
          "id(record identifier)",
          "governmentsavings(government deposits (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))"
        ],
        "column_names_original_en": [
          "otherforeignassets",
          "moneyreserves",
          "claimtononfinancialinst",
          "bondissuance",
          "id",
          "governmentsavings",
          "moneyissuance"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Xiao Li, help me query how many different index names we have in each index type. | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb))",
    "output_sequence": "select _ , count ( distinct _ ) from _ group by _ | select indextype , count ( distinct indexname ) from ed_producerpiformp group by indextype",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.enddate",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.moneyissuance"
    ]
  },
  {
    "question": "What is the amount of foreign assets in the balance sheet of other depository corporates?",
    "sql": "select foreignassets from ed_otherdepositorycorpbs;",
    "norm_sql": "select foreignassets from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "otherassets(other assets)",
          "foreignassets(foreign net assets)",
          "transferabledeposits(transferable deposits)",
          "savingdeposits(resident savings deposits)",
          "paidincapital(paid-up capital)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "claimsonotherdepositcorp",
          "otherassets",
          "foreignassets",
          "transferabledeposits",
          "savingdeposits",
          "paidincapital",
          "id"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "financialbonds(financial bonds)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "othersavings(other deposits)",
          "currencyname(currency unit code)",
          "moneyincirculation(currency in circulation)",
          "assetsatifo(asset in international financial institutions)",
          "shorttermloans(short-term loan)"
        ],
        "column_names_original_en": [
          "financialbonds",
          "trustedandcreditdeposits",
          "othersavings",
          "currencyname",
          "moneyincirculation",
          "assetsatifo",
          "shorttermloans"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "valuefloor(minimum value/starting point (rmb))",
          "secumarket(securities market)",
          "valueceiling(maximum value (rmb))",
          "ratioceiling(maximum ratio (%))",
          "typename(tax rate type)",
          "effectivedate(effective date)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "valuefloor",
          "secumarket",
          "valueceiling",
          "ratioceiling",
          "typename",
          "effectivedate",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the amount of foreign assets in the balance sheet of other depository corporates? | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).id(record identifier)",
    "output_sequence": "select _ from _ | select foreignassets from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.otherassets",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_otherdepositorycorpbs.id",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_taxrate.*",
      "ed_taxrate.valuefloor",
      "ed_taxrate.secumarket",
      "ed_taxrate.valueceiling",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.typename",
      "ed_taxrate.effectivedate",
      "ed_taxrate.id"
    ]
  },
  {
    "question": "What is the \"period-end cumulative\" sales value of social consumer goods for the wholesale and retail trade, and catering industry in Beijing over the years?",
    "sql": "select wholesaleretailtrade, foodbeverage from ed_retailvalueofscgoods where province ='Beijing' and reportperiod ='period-end cumulative';",
    "norm_sql": "select wholesaleretailtrade , foodbeverage from ed_retailvalueofscgoods where province = 'Beijing' and reportperiod = 'period-end cumulative'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "province(province and city)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "foodbeverage(catering industry)",
          "collectiveunits(collective unit)",
          "othersindustry(other industries)",
          "city(city)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "province",
          "wholesaleretailtrade",
          "foodbeverage",
          "collectiveunits",
          "othersindustry",
          "city"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "claimsongovernment(claims on government (net))",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "id(record identifier)",
          "depositswithcentralbank(reserve deposit)",
          "enddate(deadline)",
          "timedeposits(fixed deposit for enterprises)"
        ],
        "column_names_original_en": [
          "depositsincludedinm2",
          "claimsongovernment",
          "claimsonothernfinstitute",
          "id",
          "depositswithcentralbank",
          "enddate",
          "timedeposits"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "enddate(deadline)",
          "reportarea(statistical category of the region)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "reportperiod(data statistical period)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "id(record identifier)",
          "commodity(product name)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportarea",
          "gyoyofimvaluegoods",
          "reportperiod",
          "exvalueofgoods",
          "id",
          "commodity"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the \"period-end cumulative\" sales value of social consumer goods for the wholesale and retail trade, and catering industry in Beijing over the years? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).commodity(product name)",
    "output_sequence": "select _ from _ where _ | select wholesaleretailtrade , foodbeverage from ed_retailvalueofscgoods where province = 'Beijing' and reportperiod = 'period-end cumulative'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.city",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_exportimport.*",
      "ed_exportimport.enddate",
      "ed_exportimport.reportarea",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.reportperiod",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.id",
      "ed_exportimport.commodity"
    ]
  },
  {
    "question": "Please check the annual industrial production value of light and heavy industries in the \"National\" \"State-owned and large-scale industrial enterprises\" last year.",
    "sql": "select livalueap, hivalueap from ed_industryproduction  where reportarea ='National' and statstandard ='State-owned and large-scale industrial enterprises' and reportperiod ='Annual' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year'));",
    "norm_sql": "select livalueap , hivalueap from ed_industryproduction where reportarea = 'National' and statstandard = 'State-owned and large-scale industrial enterprises' and reportperiod = 'Annual' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "livalueap(light industry (in million of rmb))",
          "hivalueap(heavy industry (in million of rmb))",
          "largecomap(large-scale enterprise (light industry))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportarea",
          "reportperiod",
          "statstandard",
          "livalueap",
          "hivalueap",
          "largecomap"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "domesticloans((one) domestic loan)",
          "agriculturaldeposits(agricultural deposit)",
          "totalloans(various loans)",
          "datatype(data type code)",
          "savingsdeposits(savings deposits)",
          "currencyname(currency unit code)",
          "totalsavings(all deposit accounts)"
        ],
        "column_names_original_en": [
          "domesticloans",
          "agriculturaldeposits",
          "totalloans",
          "datatype",
          "savingsdeposits",
          "currencyname",
          "totalsavings"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indexvalue(index value)",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "indextitle(index name)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "enddate",
          "reportperiod",
          "id",
          "indextitle"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please check the annual industrial production value of light and heavy industries in the \"National\" \"State-owned and large-scale industrial enterprises\" last year. | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select livalueap , hivalueap from ed_industryproduction where reportarea = 'National' and statstandard = 'State-owned and large-scale industrial enterprises' and reportperiod = 'Annual' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.largecomap",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.totalsavings",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.indextitle"
    ]
  },
  {
    "question": "What are the amounts of urban maintenance and construction fees and fees for education, science, and health in Beijing in 2008?",
    "sql": "select expenditurecitymc, operatingexpensescesh from ed_financialbalance where province ='Beijing' and strftime('%Y', enddate)='2008';",
    "norm_sql": "select expenditurecitymc , operatingexpensescesh from ed_financialbalance where province = 'Beijing' and strftime ( '%Y' , enddate ) = '2008'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "province(province and city)",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "commercialtax(business tax revenue (in million of rmb))",
          "gnationaldefense(defense expenditure growth rate)",
          "enterpriseincometax(enterprise income tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "expenditurecitymc",
          "operatingexpensescesh",
          "commercialtax",
          "gnationaldefense",
          "enterpriseincometax"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "claimsoncentralbank(claims on central bank)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "enddate(deadline)",
          "claimsongovernment(claims on government (net))",
          "totalliabilities(total liabilities)",
          "reserveassets(reserve assets)"
        ],
        "column_names_original_en": [
          "liabilitiestonfinst",
          "claimsoncentralbank",
          "liabtootherfinancialcorp",
          "enddate",
          "claimsongovernment",
          "totalliabilities",
          "reserveassets"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "reportarea(statistical region category)",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "rmbloans(rmb loans (in 100 million rmb))",
          "province(province and city)",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "reportperiod(data statistics interval)",
          "creditloans(trust loan (in 100 million rmb))"
        ],
        "column_names_original_en": [
          "reportarea",
          "foreigncurrencyloans",
          "rmbloans",
          "province",
          "socialfinancing",
          "reportperiod",
          "creditloans"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the amounts of urban maintenance and construction fees and fees for education, science, and health in Beijing in 2008? | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = _ | select expenditurecitymc , operatingexpensescesh from ed_financialbalance where province = 'Beijing' and strftime ( '%Y' , enddate ) = '2008'",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.province",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.enterpriseincometax",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_socialfinancing.*",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.province",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.creditloans"
    ]
  },
  {
    "question": "In the year 2000, which provinces had a GDP exceeding 1 billion and what was their GDP?",
    "sql": "select province, gdp from ed_grossdomesticproduct where strftime('%Y', enddate)='2000' and gdp > 1000;",
    "norm_sql": "select province , gdp from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = '2000' and gdp > 1000",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _ and _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "enddate(deadline)",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "id(record identifier)",
          "gdppercapita(per capita gross domestic product (cny/person))"
        ],
        "column_names_original_en": [
          "province",
          "enddate",
          "gdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "id",
          "gdppercapita"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "enddate(deadline)",
          "comparetolastmonth(index month-on-month change (points))",
          "indexcode(index code)",
          "reportarea(statistical region category)",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "indextitle(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "comparetolastmonth",
          "indexcode",
          "reportarea",
          "reportperiod",
          "id",
          "indextitle"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "enddate(deadline)",
          "id(record identifier)",
          "indexvalue(index value (points))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indexname",
          "enddate",
          "id",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In the year 2000, which provinces had a GDP exceeding 1 billion and what was their GDP? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).indextitle(index name) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points))",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ and _ | select province , gdp from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = '2000' and gdp > 1000",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.gdppercapita",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.indextitle",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexvalue"
    ]
  },
  {
    "question": "Please list the average value of the \"Metallurgical Industry\" index from last year in the \"same month.\"",
    "sql": "select avg(indexvalue) from ed_producerpiformp  where indexname ='Metallurgical Industry' and reportperiod ='last year same month' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year')) ;",
    "norm_sql": "select avg ( indexvalue ) from ed_producerpiformp where indexname = 'Metallurgical Industry' and reportperiod = 'last year same month' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select avg ( _ ) from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indexvalue(index)",
          "indextype(index category)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "indexname",
          "indexvalue",
          "indextype",
          "id"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "domesticloans(domestic credit)",
          "netabroadassets(foreign net assets)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "capitalreceived(paid-up capital)",
          "money1(currency (narrow money m1))",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "enddate",
          "domesticloans",
          "netabroadassets",
          "claimstootherinst",
          "capitalreceived",
          "money1",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "enddate(deadline)",
          "indexvalue(index value)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextitle",
          "enddate",
          "indexvalue",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the average value of the \"Metallurgical Industry\" index from last year in the \"same month.\" | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier)",
    "output_sequence": "select avg ( _ ) from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select avg ( indexvalue ) from ed_producerpiformp where indexname = 'Metallurgical Industry' and reportperiod = 'last year same month' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.id",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.id"
    ]
  },
  {
    "question": "Please query the maximum amount of totalassets in the year 2000.",
    "sql": "select max(totalassets) from ed_moneyauthoritybs where strftime('%Y', enddate)='2000';",
    "norm_sql": "select max ( totalassets ) from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) = '2000'",
    "sql_skeleton": "select max ( _ ) from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "reservedeposits(reserve deposit (in million of rmb))",
          "enddate(deadline)",
          "selfownedmoney(own funds (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "moneyissuance(currency issuance (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))"
        ],
        "column_names_original_en": [
          "reservedeposits",
          "enddate",
          "selfownedmoney",
          "totalassets",
          "moneyissuance",
          "otherliability",
          "abroadliability"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "commodity(product name)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "reportarea(statistical category of the region)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "exvalueofgoods",
          "gyoyofimvaluegoods",
          "commodity",
          "imvalueofgoods",
          "reportarea",
          "gyoyofexvaluegoods",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "centralgovrevenue(central fiscal revenue (in million of yuan))",
          "enterpriseincome(enterprise income (in million of rmb))",
          "agriculturetax(agricultural tax (in million of rmb))",
          "genterpriseincome(enterprise revenue growth rate)",
          "socialsecurity(social security expenditure (in million of rmb))",
          "individualincometax(personal income tax (in million of rmb))",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "centralgovrevenue",
          "enterpriseincome",
          "agriculturetax",
          "genterpriseincome",
          "socialsecurity",
          "individualincometax",
          "centralgovexpenditure"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please query the maximum amount of totalassets in the year 2000. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).enddate(deadline) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).centralgovrevenue(central fiscal revenue (in million of yuan)) , ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb)) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).genterpriseincome(enterprise revenue growth rate) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb))",
    "output_sequence": "select max ( _ ) from _ where strftime ( _ ) = _ | select max ( totalassets ) from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) = '2000'",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.abroadliability",
      "ed_exportimport.*",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.commodity",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.reportarea",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.enddate",
      "ed_financialbalance.*",
      "ed_financialbalance.centralgovrevenue",
      "ed_financialbalance.enterpriseincome",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.genterpriseincome",
      "ed_financialbalance.socialsecurity",
      "ed_financialbalance.individualincometax",
      "ed_financialbalance.centralgovexpenditure"
    ]
  },
  {
    "question": "In 2020, what is the monthly amount of liabilities to other deposit-type companies and liabilities to other financial-type companies in the balance sheet of other deposit-type companies?",
    "sql": "select enddate, liabtootherdepositcorp, liabtootherfinancialcorp from ed_otherdepositorycorpbs where strftime('%Y', enddate)='2020';",
    "norm_sql": "select enddate , liabtootherdepositcorp , liabtootherfinancialcorp from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = '2020'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "enddate(deadline)",
          "gdp(gross domestic product (in million of rmb).)",
          "id(record identifier)",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "primaryindustrygdp",
          "gdpgrowthyoy",
          "gdppercapita",
          "enddate",
          "gdp",
          "id",
          "secondindustrygdp"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexname(index name)",
          "indexvalue(index value (points))",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexname",
          "indexvalue",
          "reportperiod",
          "id",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "claimsonotherresidentsec(claims on other resident sectors)",
          "paidincapital(paid-up capital)",
          "reserveassets(reserve assets)"
        ],
        "column_names_original_en": [
          "enddate",
          "liabtootherdepositcorp",
          "liabtootherfinancialcorp",
          "claimsonotherdepositcorp",
          "claimsonotherresidentsec",
          "paidincapital",
          "reserveassets"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In 2020, what is the monthly amount of liabilities to other deposit-type companies and liabilities to other financial-type companies in the balance sheet of other deposit-type companies? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) , ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets)",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select enddate , liabtootherdepositcorp , liabtootherfinancialcorp from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = '2020'",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.secondindustrygdp",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.enddate",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_otherdepositorycorpbs.reserveassets"
    ]
  },
  {
    "question": "What is the annual industrial production value of large, medium, and small enterprises in \"all industrial enterprises\" in Beijing?",
    "sql": "select enddate, largecomap, mediumcomap, minitypecomap from ed_industryproduction where province ='Beijing' and statstandard ='all industrial enterprises' and reportperiod ='annual';",
    "norm_sql": "select enddate , largecomap , mediumcomap , minitypecomap from ed_industryproduction where province = 'Beijing' and statstandard = 'all industrial enterprises' and reportperiod = 'annual'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistics interval)",
          "province(province)",
          "statstandard(statistical caliber)",
          "largecomap(large-scale enterprise (light industry))",
          "mediumcomap(medium-sized enterprise (light industry))",
          "minitypecomap(small-scale enterprise (light industry))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "province",
          "statstandard",
          "largecomap",
          "mediumcomap",
          "minitypecomap"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "indexname(index name)",
          "indexvalue(index value (points))",
          "reportperiod(data statistical period)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "id",
          "indexname",
          "indexvalue",
          "reportperiod",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "enddate(deadline)",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "creditloans(trust loan (in 100 million rmb))",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "id(record identifier)",
          "reportperiod(data statistics interval)",
          "entrustedloans(trust loan (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "definancingofnonfe",
          "creditloans",
          "corporatebonds",
          "id",
          "reportperiod",
          "entrustedloans"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the annual industrial production value of large, medium, and small enterprises in \"all industrial enterprises\" in Beijing? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb))",
    "output_sequence": "select _ from _ where _ | select enddate , largecomap , mediumcomap , minitypecomap from ed_industryproduction where province = 'Beijing' and statstandard = 'all industrial enterprises' and reportperiod = 'annual'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.province",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.minitypecomap",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.enddate",
      "ed_socialfinancing.*",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.creditloans",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.id",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.entrustedloans"
    ]
  },
  {
    "question": "Please help me to calculate the total value of goods imported and exported in China over the years, as well as the year-on-year changes in the value of goods imported and exported.",
    "sql": "select eximvalueofgoods, gyoyofeximvaluegoods from ed_exportimport;",
    "norm_sql": "select eximvalueofgoods , gyoyofeximvaluegoods from ed_exportimport",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "enddate(deadline)",
          "id(record identifier)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "reportarea(statistical category of the region)"
        ],
        "column_names_original_en": [
          "eximvalueofgoods",
          "gyoyofeximvaluegoods",
          "enddate",
          "id",
          "exvalueofgoods",
          "imvalueofgoods",
          "reportarea"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "selfownedmoney(own funds (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "enddate(deadline)",
          "moneyreserves(reserve currency (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "selfownedmoney",
          "claimtootherfinnonfininst",
          "enddate",
          "moneyreserves",
          "claimtosavingsinst",
          "forex",
          "id"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "valueaddedtax(value added tax (in million of rmb))",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "nationaldefense(defense expenditure (in million of rmb))",
          "reportperiod(data statistical period)",
          "socialsecurity(social security expenditure (in million of rmb))",
          "gnationaldefense(defense expenditure growth rate)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "valueaddedtax",
          "localgovexpenditure",
          "nationaldefense",
          "reportperiod",
          "socialsecurity",
          "gnationaldefense",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me to calculate the total value of goods imported and exported in China over the years, as well as the year-on-year changes in the value of goods imported and exported. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).reportarea(statistical category of the region) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).enddate(deadline)",
    "output_sequence": "select _ from _ | select eximvalueofgoods , gyoyofeximvaluegoods from ed_exportimport",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.enddate",
      "ed_exportimport.id",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.reportarea",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.id",
      "ed_financialbalance.*",
      "ed_financialbalance.valueaddedtax",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.nationaldefense",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.socialsecurity",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.enddate"
    ]
  },
  {
    "question": "What were the respective values of industrial value added and total industrial output value in Tianjin in the year 2000 for \"state-owned and above-scale industrial enterprises\" under the category of \"period-end cumulative\"?",
    "sql": "select industrialvalueadded, industrialoutputvalueap from ed_industryproduction where province = 'Tianjin' and statstandard = 'State-owned and above-scale industrial enterprises' and reportperiod = 'Period-end cumulative' and strftime('%Y', enddate)='2000';",
    "norm_sql": "select industrialvalueadded , industrialoutputvalueap from ed_industryproduction where province = 'Tianjin' and statstandard = 'State-owned and above-scale industrial enterprises' and reportperiod = 'Period-end cumulative' and strftime ( '%Y' , enddate ) = '2000'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistics interval)",
          "province(province)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "province",
          "statstandard",
          "industrialvalueadded",
          "industrialoutputvalueap",
          "id"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "secumarket(securities market)",
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)",
          "effectivedate(effective date)",
          "basiscode(billing baseline)",
          "itemname(tax rate items)",
          "valuefloor(minimum value/starting point (rmb))"
        ],
        "column_names_original_en": [
          "secumarket",
          "ratioceiling",
          "id",
          "effectivedate",
          "basiscode",
          "itemname",
          "valuefloor"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "othersunits(other units)",
          "reportarea(statistical category of region)",
          "enddate(deadline)",
          "othersindustry(other industries)",
          "selfemployed(individual unit)",
          "belowcounty(county and below)",
          "city(city)"
        ],
        "column_names_original_en": [
          "othersunits",
          "reportarea",
          "enddate",
          "othersindustry",
          "selfemployed",
          "belowcounty",
          "city"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What were the respective values of industrial value added and total industrial output value in Tianjin in the year 2000 for \"state-owned and above-scale industrial enterprises\" under the category of \"period-end cumulative\"? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).id(record identifier) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = _ | select industrialvalueadded , industrialoutputvalueap from ed_industryproduction where province = 'Tianjin' and statstandard = 'State-owned and above-scale industrial enterprises' and reportperiod = 'Period-end cumulative' and strftime ( '%Y' , enddate ) = '2000'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.province",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.id",
      "ed_taxrate.*",
      "ed_taxrate.secumarket",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.id",
      "ed_taxrate.effectivedate",
      "ed_taxrate.basiscode",
      "ed_taxrate.itemname",
      "ed_taxrate.valuefloor",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.city"
    ]
  },
  {
    "question": "I want to know the records of net assets abroad and domestic credit in the past three years.",
    "sql": "select netabroadassets, domesticloans from ed_chinamoneyandbanking where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select netabroadassets , domesticloans from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "fcdeposits(foreign currency deposit.)",
          "centralbankbonds(central bank bonds)",
          "money1(currency (narrow money m1))"
        ],
        "column_names_original_en": [
          "enddate",
          "netabroadassets",
          "domesticloans",
          "claimstononfinancialinst",
          "fcdeposits",
          "centralbankbonds",
          "money1"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "indexcode(index code)",
          "comparetolastmonth(index month-on-month change (points))",
          "reportarea(statistical region category)",
          "indexvalue(index value)",
          "id(record identifier)",
          "indextitle(index name)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indexcode",
          "comparetolastmonth",
          "reportarea",
          "indexvalue",
          "id",
          "indextitle",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "id(record identifier)",
          "subjectname(indicator name)",
          "yoy(year-on-year increase or decrease (%))",
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))"
        ],
        "column_names_original_en": [
          "id",
          "subjectname",
          "yoy",
          "enddate",
          "reportperiod",
          "subjectsum"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the records of net assets abroad and domestic credit in the past three years. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select netabroadassets , domesticloans from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.money1",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.reportperiod",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum"
    ]
  },
  {
    "question": "I want to know the amount of our foreign currency deposits two years ago.",
    "sql": "select fcdeposits from ed_chinamoneyandbanking where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select fcdeposits from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "fcdeposits(foreign currency deposit.)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "bonds(bonds)",
          "capitalreceived(paid-up capital)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "claimstogov(claims on the government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "fcdeposits",
          "claimstootherinst",
          "bonds",
          "capitalreceived",
          "claimstospecificsavingorg",
          "claimstogov"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "statecode(primary country)",
          "productname(product name)",
          "accuquantity(accumulated quantity)",
          "currencycode(currency unit)",
          "operatetype(import and export categories)",
          "category(product category)",
          "unitname(company name)"
        ],
        "column_names_original_en": [
          "statecode",
          "productname",
          "accuquantity",
          "currencycode",
          "operatetype",
          "category",
          "unitname"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index value (points))",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "reportperiod",
          "id",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the amount of our foreign currency deposits two years ago. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).productname(product name) , ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).currencycode(currency unit) , ed_productexportimport(product import and export volume).operatetype(import and export categories) , ed_productexportimport(product import and export volume).category(product category) , ed_productexportimport(product import and export volume).unitname(company name) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name)",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) | select fcdeposits from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_productexportimport.*",
      "ed_productexportimport.statecode",
      "ed_productexportimport.productname",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.currencycode",
      "ed_productexportimport.operatetype",
      "ed_productexportimport.category",
      "ed_productexportimport.unitname",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexname"
    ]
  },
  {
    "question": "How many bonds have we issued in total?",
    "sql": "select bonds from ed_chinamoneyandbanking;",
    "norm_sql": "select bonds from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "indextitle(index name)",
          "enddate(deadline)",
          "indexvalue(index value)",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "comparetolastmonth(index month-on-month change (points))",
          "indexcode(index code)"
        ],
        "column_names_original_en": [
          "indextitle",
          "enddate",
          "indexvalue",
          "reportperiod",
          "id",
          "comparetolastmonth",
          "indexcode"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "money1(currency (narrow money m1))",
          "bonds(bonds)",
          "fcdeposits(foreign currency deposit.)",
          "enddate(deadline)",
          "netabroadassets(foreign net assets)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "capitalreceived(paid-up capital)"
        ],
        "column_names_original_en": [
          "money1",
          "bonds",
          "fcdeposits",
          "enddate",
          "netabroadassets",
          "moneyandquasimoney",
          "capitalreceived"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "othersavings(other deposits)",
          "orgdeposits(government and institutional deposits)",
          "currencyname(currency unit code)",
          "overseasloans((two) overseas loans)",
          "financialbonds(financial bonds)",
          "financedeposits(financial deposit)"
        ],
        "column_names_original_en": [
          "trustedandcreditdeposits",
          "othersavings",
          "orgdeposits",
          "currencyname",
          "overseasloans",
          "financialbonds",
          "financedeposits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How many bonds have we issued in total? | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).indexcode(index code) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).orgdeposits(government and institutional deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit)",
    "output_sequence": "select _ from _ | select bonds from ed_chinamoneyandbanking",
    "tc_original": [
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.indexcode",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.orgdeposits",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.financedeposits"
    ]
  },
  {
    "question": "List the amount of reserved deposits in credit and debit of financial institutions in China in the previous year and the amount of assets in international financial institutions.",
    "sql": "select reservedeposits, assetsatifo from ed_chinafibalancesheetrmb where strftime('%Y', enddate)= strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select reservedeposits , assetsatifo from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "quantity(quantity)",
          "eximvalue(amount)",
          "operatetype(import and export categories)",
          "id(record identifier)",
          "accuavgprice(cumulative average price)",
          "productname(product name)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "quantity",
          "eximvalue",
          "operatetype",
          "id",
          "accuavgprice",
          "productname",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "reservedeposits(deposit of reserve funds)",
          "assetsatifo(asset in international financial institutions)",
          "agriculturaldeposits(agricultural deposit)",
          "financialbonds(financial bonds)",
          "totalloans(various loans)",
          "equityandotherinvestment(securities and investments)"
        ],
        "column_names_original_en": [
          "enddate",
          "reservedeposits",
          "assetsatifo",
          "agriculturaldeposits",
          "financialbonds",
          "totalloans",
          "equityandotherinvestment"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indextitle(index name)",
          "indexvalue(index value)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "indextitle",
          "indexvalue",
          "reportperiod",
          "enddate",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "List the amount of reserved deposits in credit and debit of financial institutions in China in the previous year and the amount of assets in international financial institutions. | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).quantity(quantity) , ed_productexportimport(product import and export volume).eximvalue(amount) , ed_productexportimport(product import and export volume).operatetype(import and export categories) , ed_productexportimport(product import and export volume).id(record identifier) , ed_productexportimport(product import and export volume).accuavgprice(cumulative average price) , ed_productexportimport(product import and export volume).productname(product name) , ed_productexportimport(product import and export volume).enddate(deadline) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier)",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) | select reservedeposits , assetsatifo from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_productexportimport.*",
      "ed_productexportimport.quantity",
      "ed_productexportimport.eximvalue",
      "ed_productexportimport.operatetype",
      "ed_productexportimport.id",
      "ed_productexportimport.accuavgprice",
      "ed_productexportimport.productname",
      "ed_productexportimport.enddate",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.id"
    ]
  },
  {
    "question": "Please retrieve the relevant index value of \"Gas Production and Supply Industry\" in the \"National Economic Industry Index\" type for \"last year same month\".",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod ='last year same month' and indextype ='National Economic Industry Index' and indexname ='Gas Production and Supply Industry';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'last year same month' and indextype = 'National Economic Industry Index' and indexname = 'Gas Production and Supply Industry'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "entrustedloans(trust loan (in 100 million of rmb))",
          "reportperiod(data statistics interval)",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "creditloans(trust loan (in 100 million rmb))",
          "reportarea(statistical region category)",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "entrustedloans",
          "reportperiod",
          "socialfinancing",
          "creditloans",
          "reportarea",
          "corporatebonds",
          "id"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "bonds(bonds)",
          "money1(currency (narrow money m1))",
          "fcdeposits(foreign currency deposit.)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "claimstospecificsavingorg",
          "claimstootherinst",
          "bonds",
          "money1",
          "fcdeposits",
          "moneyandquasimoney",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please retrieve the relevant index value of \"Gas Production and Supply Industry\" in the \"National Economic Industry Index\" type for \"last year same month\". | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline)",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'last year same month' and indextype = 'National Economic Industry Index' and indexname = 'Gas Production and Supply Industry'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_socialfinancing.*",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.creditloans",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.id",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.enddate"
    ]
  },
  {
    "question": "What is the amount of commercial taxes in the fiscal revenue and expenditure of various regions in our country over the years?",
    "sql": "select province, commercialtax from ed_financialbalance ;",
    "norm_sql": "select province , commercialtax from ed_financialbalance",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "entrustedloans(trust loan (in 100 million of rmb))",
          "id(record identifier)",
          "creditloans(trust loan (in 100 million rmb))",
          "rmbloans(rmb loans (in 100 million rmb))",
          "province(province and city)",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "foreigncurrencyloans",
          "entrustedloans",
          "id",
          "creditloans",
          "rmbloans",
          "province",
          "undiscountedbacceptances"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "province(province and city)",
          "commercialtax(business tax revenue (in million of rmb))",
          "nationaldefense(defense expenditure (in million of rmb))",
          "gnationaldefense(defense expenditure growth rate)",
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "valueaddedtax(value added tax (in million of rmb))",
          "centralgovrevenue(central fiscal revenue (in million of yuan))"
        ],
        "column_names_original_en": [
          "province",
          "commercialtax",
          "nationaldefense",
          "gnationaldefense",
          "gfinancialexpenditure",
          "valueaddedtax",
          "centralgovrevenue"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexname(index name)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexvalue(index)",
          "indextype(index category)"
        ],
        "column_names_original_en": [
          "indexname",
          "id",
          "reportperiod",
          "enddate",
          "indexvalue",
          "indextype"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the amount of commercial taxes in the fiscal revenue and expenditure of various regions in our country over the years? | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).centralgovrevenue(central fiscal revenue (in million of yuan)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indextype(index category)",
    "output_sequence": "select _ from _ | select province , commercialtax from ed_financialbalance",
    "tc_original": [
      "ed_socialfinancing.*",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.id",
      "ed_socialfinancing.creditloans",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.province",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_financialbalance.*",
      "ed_financialbalance.province",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.nationaldefense",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.valueaddedtax",
      "ed_financialbalance.centralgovrevenue",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indextype"
    ]
  },
  {
    "question": "In the past three years, which year recorded loan amounts exceeding 150,000 according to \"month\"? Please display the time and loan amount.",
    "sql": "select enddate, subjectsum from ed_newincreasingloan where reportperiod ='month' and subjectsum > 150000 and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'month' and subjectsum > 150000 and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "id(record identifier)",
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "id",
          "enddate",
          "reportperiod",
          "subjectsum",
          "yoy",
          "subjectname"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsonothernfinstitute(claims on non-financial institution)",
          "claimsonotherresidentsec(claims on other resident sectors)",
          "depositsexcludedfromm2(deposits not included in broad money)",
          "transferabledeposits(transferable deposits)",
          "id(record identifier)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "cashinvault(cash on hand)"
        ],
        "column_names_original_en": [
          "claimsonothernfinstitute",
          "claimsonotherresidentsec",
          "depositsexcludedfromm2",
          "transferabledeposits",
          "id",
          "claimsonotherfinstitute",
          "cashinvault"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "valuefloor(minimum value/starting point (rmb))",
          "ratiofloor(minimum ratio (%))",
          "itemname(tax rate items)",
          "valueceiling(maximum value (rmb))",
          "id(record identifier)",
          "effectivedate(effective date)",
          "maturity(repurchase period)"
        ],
        "column_names_original_en": [
          "valuefloor",
          "ratiofloor",
          "itemname",
          "valueceiling",
          "id",
          "effectivedate",
          "maturity"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In the past three years, which year recorded loan amounts exceeding 150,000 according to \"month\"? Please display the time and loan amount. | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).maturity(repurchase period)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'month' and subjectsum > 150000 and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectname",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_taxrate.*",
      "ed_taxrate.valuefloor",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.itemname",
      "ed_taxrate.valueceiling",
      "ed_taxrate.id",
      "ed_taxrate.effectivedate",
      "ed_taxrate.maturity"
    ]
  },
  {
    "question": "Please help me check the data of the year 2005, where China's exports increased year-on-year and imports decreased year-on-year, and provide the year-on-year growth data.",
    "sql": "select gyoyofexvaluegoods, gyoyofimvaluegoods from ed_exportimport where gyoyofexvaluegoods > 0 and gyoyofimvaluegoods < 0 and strftime('%Y', enddate)='2005';",
    "norm_sql": "select gyoyofexvaluegoods , gyoyofimvaluegoods from ed_exportimport where gyoyofexvaluegoods > 0 and gyoyofimvaluegoods < 0 and strftime ( '%Y' , enddate ) = '2005'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "id(record identifier)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "enddate",
          "primaryindustrygdp",
          "id",
          "gdpgrowthyoy",
          "thirdindustrygdp",
          "secondindustrygdp",
          "province"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "cumcpitobacco(cumulative average of tobacco, alcohol, and supplies)",
          "yoycpifood(food year-on-year)",
          "qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month)",
          "qoqcpimedicare(healthcare and personal care products month-on-month)",
          "yoycpihousing(residential year-on-year)",
          "yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year)",
          "cumcpientertainmentservice(accumulated average of entertainment, education, cultural goods and services)"
        ],
        "column_names_original_en": [
          "cumcpitobacco",
          "yoycpifood",
          "qoqcpientertainmentservice",
          "qoqcpimedicare",
          "yoycpihousing",
          "yoycpientertainmentservice",
          "cumcpientertainmentservice"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "enddate(deadline)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "province(province and city)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "commodity(product name)"
        ],
        "column_names_original_en": [
          "enddate",
          "gyoyofexvaluegoods",
          "gyoyofimvaluegoods",
          "province",
          "gyoyofeximvaluegoods",
          "imvalueofgoods",
          "commodity"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me check the data of the year 2005, where China's exports increased year-on-year and imports decreased year-on-year, and provide the year-on-year growth data. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).cumcpitobacco(cumulative average of tobacco, alcohol, and supplies) , ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month) , ed_consumerpriceindex(consumer price index).qoqcpimedicare(healthcare and personal care products month-on-month) , ed_consumerpriceindex(consumer price index).yoycpihousing(residential year-on-year) , ed_consumerpriceindex(consumer price index).yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year) , ed_consumerpriceindex(consumer price index).cumcpientertainmentservice(accumulated average of entertainment, education, cultural goods and services) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).commodity(product name)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = _ | select gyoyofexvaluegoods , gyoyofimvaluegoods from ed_exportimport where gyoyofexvaluegoods > 0 and gyoyofimvaluegoods < 0 and strftime ( '%Y' , enddate ) = '2005'",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.cumcpitobacco",
      "ed_consumerpriceindex.yoycpifood",
      "ed_consumerpriceindex.qoqcpientertainmentservice",
      "ed_consumerpriceindex.qoqcpimedicare",
      "ed_consumerpriceindex.yoycpihousing",
      "ed_consumerpriceindex.yoycpientertainmentservice",
      "ed_consumerpriceindex.cumcpientertainmentservice",
      "ed_exportimport.*",
      "ed_exportimport.enddate",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.province",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.commodity"
    ]
  },
  {
    "question": "What is the amount of claims on non-financial institutions when domestic loans in China reach 100 million yuan?",
    "sql": "select claimstononfinancialinst from ed_chinamoneyandbanking where domesticloans > 100000000;",
    "norm_sql": "select claimstononfinancialinst from ed_chinamoneyandbanking where domesticloans > 100000000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "quasimoney(quasi-currency)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "bonds(bonds)",
          "id(record identifier)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "claimstononfinancialinst(claims on the non-financial sector)"
        ],
        "column_names_original_en": [
          "quasimoney",
          "netabroadassets",
          "domesticloans",
          "bonds",
          "id",
          "claimstospecificsavingorg",
          "claimstononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "id(record identifier)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "enddate(deadline)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)"
        ],
        "column_names_original_en": [
          "id",
          "province",
          "gdp",
          "secondindustrygdp",
          "enddate",
          "primaryindustrygdp",
          "gdpgrowthyoy"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "sharesandotherinvestments(equity and other investments)",
          "financialbonds(financial bonds)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "assetsatifo(asset in international financial institutions)",
          "shorttermloans(short-term loan)",
          "enddate(deadline)",
          "savingsdeposits(savings deposits)"
        ],
        "column_names_original_en": [
          "sharesandotherinvestments",
          "financialbonds",
          "trustedandcreditdeposits",
          "assetsatifo",
          "shorttermloans",
          "enddate",
          "savingsdeposits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the amount of claims on non-financial institutions when domestic loans in China reach 100 million yuan? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits)",
    "output_sequence": "select _ from _ where _ | select claimstononfinancialinst from ed_chinamoneyandbanking where domesticloans > 100000000",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.savingsdeposits"
    ]
  },
  {
    "question": "Please display the detailed annual total assets data since the records exist, and arrange them in descending order.",
    "sql": "select enddate, totalassets from ed_moneyauthoritybs order by totalassets desc;",
    "norm_sql": "select enddate , totalassets from ed_moneyauthoritybs order by totalassets desc",
    "sql_skeleton": "select _ from _ order by _ desc",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "totalassets(total assets (in million of rmb).)",
          "otherliability(other liabilities (in million of rmb))",
          "id(record identifier)",
          "forex(foreign exchange (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "totalassets",
          "otherliability",
          "id",
          "forex",
          "claimtootherfinnonfininst",
          "abroadliability"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "id(record identifier)",
          "enddate(deadline)",
          "indexname(index name)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "id",
          "enddate",
          "indexname",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpitrafficcommunication(transportation and communication year-over-year)",
          "qoqcpicloth(clothing month-on-month)",
          "yoycpihousing(residential year-on-year)",
          "qoqcpitrafficcommunication(transportation and communication month-on-month)",
          "yoycpitobacco(tobacco, alcohol, and supplies year-on-year)",
          "cumcpifood(accumulated average of food)",
          "cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services)"
        ],
        "column_names_original_en": [
          "yoycpitrafficcommunication",
          "qoqcpicloth",
          "yoycpihousing",
          "qoqcpitrafficcommunication",
          "yoycpitobacco",
          "cumcpifood",
          "cumcpifamilyequipmentservice"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please display the detailed annual total assets data since the records exist, and arrange them in descending order. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpitrafficcommunication(transportation and communication year-over-year) , ed_consumerpriceindex(consumer price index).qoqcpicloth(clothing month-on-month) , ed_consumerpriceindex(consumer price index).yoycpihousing(residential year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpitrafficcommunication(transportation and communication month-on-month) , ed_consumerpriceindex(consumer price index).yoycpitobacco(tobacco, alcohol, and supplies year-on-year) , ed_consumerpriceindex(consumer price index).cumcpifood(accumulated average of food) , ed_consumerpriceindex(consumer price index).cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services)",
    "output_sequence": "select _ from _ order by _ desc | select enddate , totalassets from ed_moneyauthoritybs order by totalassets desc",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.abroadliability",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.reportperiod",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpitrafficcommunication",
      "ed_consumerpriceindex.qoqcpicloth",
      "ed_consumerpriceindex.yoycpihousing",
      "ed_consumerpriceindex.qoqcpitrafficcommunication",
      "ed_consumerpriceindex.yoycpitobacco",
      "ed_consumerpriceindex.cumcpifood",
      "ed_consumerpriceindex.cumcpifamilyequipmentservice"
    ]
  },
  {
    "question": "Please help me check the social security expenditure and national defense expenditure in Zhejiang Province over the years.",
    "sql": "select socialsecurity, nationaldefense from ed_financialbalance where province='Zhejiang';",
    "norm_sql": "select socialsecurity , nationaldefense from ed_financialbalance where province = 'Zhejiang'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "individualincometax(personal income tax (in million of rmb))",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "nationaldefense(defense expenditure (in million of rmb))",
          "province(province and city)",
          "socialsecurity(social security expenditure (in million of rmb))",
          "enterpriseincometax(enterprise income tax (in million of rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "individualincometax",
          "localgovexpenditure",
          "nationaldefense",
          "province",
          "socialsecurity",
          "enterpriseincometax",
          "id"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "quasimoney(quasi-currency)",
          "money1(currency (narrow money m1))",
          "centralbankbonds(central bank bonds)",
          "fcdeposits(foreign currency deposit.)",
          "domesticloans(domestic credit)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)"
        ],
        "column_names_original_en": [
          "moneyandquasimoney",
          "quasimoney",
          "money1",
          "centralbankbonds",
          "fcdeposits",
          "domesticloans",
          "claimstospecificsavingorg"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "depositswithcentralbank(reserve deposit)",
          "totalassets(total assets)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "depositsexcludedfromm2(deposits not included in broad money)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "timedeposits(fixed deposit for enterprises)"
        ],
        "column_names_original_en": [
          "depositswithcentralbank",
          "totalassets",
          "claimsonotherfinstitute",
          "depositsexcludedfromm2",
          "claimsonothernfinstitute",
          "liabilitiestonfinst",
          "timedeposits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me check the social security expenditure and national defense expenditure in Zhejiang Province over the years. | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).id(record identifier) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises)",
    "output_sequence": "select _ from _ where _ | select socialsecurity , nationaldefense from ed_financialbalance where province = 'Zhejiang'",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.individualincometax",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.nationaldefense",
      "ed_financialbalance.province",
      "ed_financialbalance.socialsecurity",
      "ed_financialbalance.enterpriseincometax",
      "ed_financialbalance.id",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.timedeposits"
    ]
  },
  {
    "question": "List the provinces and cities with a fiscal revenue growth rate greater than 1 in the past three years.",
    "sql": "select province from ed_financialbalance where gfinancialrevenue > 1 and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select province from ed_financialbalance where gfinancialrevenue > 1 and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "province(province and city)",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "enterpriseincome(enterprise income (in million of rmb))",
          "gsocialsecurity(social security expenditure growth rate)",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "gfinancialrevenue",
          "enterpriseincome",
          "gsocialsecurity",
          "localgovrevenue",
          "valueaddedtax"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "id(record identifier)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "gdp(gross domestic product (in million of rmb).)"
        ],
        "column_names_original_en": [
          "enddate",
          "gdpgrowthyoy",
          "gdppercapita",
          "id",
          "primaryindustrygdp",
          "secondindustrygdp",
          "gdp"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "otherforeignassets(other foreign assets (in million of rmb))",
          "id(record identifier)",
          "totalassets(total assets (in million of rmb).)",
          "reservedeposits(reserve deposit (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))"
        ],
        "column_names_original_en": [
          "otherforeignassets",
          "id",
          "totalassets",
          "reservedeposits",
          "governmentsavings",
          "claimtononfinancialinst",
          "claimtosavingsinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "List the provinces and cities with a fiscal revenue growth rate greater than 1 in the past three years. | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gsocialsecurity(social security expenditure growth rate) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select province from ed_financialbalance where gfinancialrevenue > 1 and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.province",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.enterpriseincome",
      "ed_financialbalance.gsocialsecurity",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.valueaddedtax",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.gdp",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.claimtosavingsinst"
    ]
  },
  {
    "question": "Please briefly check the amounts of deposits included in and excluded from broad money in the balance sheets of other depositary corporations last year.",
    "sql": "select depositsincludedinm2, depositsexcludedfromm2 from ed_otherdepositorycorpbs where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year'));",
    "norm_sql": "select depositsincludedinm2 , depositsexcludedfromm2 from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "depositsexcludedfromm2(deposits not included in broad money)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsongovernment(claims on government (net))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "depositsincludedinm2",
          "depositsexcludedfromm2",
          "depositswithcentralbank",
          "cashinvault",
          "claimsongovernment",
          "id"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "subjectname(indicator name)",
          "reportperiod(statistical period)",
          "yoy(year-on-year increase or decrease (%))",
          "subjectsum(amount (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "subjectname",
          "reportperiod",
          "yoy",
          "subjectsum"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "salestax(business tax (in million of rmb))",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "id(record identifier)",
          "enterpriseincome(enterprise income (in million of rmb))",
          "reportperiod(data statistical period)",
          "gtaxs(various tax revenues growth rate)",
          "nationaldefense(defense expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "salestax",
          "gfinancialrevenue",
          "id",
          "enterpriseincome",
          "reportperiod",
          "gtaxs",
          "nationaldefense"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please briefly check the amounts of deposits included in and excluded from broad money in the balance sheets of other depositary corporations last year. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).gtaxs(various tax revenues growth rate) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) | select depositsincludedinm2 , depositsexcludedfromm2 from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.id",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectsum",
      "ed_financialbalance.*",
      "ed_financialbalance.salestax",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.id",
      "ed_financialbalance.enterpriseincome",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.gtaxs",
      "ed_financialbalance.nationaldefense"
    ]
  },
  {
    "question": "Please display the social retail value of our joint venture units and individual units.",
    "sql": "select jointventures, selfemployed from ed_retailvalueofscgoods;",
    "norm_sql": "select jointventures , selfemployed from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "selfemployed(individual unit)",
          "collectiveunits(collective unit)",
          "reportarea(statistical category of region)",
          "reportperiod(data statistical period)",
          "county(county)",
          "jointventures(joint operating unit)",
          "othersindustry(other industries)"
        ],
        "column_names_original_en": [
          "selfemployed",
          "collectiveunits",
          "reportarea",
          "reportperiod",
          "county",
          "jointventures",
          "othersindustry"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "accuquantity(accumulated quantity)",
          "statecode(primary country)",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "unitname(company name)",
          "quantity(quantity)",
          "eximvalue(amount)"
        ],
        "column_names_original_en": [
          "accuquantity",
          "statecode",
          "enddate",
          "reportperiod",
          "unitname",
          "quantity",
          "eximvalue"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indexvalue(index value)",
          "enddate(deadline)",
          "indextitle(index name)"
        ],
        "column_names_original_en": [
          "id",
          "reportperiod",
          "indexvalue",
          "enddate",
          "indextitle"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please display the social retail value of our joint venture units and individual units. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).quantity(quantity) , ed_productexportimport(product import and export volume).eximvalue(amount) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name)",
    "output_sequence": "select _ from _ | select jointventures , selfemployed from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_productexportimport.*",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.statecode",
      "ed_productexportimport.enddate",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.unitname",
      "ed_productexportimport.quantity",
      "ed_productexportimport.eximvalue",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indextitle"
    ]
  },
  {
    "question": "Please count the records where the import value exceeds 20 million but the export value is less than 20 million, and list the import value and export value.",
    "sql": "select imvalueofgoods, exvalueofgoods from ed_exportimport where imvalueofgoods > 20 and exvalueofgoods <20;",
    "norm_sql": "select imvalueofgoods , exvalueofgoods from ed_exportimport where imvalueofgoods > 20 and exvalueofgoods < 20",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "id(record identifier)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "reportarea(statistical category of the region)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "commodity(product name)"
        ],
        "column_names_original_en": [
          "gyoyofexvaluegoods",
          "id",
          "gyoyofimvaluegoods",
          "reportarea",
          "imvalueofgoods",
          "exvalueofgoods",
          "commodity"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "creditloans(trust loan (in 100 million rmb))",
          "rmbloans(rmb loans (in 100 million rmb))",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "id(record identifier)",
          "reportarea(statistical region category)",
          "province(province and city)",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "creditloans",
          "rmbloans",
          "definancingofnonfe",
          "id",
          "reportarea",
          "province",
          "undiscountedbacceptances"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "operatetype(import and export categories)",
          "accuquantity(accumulated quantity)",
          "accuavgprice(cumulative average price)",
          "unitname(company name)",
          "reportperiod(data statistical period)",
          "productname(product name)",
          "accueximvalue(accumulated amount)"
        ],
        "column_names_original_en": [
          "operatetype",
          "accuquantity",
          "accuavgprice",
          "unitname",
          "reportperiod",
          "productname",
          "accueximvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please count the records where the import value exceeds 20 million but the export value is less than 20 million, and list the import value and export value. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).commodity(product name) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).operatetype(import and export categories) , ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).accuavgprice(cumulative average price) , ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).productname(product name) , ed_productexportimport(product import and export volume).accueximvalue(accumulated amount)",
    "output_sequence": "select _ from _ where _ | select imvalueofgoods , exvalueofgoods from ed_exportimport where imvalueofgoods > 20 and exvalueofgoods < 20",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.id",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.reportarea",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.commodity",
      "ed_socialfinancing.*",
      "ed_socialfinancing.creditloans",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.id",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.province",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_productexportimport.*",
      "ed_productexportimport.operatetype",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.accuavgprice",
      "ed_productexportimport.unitname",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.productname",
      "ed_productexportimport.accueximvalue"
    ]
  },
  {
    "question": "What is the benchmark for charging the \"trading commission rate\" of \"government bonds\"?",
    "sql": "select basiscode from ed_taxrate where typename ='government bonds' and itemname = 'trading commission rate';",
    "norm_sql": "select basiscode from ed_taxrate where typename = 'government bonds' and itemname = 'trading commission rate'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "basiscode(billing baseline)",
          "valueceiling(maximum value (rmb))",
          "maturity(repurchase period)",
          "typename(tax rate type)",
          "itemname(tax rate items)",
          "valuefloor(minimum value/starting point (rmb))"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "basiscode",
          "valueceiling",
          "maturity",
          "typename",
          "itemname",
          "valuefloor"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "claimstononfinancialinst(claims on the non-financial sector)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "id(record identifier)",
          "netabroadassets(foreign net assets)",
          "centralbankbonds(central bank bonds)",
          "money1(currency (narrow money m1))",
          "domesticloans(domestic credit)"
        ],
        "column_names_original_en": [
          "claimstononfinancialinst",
          "claimstootherinst",
          "id",
          "netabroadassets",
          "centralbankbonds",
          "money1",
          "domesticloans"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indexvalue(index value)",
          "comparetolastmonth(index month-on-month change (points))",
          "id(record identifier)",
          "reportarea(statistical region category)",
          "indexcode(index code)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "indexvalue",
          "comparetolastmonth",
          "id",
          "reportarea",
          "indexcode"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the benchmark for charging the \"trading commission rate\" of \"government bonds\"? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).indexcode(index code)",
    "output_sequence": "select _ from _ where _ | select basiscode from ed_taxrate where typename = 'government bonds' and itemname = 'trading commission rate'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.basiscode",
      "ed_taxrate.valueceiling",
      "ed_taxrate.maturity",
      "ed_taxrate.typename",
      "ed_taxrate.itemname",
      "ed_taxrate.valuefloor",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.domesticloans",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.indexcode"
    ]
  },
  {
    "question": "Help list the time and amount of newly added RMB loans when the year-on-year growth rate of loans exceeds 0 in the past ten years, recorded as \"end of period cumulative\".",
    "sql": "select enddate, subjectsum from ed_newincreasingloan where reportperiod = 'end of period cumulative' and yoy > 0 and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-10 year'));",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'end of period cumulative' and yoy > 0 and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "subjectsum",
          "yoy",
          "id",
          "subjectname"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "othersunits(other units)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "city(city)",
          "belowcounty(county and below)",
          "jointventures(joint operating unit)",
          "id(record identifier)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "othersunits",
          "retailvalueofscgoods",
          "city",
          "belowcounty",
          "jointventures",
          "id",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpimedicare(medical care and personal care products year-on-year)",
          "yoycpihousing(residential year-on-year)",
          "yoycpitrafficcommunication(transportation and communication year-over-year)",
          "cumcpi(cumulative average of resident consumer price index)",
          "qoqcpifood(food price month-on-month)",
          "cumcpientertainmentservice(accumulated average of entertainment, education, cultural goods and services)",
          "yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year)"
        ],
        "column_names_original_en": [
          "yoycpimedicare",
          "yoycpihousing",
          "yoycpitrafficcommunication",
          "cumcpi",
          "qoqcpifood",
          "cumcpientertainmentservice",
          "yoycpientertainmentservice"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help list the time and amount of newly added RMB loans when the year-on-year growth rate of loans exceeds 0 in the past ten years, recorded as \"end of period cumulative\". | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpimedicare(medical care and personal care products year-on-year) , ed_consumerpriceindex(consumer price index).yoycpihousing(residential year-on-year) , ed_consumerpriceindex(consumer price index).yoycpitrafficcommunication(transportation and communication year-over-year) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).qoqcpifood(food price month-on-month) , ed_consumerpriceindex(consumer price index).cumcpientertainmentservice(accumulated average of entertainment, education, cultural goods and services) , ed_consumerpriceindex(consumer price index).yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'end of period cumulative' and yoy > 0 and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectname",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.id",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpimedicare",
      "ed_consumerpriceindex.yoycpihousing",
      "ed_consumerpriceindex.yoycpitrafficcommunication",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.qoqcpifood",
      "ed_consumerpriceindex.cumcpientertainmentservice",
      "ed_consumerpriceindex.yoycpientertainmentservice"
    ]
  },
  {
    "question": "What is the total value of import and export goods in our country?",
    "sql": "select eximvalueofgoods from ed_exportimport;",
    "norm_sql": "select eximvalueofgoods from ed_exportimport",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "commodity(product name)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "reportarea(statistical category of the region)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "eximvalueofgoods",
          "commodity",
          "imvalueofgoods",
          "reportarea",
          "reportperiod",
          "enddate",
          "gyoyofimvaluegoods"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "id(record identifier)",
          "money1(currency (narrow money m1))",
          "bonds(bonds)",
          "claimstogov(claims on the government (net))",
          "capitalreceived(paid-up capital)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "centralbankbonds(central bank bonds)"
        ],
        "column_names_original_en": [
          "id",
          "money1",
          "bonds",
          "claimstogov",
          "capitalreceived",
          "claimstootherinst",
          "centralbankbonds"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)",
          "ratiofloor(minimum ratio (%))",
          "typename(tax rate type)",
          "effectivedate(effective date)",
          "secumarket(securities market)",
          "valueceiling(maximum value (rmb))"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "id",
          "ratiofloor",
          "typename",
          "effectivedate",
          "secumarket",
          "valueceiling"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the total value of import and export goods in our country? | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb))",
    "output_sequence": "select _ from _ | select eximvalueofgoods from ed_exportimport",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.commodity",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.reportarea",
      "ed_exportimport.reportperiod",
      "ed_exportimport.enddate",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_taxrate.*",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.id",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.typename",
      "ed_taxrate.effectivedate",
      "ed_taxrate.secumarket",
      "ed_taxrate.valueceiling"
    ]
  },
  {
    "question": "What is the total amount of imports and exports of goods in China in the past three years, and what is the year-on-year change in imports and exports?",
    "sql": "select eximvalueofgoods, gyoyofeximvaluegoods from ed_exportimport where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select eximvalueofgoods , gyoyofeximvaluegoods from ed_exportimport where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "enddate(deadline)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "id(record identifier)",
          "reportarea(statistical category of the region)",
          "province(province and city)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "enddate",
          "eximvalueofgoods",
          "gyoyofeximvaluegoods",
          "id",
          "reportarea",
          "province",
          "gyoyofexvaluegoods"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "drrtype(reserve requirement ratio category)",
          "ratiofloor(minimum ratio (%))",
          "id(record identifier)",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "drrtype",
          "ratiofloor",
          "id",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "qoqcpicloth(clothing month-on-month)",
          "enddate(deadline)",
          "cumcpi(cumulative average of resident consumer price index)",
          "yoycpihousing(residential year-on-year)",
          "yoycpitrafficcommunication(transportation and communication year-over-year)",
          "yoycpimedicare(medical care and personal care products year-on-year)",
          "cumcpimedicare(cumulative average of healthcare and personal care products)"
        ],
        "column_names_original_en": [
          "qoqcpicloth",
          "enddate",
          "cumcpi",
          "yoycpihousing",
          "yoycpitrafficcommunication",
          "yoycpimedicare",
          "cumcpimedicare"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the total amount of imports and exports of goods in China in the past three years, and what is the year-on-year change in imports and exports? | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).qoqcpicloth(clothing month-on-month) , ed_consumerpriceindex(consumer price index).enddate(deadline) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).yoycpihousing(residential year-on-year) , ed_consumerpriceindex(consumer price index).yoycpitrafficcommunication(transportation and communication year-over-year) , ed_consumerpriceindex(consumer price index).yoycpimedicare(medical care and personal care products year-on-year) , ed_consumerpriceindex(consumer price index).cumcpimedicare(cumulative average of healthcare and personal care products)",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select eximvalueofgoods , gyoyofeximvaluegoods from ed_exportimport where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.enddate",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.id",
      "ed_exportimport.reportarea",
      "ed_exportimport.province",
      "ed_exportimport.gyoyofexvaluegoods",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.effectivedate",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.qoqcpicloth",
      "ed_consumerpriceindex.enddate",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.yoycpihousing",
      "ed_consumerpriceindex.yoycpitrafficcommunication",
      "ed_consumerpriceindex.yoycpimedicare",
      "ed_consumerpriceindex.cumcpimedicare"
    ]
  },
  {
    "question": "What was the total amount of import and export in the previous year, and what was the year-on-year increase or decrease?",
    "sql": "select eximvalueofgoods, gyoyofeximvaluegoods from ed_exportimport  where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year'));",
    "norm_sql": "select eximvalueofgoods , gyoyofeximvaluegoods from ed_exportimport where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpitrafficcommunication(transportation and communication year-over-year)",
          "yoycpitobacco(tobacco, alcohol, and supplies year-on-year)",
          "cumcpimedicare(cumulative average of healthcare and personal care products)",
          "cumcpihousing(accumulated average of residence)",
          "cumcpitrafficcommunication(cumulative average of transportation and communication)",
          "yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year)",
          "qoqcpihousing(residential month-to-month)"
        ],
        "column_names_original_en": [
          "yoycpitrafficcommunication",
          "yoycpitobacco",
          "cumcpimedicare",
          "cumcpihousing",
          "cumcpitrafficcommunication",
          "yoycpientertainmentservice",
          "qoqcpihousing"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "netabroadassets(foreign net assets)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "fcdeposits(foreign currency deposit.)",
          "money1(currency (narrow money m1))",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "moneyandquasimoney",
          "netabroadassets",
          "claimstootherinst",
          "fcdeposits",
          "money1",
          "claimstononfinancialinst",
          "id"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "enddate(deadline)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "province(province and city)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "reportarea(statistical category of the region)"
        ],
        "column_names_original_en": [
          "enddate",
          "eximvalueofgoods",
          "gyoyofeximvaluegoods",
          "province",
          "exvalueofgoods",
          "gyoyofimvaluegoods",
          "reportarea"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What was the total amount of import and export in the previous year, and what was the year-on-year increase or decrease? | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpitrafficcommunication(transportation and communication year-over-year) , ed_consumerpriceindex(consumer price index).yoycpitobacco(tobacco, alcohol, and supplies year-on-year) , ed_consumerpriceindex(consumer price index).cumcpimedicare(cumulative average of healthcare and personal care products) , ed_consumerpriceindex(consumer price index).cumcpihousing(accumulated average of residence) , ed_consumerpriceindex(consumer price index).cumcpitrafficcommunication(cumulative average of transportation and communication) , ed_consumerpriceindex(consumer price index).yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpihousing(residential month-to-month) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).reportarea(statistical category of the region)",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) | select eximvalueofgoods , gyoyofeximvaluegoods from ed_exportimport where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpitrafficcommunication",
      "ed_consumerpriceindex.yoycpitobacco",
      "ed_consumerpriceindex.cumcpimedicare",
      "ed_consumerpriceindex.cumcpihousing",
      "ed_consumerpriceindex.cumcpitrafficcommunication",
      "ed_consumerpriceindex.yoycpientertainmentservice",
      "ed_consumerpriceindex.qoqcpihousing",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.id",
      "ed_exportimport.*",
      "ed_exportimport.enddate",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.province",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.reportarea"
    ]
  },
  {
    "question": "What was the amount of monthly industrial value added for \"National\" \"State-owned and above-scale industrial enterprises\" before the year 2000?",
    "sql": "select enddate, industrialvalueadded from ed_industryproduction  where reportarea ='National' and statstandard ='State-owned and above-scale industrial enterprises' and reportperiod ='monthly' and strftime('%Y', enddate)<'2000';",
    "norm_sql": "select enddate , industrialvalueadded from ed_industryproduction where reportarea = 'National' and statstandard = 'State-owned and above-scale industrial enterprises' and reportperiod = 'monthly' and strftime ( '%Y' , enddate ) < '2000'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) < _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "province(province)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded",
          "industrialoutputvalueap",
          "province"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "secumarket(securities market)",
          "maturity(repurchase period)",
          "ratioceiling(maximum ratio (%))",
          "basiscode(billing baseline)",
          "valueceiling(maximum value (rmb))",
          "effectivedate(effective date)",
          "valuefloor(minimum value/starting point (rmb))"
        ],
        "column_names_original_en": [
          "secumarket",
          "maturity",
          "ratioceiling",
          "basiscode",
          "valueceiling",
          "effectivedate",
          "valuefloor"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpi(resident consumer price index (year-on-year))",
          "yoycpimedicare(medical care and personal care products year-on-year)",
          "qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month)",
          "qoqcpitrafficcommunication(transportation and communication month-on-month)",
          "cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services)",
          "qoqcpi(resident consumer price index (month-on-month))",
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)"
        ],
        "column_names_original_en": [
          "yoycpi",
          "yoycpimedicare",
          "qoqcpientertainmentservice",
          "qoqcpitrafficcommunication",
          "cumcpifamilyequipmentservice",
          "qoqcpi",
          "yoycpifamilyequipmentservice"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What was the amount of monthly industrial value added for \"National\" \"State-owned and above-scale industrial enterprises\" before the year 2000? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).province(province) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpi(resident consumer price index (year-on-year)) , ed_consumerpriceindex(consumer price index).yoycpimedicare(medical care and personal care products year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month) , ed_consumerpriceindex(consumer price index).qoqcpitrafficcommunication(transportation and communication month-on-month) , ed_consumerpriceindex(consumer price index).cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services) , ed_consumerpriceindex(consumer price index).qoqcpi(resident consumer price index (month-on-month)) , ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) < _ | select enddate , industrialvalueadded from ed_industryproduction where reportarea = 'National' and statstandard = 'State-owned and above-scale industrial enterprises' and reportperiod = 'monthly' and strftime ( '%Y' , enddate ) < '2000'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.province",
      "ed_taxrate.*",
      "ed_taxrate.secumarket",
      "ed_taxrate.maturity",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.basiscode",
      "ed_taxrate.valueceiling",
      "ed_taxrate.effectivedate",
      "ed_taxrate.valuefloor",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpi",
      "ed_consumerpriceindex.yoycpimedicare",
      "ed_consumerpriceindex.qoqcpientertainmentservice",
      "ed_consumerpriceindex.qoqcpitrafficcommunication",
      "ed_consumerpriceindex.cumcpifamilyequipmentservice",
      "ed_consumerpriceindex.qoqcpi",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice"
    ]
  },
  {
    "question": "What is the amount of goods imported and exported by our country over the past two years?",
    "sql": "select imvalueofgoods, exvalueofgoods from ed_exportimport where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select imvalueofgoods , exvalueofgoods from ed_exportimport where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "enddate(deadline)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "province(province and city)",
          "commodity(product name)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "exvalueofgoods",
          "imvalueofgoods",
          "eximvalueofgoods",
          "province",
          "commodity",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "enddate(deadline)",
          "indexvalue(index)",
          "indexname(index name)",
          "indextype(index category)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "id",
          "enddate",
          "indexvalue",
          "indexname",
          "indextype"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "secumarket(securities market)",
          "valueceiling(maximum value (rmb))",
          "id(record identifier)",
          "ratiofloor(minimum ratio (%))",
          "basiscode(billing baseline)",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "typename",
          "secumarket",
          "valueceiling",
          "id",
          "ratiofloor",
          "basiscode",
          "ratioceiling"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the amount of goods imported and exported by our country over the past two years? | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).reportperiod(data statistical period) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indextype(index category) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%))",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select imvalueofgoods , exvalueofgoods from ed_exportimport where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.enddate",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.province",
      "ed_exportimport.commodity",
      "ed_exportimport.reportperiod",
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indextype",
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.valueceiling",
      "ed_taxrate.id",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.basiscode",
      "ed_taxrate.ratioceiling"
    ]
  },
  {
    "question": "Please list the data records for money and gold and money issuance, in the balance sheet of the monetary authority.",
    "sql": "select moneyandgold, moneyissuance from ed_moneyauthoritybs;",
    "norm_sql": "select moneyandgold , moneyissuance from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "moneyandgold(currency gold (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))",
          "totalliability(total liabilities (in million of rmb))",
          "enddate(deadline)",
          "moneyreserves(reserve currency (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "moneyandgold",
          "moneyissuance",
          "bondissuance",
          "totalliability",
          "enddate",
          "moneyreserves",
          "claimtosavingsbanks"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "sovereigntycountry(the subject country)",
          "id(record identifier)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "reportarea(statistical category of the region)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "gyoyofexvaluegoods",
          "sovereigntycountry",
          "id",
          "gyoyofimvaluegoods",
          "reportarea",
          "imvalueofgoods",
          "eximvalueofgoods"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "province(province)",
          "livalueap(light industry (in million of rmb))",
          "mediumcomap(medium-sized enterprise (light industry))",
          "statstandard(statistical caliber)",
          "id(record identifier)",
          "enddate(deadline)",
          "collectivecomap(collective enterprise (light industry))"
        ],
        "column_names_original_en": [
          "province",
          "livalueap",
          "mediumcomap",
          "statstandard",
          "id",
          "enddate",
          "collectivecomap"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the data records for money and gold and money issuance, in the balance sheet of the monetary authority. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry))",
    "output_sequence": "select _ from _ | select moneyandgold , moneyissuance from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_exportimport.*",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.id",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.reportarea",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_industryproduction.*",
      "ed_industryproduction.province",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.id",
      "ed_industryproduction.enddate",
      "ed_industryproduction.collectivecomap"
    ]
  },
  {
    "question": "What is the latest index value for the \"Textile Industry,\" to which index type does it belong, and please provide the statistics for the \"same period last year.\"",
    "sql": "select indextype, indexvalue from ed_producerpiformp where indexname ='Textile Industry' and reportperiod ='same period last year' order by enddate limit 1;",
    "norm_sql": "select indextype , indexvalue from ed_producerpiformp where indexname = 'Textile Industry' and reportperiod = 'same period last year' order by enddate asc limit 1",
    "sql_skeleton": "select _ from _ where _ order by _ asc limit _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "id"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "id(record identifier)",
          "enddate(deadline)",
          "gdp(gross domestic product (in million of rmb).)",
          "province(province and city)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "id",
          "enddate",
          "gdp",
          "province",
          "thirdindustrygdp",
          "gdppercapita",
          "secondindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "moneyincirculation(currency in circulation)",
          "datatype(data type code)",
          "shorttermloans(short-term loan)",
          "orgdeposits(government and institutional deposits)",
          "overseasloans((two) overseas loans)",
          "savingsdeposits(savings deposits)",
          "mediumlongtermloans(medium-to-long term loans)"
        ],
        "column_names_original_en": [
          "moneyincirculation",
          "datatype",
          "shorttermloans",
          "orgdeposits",
          "overseasloans",
          "savingsdeposits",
          "mediumlongtermloans"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the latest index value for the \"Textile Industry,\" to which index type does it belong, and please provide the statistics for the \"same period last year.\" | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).orgdeposits(government and institutional deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans)",
    "output_sequence": "select _ from _ where _ order by _ asc limit _ | select indextype , indexvalue from ed_producerpiformp where indexname = 'Textile Industry' and reportperiod = 'same period last year' order by enddate asc limit 1",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.orgdeposits",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.mediumlongtermloans"
    ]
  },
  {
    "question": "Query the total assets and total liabilities amount in our balance sheet in the previous year in the balance sheet of other deposit-taking companies.",
    "sql": "select totalassets, totalliabilities from ed_otherdepositorycorpbs where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year'));",
    "norm_sql": "select totalassets , totalliabilities from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "totalassets(total assets)",
          "totalliabilities(total liabilities)",
          "otherliabilities(other liabilities)",
          "otherassets(other assets)",
          "reserveassets(reserve assets)",
          "cashinvault(cash on hand)"
        ],
        "column_names_original_en": [
          "enddate",
          "totalassets",
          "totalliabilities",
          "otherliabilities",
          "otherassets",
          "reserveassets",
          "cashinvault"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "id(record identifier)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "livalueap(light industry (in million of rmb))",
          "reportarea(statistical area category)",
          "largecomap(large-scale enterprise (light industry))"
        ],
        "column_names_original_en": [
          "id",
          "statstandard",
          "industrialvalueadded",
          "stateownedcontrolledcomap",
          "livalueap",
          "reportarea",
          "largecomap"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "enddate(deadline)",
          "accueximvalue(accumulated amount)",
          "accuquantity(accumulated quantity)",
          "operatetype(import and export categories)",
          "category(product category)",
          "id(record identifier)",
          "avgprice(average price)"
        ],
        "column_names_original_en": [
          "enddate",
          "accueximvalue",
          "accuquantity",
          "operatetype",
          "category",
          "id",
          "avgprice"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Query the total assets and total liabilities amount in our balance sheet in the previous year in the balance sheet of other deposit-taking companies. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).accueximvalue(accumulated amount) , ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).operatetype(import and export categories) , ed_productexportimport(product import and export volume).category(product category) , ed_productexportimport(product import and export volume).id(record identifier) , ed_productexportimport(product import and export volume).avgprice(average price)",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) | select totalassets , totalliabilities from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.otherassets",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_industryproduction.*",
      "ed_industryproduction.id",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.largecomap",
      "ed_productexportimport.*",
      "ed_productexportimport.enddate",
      "ed_productexportimport.accueximvalue",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.operatetype",
      "ed_productexportimport.category",
      "ed_productexportimport.id",
      "ed_productexportimport.avgprice"
    ]
  },
  {
    "question": "Please show our tax rate items.",
    "sql": "select itemname from ed_taxrate;",
    "norm_sql": "select itemname from ed_taxrate",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "maturity(repurchase period)",
          "secumarket(securities market)",
          "valueceiling(maximum value (rmb))",
          "effectivedate(effective date)",
          "id(record identifier)",
          "typename(tax rate type)"
        ],
        "column_names_original_en": [
          "itemname",
          "maturity",
          "secumarket",
          "valueceiling",
          "effectivedate",
          "id",
          "typename"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "indexvalue(index value)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextitle",
          "indexvalue",
          "id",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "abroadliability(abroad liabilities (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "bondissuance(bond issuance (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))"
        ],
        "column_names_original_en": [
          "abroadliability",
          "otherforeignassets",
          "claimtosavingsbanks",
          "totalassets",
          "bondissuance",
          "claimtononfinancialinst",
          "moneyissuance"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please show our tax rate items. | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).typename(tax rate type) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb))",
    "output_sequence": "select _ from _ | select itemname from ed_taxrate",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.maturity",
      "ed_taxrate.secumarket",
      "ed_taxrate.valueceiling",
      "ed_taxrate.effectivedate",
      "ed_taxrate.id",
      "ed_taxrate.typename",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.enddate",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.moneyissuance"
    ]
  },
  {
    "question": "What are the records of the amount of nonfinancial organization deposits and money issuance in our monetary authority's balance sheet?",
    "sql": "select nonfinancialorgdeposits, moneyissuance from ed_moneyauthoritybs;",
    "norm_sql": "select nonfinancialorgdeposits , moneyissuance from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "moneyissuance(currency issuance (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "enddate(deadline)",
          "abroadliability(abroad liabilities (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))"
        ],
        "column_names_original_en": [
          "moneyissuance",
          "nonfinancialorgdeposits",
          "otherforeignassets",
          "claimtosavingsbanks",
          "enddate",
          "abroadliability",
          "otherliability"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "enddate(deadline)",
          "id(record identifier)",
          "reportarea(statistical category of the region)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "imvalueofgoods",
          "enddate",
          "id",
          "reportarea",
          "gyoyofexvaluegoods",
          "gyoyofimvaluegoods",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "id(record identifier)",
          "comparetolastmonth(index month-on-month change (points))",
          "indextitle(index name)",
          "reportperiod(data statistical period)",
          "indexvalue(index value)",
          "indexcode(index code)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "id",
          "comparetolastmonth",
          "indextitle",
          "reportperiod",
          "indexvalue",
          "indexcode",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the records of the amount of nonfinancial organization deposits and money issuance in our monetary authority's balance sheet? | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).reportperiod(data statistical period) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).enddate(deadline)",
    "output_sequence": "select _ from _ | select nonfinancialorgdeposits , moneyissuance from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.otherliability",
      "ed_exportimport.*",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.enddate",
      "ed_exportimport.id",
      "ed_exportimport.reportarea",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.reportperiod",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.enddate"
    ]
  },
  {
    "question": "Hi there, do you know which year had the highest total asset amount in the last ten years and can you show the total liability for that year?",
    "sql": "select enddate, totalliability from ed_moneyauthoritybs where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-10 year')) order by totalassets desc limit 1 ;",
    "norm_sql": "select enddate , totalliability from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-10 year' ) ) order by totalassets desc limit 1",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) order by _ desc limit _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "totalassets(total assets (in million of rmb).)",
          "totalliability(total liabilities (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "totalassets",
          "totalliability",
          "moneyreserves",
          "claimtononfinancialinst",
          "moneyissuance",
          "nonfinancialorgdeposits"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "province(province)",
          "reportarea(statistical area category)",
          "largecomap(large-scale enterprise (light industry))",
          "mediumcomap(medium-sized enterprise (light industry))",
          "minitypecomap(small-scale enterprise (light industry))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "reportarea",
          "largecomap",
          "mediumcomap",
          "minitypecomap",
          "id"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "currencycode(currency unit)",
          "accuavgprice(cumulative average price)",
          "enddate(deadline)",
          "statecode(primary country)",
          "accueximvalue(accumulated amount)",
          "category(product category)",
          "eximvalue(amount)"
        ],
        "column_names_original_en": [
          "currencycode",
          "accuavgprice",
          "enddate",
          "statecode",
          "accueximvalue",
          "category",
          "eximvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hi there, do you know which year had the highest total asset amount in the last ten years and can you show the total liability for that year? | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) , ed_industryproduction(industrial production).id(record identifier) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).currencycode(currency unit) , ed_productexportimport(product import and export volume).accuavgprice(cumulative average price) , ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).accueximvalue(accumulated amount) , ed_productexportimport(product import and export volume).category(product category) , ed_productexportimport(product import and export volume).eximvalue(amount)",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) order by _ desc limit _ | select enddate , totalliability from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-10 year' ) ) order by totalassets desc limit 1",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.minitypecomap",
      "ed_industryproduction.id",
      "ed_productexportimport.*",
      "ed_productexportimport.currencycode",
      "ed_productexportimport.accuavgprice",
      "ed_productexportimport.enddate",
      "ed_productexportimport.statecode",
      "ed_productexportimport.accueximvalue",
      "ed_productexportimport.category",
      "ed_productexportimport.eximvalue"
    ]
  },
  {
    "question": "How much central bank currency have we issued in the monetary banking table?",
    "sql": "select centralbankbonds from ed_chinamoneyandbanking;",
    "norm_sql": "select centralbankbonds from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "centralbankbonds(central bank bonds)",
          "netabroadassets(foreign net assets)",
          "enddate(deadline)",
          "claimstogov(claims on the government (net))",
          "money1(currency (narrow money m1))",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))"
        ],
        "column_names_original_en": [
          "centralbankbonds",
          "netabroadassets",
          "enddate",
          "claimstogov",
          "money1",
          "claimstononfinancialinst",
          "moneyandquasimoney"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "gdp(gross domestic product (in million of rmb).)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "gdp",
          "secondindustrygdp",
          "gdppercapita",
          "primaryindustrygdp",
          "province"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "id(record identifier)",
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexvalue(index)",
          "indextype(index category)"
        ],
        "column_names_original_en": [
          "id",
          "indexname",
          "reportperiod",
          "enddate",
          "indexvalue",
          "indextype"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How much central bank currency have we issued in the monetary banking table? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indextype(index category)",
    "output_sequence": "select _ from _ | select centralbankbonds from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_producerpiformp.*",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indextype"
    ]
  },
  {
    "question": "Please help me to see the annual retail sales of consumer goods for the \"national\" catering industry and wholesale and retail trade industry last year.",
    "sql": "select foodbeverage, wholesaleretailtrade from ed_retailvalueofscgoods  where reportarea ='National' and reportperiod ='Annual' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year')) ;",
    "norm_sql": "select foodbeverage , wholesaleretailtrade from ed_retailvalueofscgoods where reportarea = 'National' and reportperiod = 'Annual' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "reportarea(statistical category of region)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "foodbeverage(catering industry)",
          "othersunits(other units)",
          "selfemployed(individual unit)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "reportarea",
          "wholesaleretailtrade",
          "foodbeverage",
          "othersunits",
          "selfemployed"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "foreignassets(foreign net assets)",
          "foreignliabilities(foreign liabilities)",
          "otherliabilities(other liabilities)",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "savingdeposits(resident savings deposits)",
          "depositswithcentralbank(reserve deposit)",
          "totalliabilities(total liabilities)"
        ],
        "column_names_original_en": [
          "foreignassets",
          "foreignliabilities",
          "otherliabilities",
          "liabilitiestonfinst",
          "savingdeposits",
          "depositswithcentralbank",
          "totalliabilities"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "id(record identifier)",
          "indextype(index category)",
          "indexvalue(index)"
        ],
        "column_names_original_en": [
          "indexname",
          "reportperiod",
          "enddate",
          "id",
          "indextype",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me to see the annual retail sales of consumer goods for the \"national\" catering industry and wholesale and retail trade industry last year. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexvalue(index)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select foodbeverage , wholesaleretailtrade from ed_retailvalueofscgoods where reportarea = 'National' and reportperiod = 'Annual' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.foreignliabilities",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexvalue"
    ]
  },
  {
    "question": "I want to know the records of \"Production Materials\" in our \"Industrial Structure Classification Index\". Please list the relevant statistical periods and index values.",
    "sql": "select reportperiod, indexvalue from ed_producerpiformp where indextype='Industrial Structure Classification Index' and indexname='Production Materials';",
    "norm_sql": "select reportperiod , indexvalue from ed_producerpiformp where indextype = 'Industrial Structure Classification Index' and indexname = 'Production Materials'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexvalue(index)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "id(record identifier)",
          "indexname(index name)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "reportperiod",
          "indextype",
          "id",
          "indexname",
          "enddate"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)",
          "ratioceiling(maximum ratio (%))",
          "drrtype(reserve requirement ratio category)"
        ],
        "column_names_original_en": [
          "id",
          "ratiofloor",
          "effectivedate",
          "ratioceiling",
          "drrtype"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indexvalue(index value)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "id(record identifier)",
          "indextitle(index name)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "reportperiod",
          "enddate",
          "id",
          "indextitle"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the records of \"Production Materials\" in our \"Industrial Structure Classification Index\". Please list the relevant statistical periods and index values. | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).enddate(deadline) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name)",
    "output_sequence": "select _ from _ where _ | select reportperiod , indexvalue from ed_producerpiformp where indextype = 'Industrial Structure Classification Index' and indexname = 'Production Materials'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.enddate",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.drrtype",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.indextitle"
    ]
  },
  {
    "question": "What are the records of GDP and year-on-year growth rate of GDP in Jiangsu Province over the years?",
    "sql": "select gdp, gdpgrowthyoy from ed_grossdomesticproduct where province='Jiangsu';",
    "norm_sql": "select gdp , gdpgrowthyoy from ed_grossdomesticproduct where province = 'Jiangsu'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdp(gross domestic product (in million of rmb).)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "province(province and city)",
          "enddate(deadline)",
          "primaryindustrygdp(the primary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "gdp",
          "gdppercapita",
          "thirdindustrygdp",
          "gdpgrowthyoy",
          "province",
          "enddate",
          "primaryindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "largecomap(large-scale enterprise (light industry))",
          "province(province)",
          "livalueap(light industry (in million of rmb))",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "hivalueap(heavy industry (in million of rmb))",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))"
        ],
        "column_names_original_en": [
          "largecomap",
          "province",
          "livalueap",
          "industrialoutputvalueap",
          "industrialvalueadded",
          "hivalueap",
          "stateownedcontrolledcomap"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexvalue(index)",
          "indexname(index name)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "id",
          "reportperiod",
          "indextype",
          "indexvalue",
          "indexname",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the records of GDP and year-on-year growth rate of GDP in Jiangsu Province over the years? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).enddate(deadline)",
    "output_sequence": "select _ from _ where _ | select gdp , gdpgrowthyoy from ed_grossdomesticproduct where province = 'Jiangsu'",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_industryproduction.*",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.province",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_producerpiformp.*",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.enddate"
    ]
  },
  {
    "question": "Is the \"transaction commission rate\" of \"fund\" high? Please list its highest and lowest rates, as well as the threshold and cap values.",
    "sql": "select ratiofloor, ratioceiling, valuefloor, valueceiling from ed_taxrate where typename ='fund' and itemname = 'transaction commission rate' ;",
    "norm_sql": "select ratiofloor , ratioceiling , valuefloor , valueceiling from ed_taxrate where typename = 'fund' and itemname = 'transaction commission rate'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "valuefloor(minimum value/starting point (rmb))",
          "valueceiling(maximum value (rmb))",
          "maturity(repurchase period)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "ratiofloor",
          "ratioceiling",
          "valuefloor",
          "valueceiling",
          "maturity"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "statstandard(statistical caliber)",
          "livalueap(light industry (in million of rmb))",
          "collectivecomap(collective enterprise (light industry))",
          "reportperiod(data statistics interval)",
          "reportarea(statistical area category)",
          "enddate(deadline)",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))"
        ],
        "column_names_original_en": [
          "statstandard",
          "livalueap",
          "collectivecomap",
          "reportperiod",
          "reportarea",
          "enddate",
          "industrialoutputvalueap"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "entrustedloans(trust loan (in 100 million of rmb))",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "creditloans(trust loan (in 100 million rmb))",
          "enddate(deadline)",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))"
        ],
        "column_names_original_en": [
          "entrustedloans",
          "foreigncurrencyloans",
          "socialfinancing",
          "creditloans",
          "enddate",
          "corporatebonds",
          "definancingofnonfe"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Is the \"transaction commission rate\" of \"fund\" high? Please list its highest and lowest rates, as well as the threshold and cap values. | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).maturity(repurchase period) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
    "output_sequence": "select _ from _ where _ | select ratiofloor , ratioceiling , valuefloor , valueceiling from ed_taxrate where typename = 'fund' and itemname = 'transaction commission rate'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valuefloor",
      "ed_taxrate.valueceiling",
      "ed_taxrate.maturity",
      "ed_industryproduction.*",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.collectivecomap",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.enddate",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_socialfinancing.*",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.creditloans",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.definancingofnonfe"
    ]
  },
  {
    "question": "Comrade Lao Li is very concerned about our social retail sales data. Please check the records of the catering industry and wholesale and retail trade. It should be for Shanghai.",
    "sql": "select foodbeverage, wholesaleretailtrade from ed_retailvalueofscgoods where province='Shanghai';",
    "norm_sql": "select foodbeverage , wholesaleretailtrade from ed_retailvalueofscgoods where province = 'Shanghai'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "province(province and city)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "foodbeverage(catering industry)",
          "collectiveunits(collective unit)",
          "stateownedunits(state-owned unit)",
          "county(county)",
          "city(city)"
        ],
        "column_names_original_en": [
          "province",
          "wholesaleretailtrade",
          "foodbeverage",
          "collectiveunits",
          "stateownedunits",
          "county",
          "city"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "id(record identifier)",
          "enddate(deadline)",
          "reportarea(statistical region category)",
          "reportperiod(data statistics interval)",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "rmbloans(rmb loans (in 100 million rmb))"
        ],
        "column_names_original_en": [
          "undiscountedbacceptances",
          "id",
          "enddate",
          "reportarea",
          "reportperiod",
          "corporatebonds",
          "rmbloans"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "cumcpi(cumulative average of resident consumer price index)",
          "qoqcpifamilyequipmentservice(household equipment and services month-on-month)",
          "qoqcpimedicare(healthcare and personal care products month-on-month)",
          "yoycpitobacco(tobacco, alcohol, and supplies year-on-year)",
          "yoycpicloth(clothing year-on-year)",
          "cumcpimedicare(cumulative average of healthcare and personal care products)",
          "yoycpimedicare(medical care and personal care products year-on-year)"
        ],
        "column_names_original_en": [
          "cumcpi",
          "qoqcpifamilyequipmentservice",
          "qoqcpimedicare",
          "yoycpitobacco",
          "yoycpicloth",
          "cumcpimedicare",
          "yoycpimedicare"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Comrade Lao Li is very concerned about our social retail sales data. Please check the records of the catering industry and wholesale and retail trade. It should be for Shanghai. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).qoqcpifamilyequipmentservice(household equipment and services month-on-month) , ed_consumerpriceindex(consumer price index).qoqcpimedicare(healthcare and personal care products month-on-month) , ed_consumerpriceindex(consumer price index).yoycpitobacco(tobacco, alcohol, and supplies year-on-year) , ed_consumerpriceindex(consumer price index).yoycpicloth(clothing year-on-year) , ed_consumerpriceindex(consumer price index).cumcpimedicare(cumulative average of healthcare and personal care products) , ed_consumerpriceindex(consumer price index).yoycpimedicare(medical care and personal care products year-on-year)",
    "output_sequence": "select _ from _ where _ | select foodbeverage , wholesaleretailtrade from ed_retailvalueofscgoods where province = 'Shanghai'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.city",
      "ed_socialfinancing.*",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.id",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.rmbloans",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.qoqcpifamilyequipmentservice",
      "ed_consumerpriceindex.qoqcpimedicare",
      "ed_consumerpriceindex.yoycpitobacco",
      "ed_consumerpriceindex.yoycpicloth",
      "ed_consumerpriceindex.cumcpimedicare",
      "ed_consumerpriceindex.yoycpimedicare"
    ]
  },
  {
    "question": "Li Gong wants to know the records of data after the year 2000, where the export amount of China exceeds 40 million but the export amount decreases compared to the previous year. Provide the date and export amount.",
    "sql": "select enddate, exvalueofgoods from ed_exportimport where gyoyofexvaluegoods < 0 and exvalueofgoods > 40 and strftime('%Y', enddate) > '2000';",
    "norm_sql": "select enddate , exvalueofgoods from ed_exportimport where gyoyofexvaluegoods < 0 and exvalueofgoods > 40 and strftime ( '%Y' , enddate ) > '2000'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "enddate(deadline)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "province(province and city)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "exvalueofgoods",
          "gyoyofexvaluegoods",
          "province",
          "imvalueofgoods",
          "eximvalueofgoods",
          "id"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "otherliability(other liabilities (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "enddate(deadline)",
          "claimtogovernment(claims on the government (in million of rmb))"
        ],
        "column_names_original_en": [
          "otherliability",
          "abroadliability",
          "moneyissuance",
          "otherforeignassets",
          "claimtononfinancialinst",
          "enddate",
          "claimtogovernment"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "id(record identifier)",
          "accuavgprice(cumulative average price)",
          "avgprice(average price)",
          "currencycode(currency unit)",
          "category(product category)",
          "enddate(deadline)",
          "operatetype(import and export categories)"
        ],
        "column_names_original_en": [
          "id",
          "accuavgprice",
          "avgprice",
          "currencycode",
          "category",
          "enddate",
          "operatetype"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Li Gong wants to know the records of data after the year 2000, where the export amount of China exceeds 40 million but the export amount decreases compared to the previous year. Provide the date and export amount. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).id(record identifier) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).id(record identifier) , ed_productexportimport(product import and export volume).accuavgprice(cumulative average price) , ed_productexportimport(product import and export volume).avgprice(average price) , ed_productexportimport(product import and export volume).currencycode(currency unit) , ed_productexportimport(product import and export volume).category(product category) , ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).operatetype(import and export categories)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > _ | select enddate , exvalueofgoods from ed_exportimport where gyoyofexvaluegoods < 0 and exvalueofgoods > 40 and strftime ( '%Y' , enddate ) > '2000'",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.enddate",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.province",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.id",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_productexportimport.*",
      "ed_productexportimport.id",
      "ed_productexportimport.accuavgprice",
      "ed_productexportimport.avgprice",
      "ed_productexportimport.currencycode",
      "ed_productexportimport.category",
      "ed_productexportimport.enddate",
      "ed_productexportimport.operatetype"
    ]
  },
  {
    "question": "Can you help me look at the data records of resident savings deposits in the asset-liability statement of other deposit-taking companies?",
    "sql": "select savingdeposits from ed_otherdepositorycorpbs;",
    "norm_sql": "select savingdeposits from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "savingdeposits(resident savings deposits)",
          "otherassets(other assets)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "totalliabilities(total liabilities)",
          "foreignliabilities(foreign liabilities)"
        ],
        "column_names_original_en": [
          "savingdeposits",
          "otherassets",
          "liabilitiestocentralbank",
          "claimsonothernfinstitute",
          "liabtootherfinancialcorp",
          "totalliabilities",
          "foreignliabilities"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "governmentsavings(government deposits (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))"
        ],
        "column_names_original_en": [
          "governmentsavings",
          "claimtosavingsbanks",
          "claimtogovernment",
          "bondissuance",
          "otherforeignassets",
          "otherliability",
          "claimtootherfinnonfininst"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "maturity(repurchase period)",
          "basiscode(billing baseline)",
          "itemname(tax rate items)",
          "secumarket(securities market)",
          "valuefloor(minimum value/starting point (rmb))",
          "valueceiling(maximum value (rmb))",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "maturity",
          "basiscode",
          "itemname",
          "secumarket",
          "valuefloor",
          "valueceiling",
          "effectivedate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you help me look at the data records of resident savings deposits in the asset-liability statement of other deposit-taking companies? | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).effectivedate(effective date)",
    "output_sequence": "select _ from _ | select savingdeposits from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.otherassets",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.foreignliabilities",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_taxrate.*",
      "ed_taxrate.maturity",
      "ed_taxrate.basiscode",
      "ed_taxrate.itemname",
      "ed_taxrate.secumarket",
      "ed_taxrate.valuefloor",
      "ed_taxrate.valueceiling",
      "ed_taxrate.effectivedate"
    ]
  },
  {
    "question": "What is the annual agricultural tax revenue in Shandong province?",
    "sql": "select agriculturetax from ed_financialbalance where province ='Shandong';",
    "norm_sql": "select agriculturetax from ed_financialbalance where province = 'Shandong'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "province(province and city)",
          "agriculturetax(agricultural tax (in million of rmb))",
          "commercialtax(business tax revenue (in million of rmb))",
          "reportperiod(data statistical period)",
          "gtaxs(various tax revenues growth rate)",
          "gsupportunderdevelopedarea(policy subsidy expenditure growth rate)",
          "nationaldefense(defense expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "agriculturetax",
          "commercialtax",
          "reportperiod",
          "gtaxs",
          "gsupportunderdevelopedarea",
          "nationaldefense"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "assetsatifo(asset in international financial institutions)",
          "equityandotherinvestment(securities and investments)",
          "moneyincirculation(currency in circulation)",
          "loantogov(financial borrowing)",
          "corporatesavings(unit deposit/corporate deposit)",
          "totalloans(various loans)",
          "shorttermloans(short-term loan)"
        ],
        "column_names_original_en": [
          "assetsatifo",
          "equityandotherinvestment",
          "moneyincirculation",
          "loantogov",
          "corporatesavings",
          "totalloans",
          "shorttermloans"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "qoqcpihousing(residential month-to-month)",
          "qoqcpifamilyequipmentservice(household equipment and services month-on-month)",
          "yoycpicloth(clothing year-on-year)",
          "qoqcpicloth(clothing month-on-month)",
          "cumcpifood(accumulated average of food)",
          "qoqcpifood(food price month-on-month)",
          "cumcpicloth(cumulative average of clothing)"
        ],
        "column_names_original_en": [
          "qoqcpihousing",
          "qoqcpifamilyequipmentservice",
          "yoycpicloth",
          "qoqcpicloth",
          "cumcpifood",
          "qoqcpifood",
          "cumcpicloth"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the annual agricultural tax revenue in Shandong province? | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).gtaxs(various tax revenues growth rate) , ed_financialbalance(government revenue and expenditure).gsupportunderdevelopedarea(policy subsidy expenditure growth rate) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).qoqcpihousing(residential month-to-month) , ed_consumerpriceindex(consumer price index).qoqcpifamilyequipmentservice(household equipment and services month-on-month) , ed_consumerpriceindex(consumer price index).yoycpicloth(clothing year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpicloth(clothing month-on-month) , ed_consumerpriceindex(consumer price index).cumcpifood(accumulated average of food) , ed_consumerpriceindex(consumer price index).qoqcpifood(food price month-on-month) , ed_consumerpriceindex(consumer price index).cumcpicloth(cumulative average of clothing)",
    "output_sequence": "select _ from _ where _ | select agriculturetax from ed_financialbalance where province = 'Shandong'",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.province",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.gtaxs",
      "ed_financialbalance.gsupportunderdevelopedarea",
      "ed_financialbalance.nationaldefense",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.qoqcpihousing",
      "ed_consumerpriceindex.qoqcpifamilyequipmentservice",
      "ed_consumerpriceindex.yoycpicloth",
      "ed_consumerpriceindex.qoqcpicloth",
      "ed_consumerpriceindex.cumcpifood",
      "ed_consumerpriceindex.qoqcpifood",
      "ed_consumerpriceindex.cumcpicloth"
    ]
  },
  {
    "question": "What is the amount of liabilities to the central bank? Please check the balance sheet of other deposit-type companies.",
    "sql": "select liabilitiestocentralbank from ed_otherdepositorycorpbs ;",
    "norm_sql": "select liabilitiestocentralbank from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "totalassets(total assets)",
          "timedeposits(fixed deposit for enterprises)",
          "savingdeposits(resident savings deposits)",
          "claimsonotherresidentsec(claims on other resident sectors)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "liabilitiestocentralbank",
          "claimsonotherdepositcorp",
          "totalassets",
          "timedeposits",
          "savingdeposits",
          "claimsonotherresidentsec",
          "enddate"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "id",
          "enddate",
          "reportperiod",
          "indextitle",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "bondissuance(bond issuance (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))"
        ],
        "column_names_original_en": [
          "bondissuance",
          "forex",
          "otherforeignassets",
          "abroadliability",
          "claimtootherfinnonfininst",
          "nonfinancialorgdeposits",
          "governmentsavings"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the amount of liabilities to the central bank? Please check the balance sheet of other deposit-type companies. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb))",
    "output_sequence": "select _ from _ | select liabilitiestocentralbank from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_otherdepositorycorpbs.enddate",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.indexvalue",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.governmentsavings"
    ]
  },
  {
    "question": "What is the minimum ratio of \"reserve requirement ratio\" in our \"deposit-type financial institutions (large-scale)\"?",
    "sql": "select ratiofloor from ed_taxrate where typename ='deposit-type financial institutions (large-scale)' and itemname ='reserve requirement ratio';",
    "norm_sql": "select ratiofloor from ed_taxrate where typename = 'deposit-type financial institutions (large-scale)' and itemname = 'reserve requirement ratio'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)",
          "ratioceiling(maximum ratio (%))",
          "valuefloor(minimum value/starting point (rmb))",
          "basiscode(billing baseline)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "ratiofloor",
          "effectivedate",
          "ratioceiling",
          "valuefloor",
          "basiscode"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpitobacco(tobacco, alcohol, and supplies year-on-year)",
          "cumcpimedicare(cumulative average of healthcare and personal care products)",
          "enddate(deadline)",
          "cumcpitobacco(cumulative average of tobacco, alcohol, and supplies)",
          "qoqcpimedicare(healthcare and personal care products month-on-month)",
          "id(record identifier)",
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)"
        ],
        "column_names_original_en": [
          "yoycpitobacco",
          "cumcpimedicare",
          "enddate",
          "cumcpitobacco",
          "qoqcpimedicare",
          "id",
          "yoycpifamilyequipmentservice"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "bondissuance(bond issuance (in million of rmb))",
          "selfownedmoney(own funds (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "reservedeposits(reserve deposit (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))"
        ],
        "column_names_original_en": [
          "bondissuance",
          "selfownedmoney",
          "totalassets",
          "reservedeposits",
          "moneyreserves",
          "claimtononfinancialinst",
          "otherforeignassets"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the minimum ratio of \"reserve requirement ratio\" in our \"deposit-type financial institutions (large-scale)\"? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).basiscode(billing baseline) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpitobacco(tobacco, alcohol, and supplies year-on-year) , ed_consumerpriceindex(consumer price index).cumcpimedicare(cumulative average of healthcare and personal care products) , ed_consumerpriceindex(consumer price index).enddate(deadline) , ed_consumerpriceindex(consumer price index).cumcpitobacco(cumulative average of tobacco, alcohol, and supplies) , ed_consumerpriceindex(consumer price index).qoqcpimedicare(healthcare and personal care products month-on-month) , ed_consumerpriceindex(consumer price index).id(record identifier) , ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select ratiofloor from ed_taxrate where typename = 'deposit-type financial institutions (large-scale)' and itemname = 'reserve requirement ratio'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.effectivedate",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valuefloor",
      "ed_taxrate.basiscode",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpitobacco",
      "ed_consumerpriceindex.cumcpimedicare",
      "ed_consumerpriceindex.enddate",
      "ed_consumerpriceindex.cumcpitobacco",
      "ed_consumerpriceindex.qoqcpimedicare",
      "ed_consumerpriceindex.id",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.otherforeignassets"
    ]
  },
  {
    "question": "What is the maturity period of \"Treasury Bond Repo\" and what is the threshold for its \"transaction commission rate\"?",
    "sql": "select maturity, valuefloor from ed_taxrate where typename = 'Treasury Bond Repo' and itemname = 'transaction commission rate';",
    "norm_sql": "select maturity , valuefloor from ed_taxrate where typename = 'Treasury Bond Repo' and itemname = 'transaction commission rate'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "yoy(year-on-year increase or decrease (%))",
          "subjectname(indicator name)",
          "reportperiod(statistical period)",
          "id(record identifier)",
          "subjectsum(amount (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "yoy",
          "subjectname",
          "reportperiod",
          "id",
          "subjectsum"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "valuefloor(minimum value/starting point (rmb))",
          "id(record identifier)",
          "typename(tax rate type)",
          "effectivedate(effective date)",
          "maturity(repurchase period)",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "itemname",
          "valuefloor",
          "id",
          "typename",
          "effectivedate",
          "maturity",
          "ratiofloor"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "otherliabilities(other liabilities)",
          "totalliabilities(total liabilities)",
          "id(record identifier)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "reserveassets(reserve assets)",
          "depositsexcludedfromm2(deposits not included in broad money)"
        ],
        "column_names_original_en": [
          "claimsonotherdepositcorp",
          "otherliabilities",
          "totalliabilities",
          "id",
          "liabtootherfinancialcorp",
          "reserveassets",
          "depositsexcludedfromm2"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the maturity period of \"Treasury Bond Repo\" and what is the threshold for its \"transaction commission rate\"? | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money)",
    "output_sequence": "select _ from _ where _ | select maturity , valuefloor from ed_taxrate where typename = 'Treasury Bond Repo' and itemname = 'transaction commission rate'",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectsum",
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.valuefloor",
      "ed_taxrate.id",
      "ed_taxrate.typename",
      "ed_taxrate.effectivedate",
      "ed_taxrate.maturity",
      "ed_taxrate.ratiofloor",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2"
    ]
  },
  {
    "question": "Query the records of Beijing's fiscal revenue growth rate exceeding 1 in the last three years, including the date and the fiscal revenue growth rate field.",
    "sql": "select enddate, gfinancialrevenue from ed_financialbalance where province ='Beijing' and gfinancialrevenue >1 and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select enddate , gfinancialrevenue from ed_financialbalance where province = 'Beijing' and gfinancialrevenue > 1 and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "province(province and city)",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "salestax(business tax (in million of rmb))",
          "agriculturetax(agricultural tax (in million of rmb))",
          "gsocialsecurity(social security expenditure growth rate)",
          "enterpriseincometax(enterprise income tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "gfinancialrevenue",
          "salestax",
          "agriculturetax",
          "gsocialsecurity",
          "enterpriseincometax"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "id(record identifier)",
          "enddate(deadline)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "province(province and city)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "gdp(gross domestic product (in million of rmb).)"
        ],
        "column_names_original_en": [
          "gdpgrowthyoy",
          "id",
          "enddate",
          "gdppercapita",
          "province",
          "primaryindustrygdp",
          "gdp"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "drrtype(reserve requirement ratio category)",
          "effectivedate(effective date)",
          "id(record identifier)",
          "ratioceiling(maximum ratio (%))",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "drrtype",
          "effectivedate",
          "id",
          "ratioceiling",
          "ratiofloor"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Query the records of Beijing's fiscal revenue growth rate exceeding 1 in the last three years, including the date and the fiscal revenue growth rate field. | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gsocialsecurity(social security expenditure growth rate) , ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , gfinancialrevenue from ed_financialbalance where province = 'Beijing' and gfinancialrevenue > 1 and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.province",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.salestax",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.gsocialsecurity",
      "ed_financialbalance.enterpriseincometax",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.gdp",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.ratiofloor"
    ]
  },
  {
    "question": "What is the export value and year-on-year growth rate of export goods in our country two years ago?",
    "sql": "select exvalueofgoods, gyoyofexvaluegoods from ed_exportimport where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select exvalueofgoods , gyoyofexvaluegoods from ed_exportimport where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "enddate(deadline)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "id(record identifier)",
          "province(province and city)",
          "imvalueofgoods(total import amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "enddate",
          "exvalueofgoods",
          "gyoyofexvaluegoods",
          "eximvalueofgoods",
          "id",
          "province",
          "imvalueofgoods"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "id(record identifier)",
          "reportarea(statistical area category)",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "largecomap(large-scale enterprise (light industry))",
          "province(province)",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))"
        ],
        "column_names_original_en": [
          "id",
          "reportarea",
          "industrialoutputvalueap",
          "industrialvalueadded",
          "largecomap",
          "province",
          "stateownedcontrolledcomap"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "governmentsavings(government deposits (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "selfownedmoney(own funds (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "forex(foreign exchange (in million of rmb))"
        ],
        "column_names_original_en": [
          "governmentsavings",
          "claimtosavingsinst",
          "moneyissuance",
          "selfownedmoney",
          "bondissuance",
          "claimtootherfinnonfininst",
          "forex"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the export value and year-on-year growth rate of export goods in our country two years ago? | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) | select exvalueofgoods , gyoyofexvaluegoods from ed_exportimport where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.enddate",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.id",
      "ed_exportimport.province",
      "ed_exportimport.imvalueofgoods",
      "ed_industryproduction.*",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.province",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.forex"
    ]
  },
  {
    "question": "What are the amounts of claims to non-financial institutions and deposits from non-financial organizations in the monetary authority balance sheet?",
    "sql": "select claimtononfinancialinst, nonfinancialorgdeposits from ed_moneyauthoritybs;",
    "norm_sql": "select claimtononfinancialinst , nonfinancialorgdeposits from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))",
          "reservedeposits(reserve deposit (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "enddate(deadline)",
          "governmentsavings(government deposits (in million of rmb))"
        ],
        "column_names_original_en": [
          "claimtononfinancialinst",
          "nonfinancialorgdeposits",
          "abroadliability",
          "reservedeposits",
          "moneyreserves",
          "enddate",
          "governmentsavings"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "valueceiling(maximum value (rmb))",
          "maturity(repurchase period)",
          "basiscode(billing baseline)",
          "secumarket(securities market)",
          "itemname(tax rate items)",
          "ratioceiling(maximum ratio (%))",
          "valuefloor(minimum value/starting point (rmb))"
        ],
        "column_names_original_en": [
          "valueceiling",
          "maturity",
          "basiscode",
          "secumarket",
          "itemname",
          "ratioceiling",
          "valuefloor"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "othersavings(other deposits)",
          "sharesandotherinvestments(equity and other investments)",
          "overseasloans((two) overseas loans)",
          "financialbonds(financial bonds)",
          "totalloans(various loans)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "financedeposits(financial deposit)"
        ],
        "column_names_original_en": [
          "othersavings",
          "sharesandotherinvestments",
          "overseasloans",
          "financialbonds",
          "totalloans",
          "trustedandcreditdeposits",
          "financedeposits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the amounts of claims to non-financial institutions and deposits from non-financial organizations in the monetary authority balance sheet? | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit)",
    "output_sequence": "select _ from _ | select claimtononfinancialinst , nonfinancialorgdeposits from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_taxrate.*",
      "ed_taxrate.valueceiling",
      "ed_taxrate.maturity",
      "ed_taxrate.basiscode",
      "ed_taxrate.secumarket",
      "ed_taxrate.itemname",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valuefloor",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.financedeposits"
    ]
  },
  {
    "question": "Please show the different repurchase periods for \"Government Bond Buyout Repurchase\".",
    "sql": "select maturity from ed_taxrate where typename ='Government Bond Buyout Repurchase';",
    "norm_sql": "select maturity from ed_taxrate where typename = 'Government Bond Buyout Repurchase'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "maturity(repurchase period)",
          "id(record identifier)",
          "effectivedate(effective date)",
          "valueceiling(maximum value (rmb))",
          "secumarket(securities market)",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "typename",
          "maturity",
          "id",
          "effectivedate",
          "valueceiling",
          "secumarket",
          "ratioceiling"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdppercapita(per capita gross domestic product (cny/person))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "province(province and city)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "enddate(deadline)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "gdppercapita",
          "secondindustrygdp",
          "province",
          "gdpgrowthyoy",
          "enddate",
          "primaryindustrygdp",
          "id"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indextype(index category)",
          "reportperiod(data statistical period)",
          "indexvalue(index)",
          "id(record identifier)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "indextype",
          "reportperiod",
          "indexvalue",
          "id",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please show the different repurchase periods for \"Government Bond Buyout Repurchase\". | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexname(index name)",
    "output_sequence": "select _ from _ where _ | select maturity from ed_taxrate where typename = 'Government Bond Buyout Repurchase'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.maturity",
      "ed_taxrate.id",
      "ed_taxrate.effectivedate",
      "ed_taxrate.valueceiling",
      "ed_taxrate.secumarket",
      "ed_taxrate.ratioceiling",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexname"
    ]
  },
  {
    "question": "Please find the maximum record of the accumulated RMB new loan data entered in \"period-end accumulation\" in recent years.",
    "sql": "select max(subjectsum) from ed_newincreasingloan where reportperiod ='period-end accumulation';",
    "norm_sql": "select max ( subjectsum ) from ed_newincreasingloan where reportperiod = 'period-end accumulation'",
    "sql_skeleton": "select max ( _ ) from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "eximvalueofgoods",
          "gyoyofexvaluegoods",
          "gyoyofimvaluegoods",
          "gyoyofeximvaluegoods",
          "reportperiod",
          "enddate",
          "province"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)",
          "enddate(deadline)",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "subjectsum",
          "yoy",
          "id",
          "enddate",
          "subjectname"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "enddate(deadline)",
          "indexvalue(index value (points))",
          "indexname(index name)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "id",
          "enddate",
          "indexvalue",
          "indexname",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please find the maximum record of the accumulated RMB new loan data entered in \"period-end accumulation\" in recent years. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).province(province and city) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period)",
    "output_sequence": "select max ( _ ) from _ where _ | select max ( subjectsum ) from ed_newincreasingloan where reportperiod = 'period-end accumulation'",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.reportperiod",
      "ed_exportimport.enddate",
      "ed_exportimport.province",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectname",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.reportperiod"
    ]
  },
  {
    "question": "What is the amount of net foreign assets, central bank bonds, and foreign currency deposits in China over the years?",
    "sql": "select netabroadassets, centralbankbonds, fcdeposits from ed_chinamoneyandbanking;",
    "norm_sql": "select netabroadassets , centralbankbonds , fcdeposits from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "netabroadassets(foreign net assets)",
          "fcdeposits(foreign currency deposit.)",
          "centralbankbonds(central bank bonds)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "capitalreceived(paid-up capital)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "netabroadassets",
          "fcdeposits",
          "centralbankbonds",
          "claimstootherinst",
          "capitalreceived",
          "claimstospecificsavingorg",
          "id"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "reportarea(statistical category of the region)",
          "reportperiod(data statistical period)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "enddate(deadline)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "sovereigntycountry(the subject country)",
          "commodity(product name)"
        ],
        "column_names_original_en": [
          "reportarea",
          "reportperiod",
          "exvalueofgoods",
          "enddate",
          "gyoyofexvaluegoods",
          "sovereigntycountry",
          "commodity"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "transferabledeposits(transferable deposits)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "timedeposits(fixed deposit for enterprises)",
          "totalassets(total assets)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "transferabledeposits",
          "depositsincludedinm2",
          "reserveassets",
          "depositswithcentralbank",
          "timedeposits",
          "totalassets",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the amount of net foreign assets, central bank bonds, and foreign currency deposits in China over the years? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).commodity(product name) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ | select netabroadassets , centralbankbonds , fcdeposits from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.id",
      "ed_exportimport.*",
      "ed_exportimport.reportarea",
      "ed_exportimport.reportperiod",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.enddate",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.commodity",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "Wang Gong, can you help me check the billing benchmark for \"权证\", as well as the minimum threshold for its \"交易佣金率\"?",
    "sql": "select basiscode, valuefloor from ed_taxrate where typename = 'Warrants' and itemname = 'Transaction Commission Rate';",
    "norm_sql": "select basiscode , valuefloor from ed_taxrate where typename = 'Warrants' and itemname = 'Transaction Commission Rate'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)",
          "typename(tax rate type)",
          "itemname(tax rate items)",
          "valuefloor(minimum value/starting point (rmb))",
          "basiscode(billing baseline)",
          "valueceiling(maximum value (rmb))"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "id",
          "typename",
          "itemname",
          "valuefloor",
          "basiscode",
          "valueceiling"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "commodity(product name)",
          "id(record identifier)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "reportarea(statistical category of the region)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "gyoyofexvaluegoods",
          "commodity",
          "id",
          "gyoyofimvaluegoods",
          "eximvalueofgoods",
          "reportarea",
          "enddate"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "effectivedate(effective date)",
          "drrtype(reserve requirement ratio category)",
          "id(record identifier)",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "effectivedate",
          "drrtype",
          "id",
          "ratiofloor"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Wang Gong, can you help me check the billing benchmark for \"权证\", as well as the minimum threshold for its \"交易佣金率\"? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).enddate(deadline) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%))",
    "output_sequence": "select _ from _ where _ | select basiscode , valuefloor from ed_taxrate where typename = 'Warrants' and itemname = 'Transaction Commission Rate'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.id",
      "ed_taxrate.typename",
      "ed_taxrate.itemname",
      "ed_taxrate.valuefloor",
      "ed_taxrate.basiscode",
      "ed_taxrate.valueceiling",
      "ed_exportimport.*",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.commodity",
      "ed_exportimport.id",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.reportarea",
      "ed_exportimport.enddate",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratiofloor"
    ]
  },
  {
    "question": "Please help me check the net assets abroad and the domestic credit records of our country.",
    "sql": "select netabroadassets, domesticloans from ed_chinamoneyandbanking;",
    "norm_sql": "select netabroadassets , domesticloans from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "id(record identifier)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "money1(currency (narrow money m1))",
          "enddate(deadline)",
          "quasimoney(quasi-currency)"
        ],
        "column_names_original_en": [
          "netabroadassets",
          "domesticloans",
          "id",
          "moneyandquasimoney",
          "money1",
          "enddate",
          "quasimoney"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "province(province and city)",
          "rmbloans(rmb loans (in 100 million rmb))",
          "id(record identifier)",
          "corporatebonds(corporate bonds (in hundred million rmb))"
        ],
        "column_names_original_en": [
          "socialfinancing",
          "definancingofnonfe",
          "undiscountedbacceptances",
          "province",
          "rmbloans",
          "id",
          "corporatebonds"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "enddate(deadline)",
          "province(province and city)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "commodity(product name)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "gyoyofexvaluegoods",
          "enddate",
          "province",
          "imvalueofgoods",
          "commodity",
          "gyoyofimvaluegoods",
          "eximvalueofgoods"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me check the net assets abroad and the domestic credit records of our country. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars))",
    "output_sequence": "select _ from _ | select netabroadassets , domesticloans from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_socialfinancing.*",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.province",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.id",
      "ed_socialfinancing.corporatebonds",
      "ed_exportimport.*",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.enddate",
      "ed_exportimport.province",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.commodity",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.eximvalueofgoods"
    ]
  },
  {
    "question": "Please list the total retail sales of consumer goods in our country and the amount of wholesale and retail trade.",
    "sql": "select retailvalueofscgoods, wholesaleretailtrade from ed_retailvalueofscgoods;",
    "norm_sql": "select retailvalueofscgoods , wholesaleretailtrade from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "reportperiod(data statistics interval)",
          "province(province)",
          "collectivecomap(collective enterprise (light industry))",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "enddate(deadline)",
          "statstandard(statistical caliber)"
        ],
        "column_names_original_en": [
          "stateownedcontrolledcomap",
          "reportperiod",
          "province",
          "collectivecomap",
          "industrialvalueadded",
          "enddate",
          "statstandard"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "totalliabilities(total liabilities)",
          "transferabledeposits(transferable deposits)",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "claimsongovernment(claims on government (net))",
          "depositswithcentralbank(reserve deposit)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "totalliabilities",
          "transferabledeposits",
          "liabilitiestonfinst",
          "liabtootherfinancialcorp",
          "claimsongovernment",
          "depositswithcentralbank",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "county(county)",
          "othersindustry(other industries)",
          "collectiveunits(collective unit)",
          "belowcounty(county and below)",
          "reportarea(statistical category of region)"
        ],
        "column_names_original_en": [
          "retailvalueofscgoods",
          "wholesaleretailtrade",
          "county",
          "othersindustry",
          "collectiveunits",
          "belowcounty",
          "reportarea"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the total retail sales of consumer goods in our country and the amount of wholesale and retail trade. | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).statstandard(statistical caliber) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region)",
    "output_sequence": "select _ from _ | select retailvalueofscgoods , wholesaleretailtrade from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.province",
      "ed_industryproduction.collectivecomap",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.enddate",
      "ed_industryproduction.statstandard",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.enddate",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.reportarea"
    ]
  },
  {
    "question": "The macroeconomy has begun to decline. What is the data of the primary, secondary, and tertiary industries, as well as the per capita GDP, for each year when the macroeconomy started to decline?",
    "sql": "select primaryindustrygdp, secondindustrygdp, thirdindustrygdp, gdppercapita from ed_grossdomesticproduct;",
    "norm_sql": "select primaryindustrygdp , secondindustrygdp , thirdindustrygdp , gdppercapita from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "secondindustrygdp(the second industry (in million of rmb))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "secondindustrygdp",
          "primaryindustrygdp",
          "thirdindustrygdp",
          "gdppercapita",
          "enddate",
          "id",
          "province"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "loantogov(financial borrowing)",
          "overseasloans((two) overseas loans)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "currencyname(currency unit code)",
          "datatype(data type code)",
          "totalsavings(all deposit accounts)",
          "domesticloans((one) domestic loan)"
        ],
        "column_names_original_en": [
          "loantogov",
          "overseasloans",
          "trustedandcreditdeposits",
          "currencyname",
          "datatype",
          "totalsavings",
          "domesticloans"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "money1(currency (narrow money m1))",
          "id(record identifier)",
          "domesticloans(domestic credit)",
          "quasimoney(quasi-currency)",
          "netabroadassets(foreign net assets)",
          "bonds(bonds)"
        ],
        "column_names_original_en": [
          "claimstootherinst",
          "money1",
          "id",
          "domesticloans",
          "quasimoney",
          "netabroadassets",
          "bonds"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "The macroeconomy has begun to decline. What is the data of the primary, secondary, and tertiary industries, as well as the per capita GDP, for each year when the macroeconomy started to decline? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds)",
    "output_sequence": "select _ from _ | select primaryindustrygdp , secondindustrygdp , thirdindustrygdp , gdppercapita from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.bonds"
    ]
  },
  {
    "question": "What is the amount of central bank bonds, capital received, and net assets abroad in the history records of the currency banking database in our country?",
    "sql": "select centralbankbonds, capitalreceived, netabroadassets from ed_chinamoneyandbanking;",
    "norm_sql": "select centralbankbonds , capitalreceived , netabroadassets from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "netabroadassets(foreign net assets)",
          "centralbankbonds(central bank bonds)",
          "capitalreceived(paid-up capital)",
          "enddate(deadline)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "quasimoney(quasi-currency)",
          "domesticloans(domestic credit)"
        ],
        "column_names_original_en": [
          "netabroadassets",
          "centralbankbonds",
          "capitalreceived",
          "enddate",
          "moneyandquasimoney",
          "quasimoney",
          "domesticloans"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "qoqcpi(resident consumer price index (month-on-month))",
          "qoqcpihousing(residential month-to-month)",
          "yoycpihousing(residential year-on-year)",
          "yoycpi(resident consumer price index (year-on-year))",
          "cumcpientertainmentservice(accumulated average of entertainment, education, cultural goods and services)",
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)",
          "cumcpimedicare(cumulative average of healthcare and personal care products)"
        ],
        "column_names_original_en": [
          "qoqcpi",
          "qoqcpihousing",
          "yoycpihousing",
          "yoycpi",
          "cumcpientertainmentservice",
          "yoycpifamilyequipmentservice",
          "cumcpimedicare"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexvalue(index)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexname",
          "reportperiod",
          "indextype",
          "indexvalue",
          "id",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the amount of central bank bonds, capital received, and net assets abroad in the history records of the currency banking database in our country? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).qoqcpi(resident consumer price index (month-on-month)) , ed_consumerpriceindex(consumer price index).qoqcpihousing(residential month-to-month) , ed_consumerpriceindex(consumer price index).yoycpihousing(residential year-on-year) , ed_consumerpriceindex(consumer price index).yoycpi(resident consumer price index (year-on-year)) , ed_consumerpriceindex(consumer price index).cumcpientertainmentservice(accumulated average of entertainment, education, cultural goods and services) , ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year) , ed_consumerpriceindex(consumer price index).cumcpimedicare(cumulative average of healthcare and personal care products) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline)",
    "output_sequence": "select _ from _ | select centralbankbonds , capitalreceived , netabroadassets from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.qoqcpi",
      "ed_consumerpriceindex.qoqcpihousing",
      "ed_consumerpriceindex.yoycpihousing",
      "ed_consumerpriceindex.yoycpi",
      "ed_consumerpriceindex.cumcpientertainmentservice",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice",
      "ed_consumerpriceindex.cumcpimedicare",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate"
    ]
  },
  {
    "question": "Please help me check the annual corporate income tax revenue in Guangdong Province.",
    "sql": "select enterpriseincometax from ed_financialbalance where province ='Guangdong';",
    "norm_sql": "select enterpriseincometax from ed_financialbalance where province = 'Guangdong'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "reportarea(statistical region category)",
          "id(record identifier)",
          "entrustedloans(trust loan (in 100 million of rmb))",
          "reportperiod(data statistics interval)",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "socialfinancing",
          "reportarea",
          "id",
          "entrustedloans",
          "reportperiod",
          "definancingofnonfe",
          "undiscountedbacceptances"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "province(province and city)",
          "enterpriseincometax(enterprise income tax (in million of rmb))",
          "commercialtax(business tax revenue (in million of rmb))",
          "gnationaldefense(defense expenditure growth rate)",
          "nationaldefense(defense expenditure (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))",
          "gfinancialexpenditure(fiscal expenditure growth rate)"
        ],
        "column_names_original_en": [
          "province",
          "enterpriseincometax",
          "commercialtax",
          "gnationaldefense",
          "nationaldefense",
          "valueaddedtax",
          "gfinancialexpenditure"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "unitname(company name)",
          "statecode(primary country)",
          "quantity(quantity)",
          "id(record identifier)",
          "accuavgprice(cumulative average price)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "unitname",
          "statecode",
          "quantity",
          "id",
          "accuavgprice",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me check the annual corporate income tax revenue in Guangdong Province. | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).quantity(quantity) , ed_productexportimport(product import and export volume).id(record identifier) , ed_productexportimport(product import and export volume).accuavgprice(cumulative average price) , ed_productexportimport(product import and export volume).enddate(deadline)",
    "output_sequence": "select _ from _ where _ | select enterpriseincometax from ed_financialbalance where province = 'Guangdong'",
    "tc_original": [
      "ed_socialfinancing.*",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.id",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_financialbalance.*",
      "ed_financialbalance.province",
      "ed_financialbalance.enterpriseincometax",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.nationaldefense",
      "ed_financialbalance.valueaddedtax",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_productexportimport.*",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.unitname",
      "ed_productexportimport.statecode",
      "ed_productexportimport.quantity",
      "ed_productexportimport.id",
      "ed_productexportimport.accuavgprice",
      "ed_productexportimport.enddate"
    ]
  },
  {
    "question": "What are the respective total production values of the primary, secondary, and tertiary industries in Jiangsu Province in the year 2000?",
    "sql": "select primaryindustrygdp, secondindustrygdp, thirdindustrygdp from ed_grossdomesticproduct where strftime('%Y', enddate)='2000' and province ='Jiangsu';",
    "norm_sql": "select primaryindustrygdp , secondindustrygdp , thirdindustrygdp from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = '2000' and province = 'Jiangsu'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _ and _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "id(record identifier)",
          "minitypecomap(small-scale enterprise (light industry))",
          "reportarea(statistical area category)",
          "enddate(deadline)",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "hivalueap(heavy industry (in million of rmb))",
          "province(province)"
        ],
        "column_names_original_en": [
          "id",
          "minitypecomap",
          "reportarea",
          "enddate",
          "stateownedcontrolledcomap",
          "hivalueap",
          "province"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "province(province and city)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "thirdindustrygdp",
          "province",
          "gdppercapita",
          "secondindustrygdp",
          "primaryindustrygdp",
          "gdpgrowthyoy",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "reportperiod(data statistics interval)",
          "entrustedloans(trust loan (in 100 million of rmb))",
          "id(record identifier)",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "entrustedloans",
          "id",
          "corporatebonds",
          "definancingofnonfe",
          "foreigncurrencyloans",
          "province"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the respective total production values of the primary, secondary, and tertiary industries in Jiangsu Province in the year 2000? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).province(province) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).province(province and city)",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ and _ | select primaryindustrygdp , secondindustrygdp , thirdindustrygdp from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = '2000' and province = 'Jiangsu'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.id",
      "ed_industryproduction.minitypecomap",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.enddate",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.province",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.enddate",
      "ed_socialfinancing.*",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.id",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.province"
    ]
  },
  {
    "question": "What is the record in the balance sheet of other deposit-taking companies for the fields of total assets and total liabilities?",
    "sql": "select totalassets, totalliabilities from ed_otherdepositorycorpbs;",
    "norm_sql": "select totalassets , totalliabilities from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "totalassets(total assets)",
          "totalliabilities(total liabilities)",
          "savingdeposits(resident savings deposits)",
          "claimsoncentralbank(claims on central bank)",
          "claimsongovernment(claims on government (net))",
          "reserveassets(reserve assets)",
          "timedeposits(fixed deposit for enterprises)"
        ],
        "column_names_original_en": [
          "totalassets",
          "totalliabilities",
          "savingdeposits",
          "claimsoncentralbank",
          "claimsongovernment",
          "reserveassets",
          "timedeposits"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexvalue(index)",
          "id(record identifier)",
          "indextype(index category)",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "id",
          "indextype",
          "enddate",
          "reportperiod",
          "indexname"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "city(city)",
          "reportarea(statistical category of region)",
          "stateownedunits(state-owned unit)",
          "reportperiod(data statistical period)",
          "foodbeverage(catering industry)",
          "county(county)",
          "othersindustry(other industries)"
        ],
        "column_names_original_en": [
          "city",
          "reportarea",
          "stateownedunits",
          "reportperiod",
          "foodbeverage",
          "county",
          "othersindustry"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the record in the balance sheet of other deposit-taking companies for the fields of total assets and total liabilities? | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexname(index name) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries)",
    "output_sequence": "select _ from _ | select totalassets , totalliabilities from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexname",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.othersindustry"
    ]
  },
  {
    "question": "Show me the maturity period and trading markets for \"Corporate Bond Pledge Repurchase\".",
    "sql": "select maturity, secumarket from ed_taxrate where typename ='Corporate Bond Pledge Repurchase' ;",
    "norm_sql": "select maturity , secumarket from ed_taxrate where typename = 'Corporate Bond Pledge Repurchase'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "secumarket(securities market)",
          "maturity(repurchase period)",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)",
          "basiscode(billing baseline)",
          "itemname(tax rate items)"
        ],
        "column_names_original_en": [
          "typename",
          "secumarket",
          "maturity",
          "ratiofloor",
          "effectivedate",
          "basiscode",
          "itemname"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "bonds(bonds)",
          "capitalreceived(paid-up capital)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "id(record identifier)",
          "enddate(deadline)",
          "fcdeposits(foreign currency deposit.)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))"
        ],
        "column_names_original_en": [
          "bonds",
          "capitalreceived",
          "claimstootherinst",
          "id",
          "enddate",
          "fcdeposits",
          "moneyandquasimoney"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index value (points))",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "reportperiod",
          "indexname",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Show me the maturity period and trading markets for \"Corporate Bond Pledge Repurchase\". | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).itemname(tax rate items) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier)",
    "output_sequence": "select _ from _ where _ | select maturity , secumarket from ed_taxrate where typename = 'Corporate Bond Pledge Repurchase'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.maturity",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.effectivedate",
      "ed_taxrate.basiscode",
      "ed_taxrate.itemname",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.id"
    ]
  },
  {
    "question": "What is the gross domestic product of China in recent years?",
    "sql": "select gdp from ed_grossdomesticproduct;",
    "norm_sql": "select gdp from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdp(gross domestic product (in million of rmb).)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "province(province and city)",
          "enddate(deadline)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "gdp",
          "thirdindustrygdp",
          "primaryindustrygdp",
          "province",
          "enddate",
          "gdpgrowthyoy",
          "id"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))",
          "subjectname(indicator name)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "subjectsum",
          "yoy",
          "subjectname",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "effectivedate(effective date)",
          "drrtype(reserve requirement ratio category)",
          "ratiofloor(minimum ratio (%))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "effectivedate",
          "drrtype",
          "ratiofloor",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the gross domestic product of China in recent years? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).id(record identifier) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).id(record identifier) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).id(record identifier)",
    "output_sequence": "select _ from _ | select gdp from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.id",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.id",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.id"
    ]
  },
  {
    "question": "Do you know the data of \"end-of-period cumulative\" industrial production value for collective enterprises within the scope of \"national\" \"all industrial enterprises\"?",
    "sql": "select enddate, collectivecomap from ed_industryproduction where reportarea ='national' and statstandard ='all industrial enterprises' and reportperiod ='end-of-period cumulative';",
    "norm_sql": "select enddate , collectivecomap from ed_industryproduction where reportarea = 'national' and statstandard = 'all industrial enterprises' and reportperiod = 'end-of-period cumulative'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "collectivecomap(collective enterprise (light industry))",
          "largecomap(large-scale enterprise (light industry))",
          "minitypecomap(small-scale enterprise (light industry))",
          "statstandard(statistical caliber)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)"
        ],
        "column_names_original_en": [
          "enddate",
          "collectivecomap",
          "largecomap",
          "minitypecomap",
          "statstandard",
          "reportarea",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "secumarket(securities market)",
          "typename(tax rate type)",
          "maturity(repurchase period)",
          "itemname(tax rate items)",
          "id(record identifier)",
          "ratioceiling(maximum ratio (%))",
          "valueceiling(maximum value (rmb))"
        ],
        "column_names_original_en": [
          "secumarket",
          "typename",
          "maturity",
          "itemname",
          "id",
          "ratioceiling",
          "valueceiling"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "province(province and city)",
          "reportarea(statistical area category)",
          "socialsecurity(social security expenditure (in million of rmb))",
          "gsocialsecurity(social security expenditure growth rate)",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "commercialtax(business tax revenue (in million of rmb))",
          "agriculturetax(agricultural tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "reportarea",
          "socialsecurity",
          "gsocialsecurity",
          "operatingexpensescesh",
          "commercialtax",
          "agriculturetax"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Do you know the data of \"end-of-period cumulative\" industrial production value for collective enterprises within the scope of \"national\" \"all industrial enterprises\"? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gsocialsecurity(social security expenditure growth rate) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select enddate , collectivecomap from ed_industryproduction where reportarea = 'national' and statstandard = 'all industrial enterprises' and reportperiod = 'end-of-period cumulative'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.collectivecomap",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.minitypecomap",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_taxrate.*",
      "ed_taxrate.secumarket",
      "ed_taxrate.typename",
      "ed_taxrate.maturity",
      "ed_taxrate.itemname",
      "ed_taxrate.id",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valueceiling",
      "ed_financialbalance.*",
      "ed_financialbalance.province",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.socialsecurity",
      "ed_financialbalance.gsocialsecurity",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.agriculturetax"
    ]
  },
  {
    "question": "Since 2000, what is the annual amount of \"Year-end cumulative\" RMB new loans?",
    "sql": "select enddate, subjectsum from ed_newincreasingloan where reportperiod='Year-end cumulative' and strftime('%Y', enddate)>='2000';",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'Year-end cumulative' and strftime ( '%Y' , enddate ) >= '2000'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) >= _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "subjectname(indicator name)",
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "subjectsum",
          "subjectname",
          "id",
          "yoy"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indextype(index category)",
          "reportperiod(data statistical period)",
          "indexvalue(index)",
          "id(record identifier)",
          "enddate(deadline)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "indextype",
          "reportperiod",
          "indexvalue",
          "id",
          "enddate",
          "indexname"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdp(gross domestic product (in million of rmb).)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "enddate(deadline)",
          "id(record identifier)",
          "primaryindustrygdp(the primary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "gdp",
          "gdppercapita",
          "thirdindustrygdp",
          "gdpgrowthyoy",
          "enddate",
          "id",
          "primaryindustrygdp"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Since 2000, what is the annual amount of \"Year-end cumulative\" RMB new loans? | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexname(index name) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) >= _ | select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'Year-end cumulative' and strftime ( '%Y' , enddate ) >= '2000'",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexname",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.primaryindustrygdp"
    ]
  },
  {
    "question": "Please help me check the records in \"State-owned and above-scale industrial enterprises\" in Tianjin City where the \"year-end cumulative\" industrial value added exceeds 2 billion. List the time and industrial value added data.",
    "sql": "select enddate, industrialvalueadded from ed_industryproduction where province = 'Tianjin' and statstandard = 'State-owned and above-scale industrial enterprises' and reportperiod = 'Year-end cumulative' and industrialvalueadded > 200;",
    "norm_sql": "select enddate , industrialvalueadded from ed_industryproduction where province = 'Tianjin' and statstandard = 'State-owned and above-scale industrial enterprises' and reportperiod = 'Year-end cumulative' and industrialvalueadded > 200",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistics interval)",
          "province(province)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "minitypecomap(small-scale enterprise (light industry))",
          "livalueap(light industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "province",
          "statstandard",
          "industrialvalueadded",
          "minitypecomap",
          "livalueap"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "reportperiod(statistical period)",
          "subjectname(indicator name)",
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)",
          "enddate(deadline)",
          "subjectsum(amount (in million of rmb))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "subjectname",
          "yoy",
          "id",
          "enddate",
          "subjectsum"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "id(record identifier)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "reportperiod",
          "enddate",
          "id",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me check the records in \"State-owned and above-scale industrial enterprises\" in Tianjin City where the \"year-end cumulative\" industrial value added exceeds 2 billion. List the time and industrial value added data. | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name)",
    "output_sequence": "select _ from _ where _ | select enddate , industrialvalueadded from ed_industryproduction where province = 'Tianjin' and statstandard = 'State-owned and above-scale industrial enterprises' and reportperiod = 'Year-end cumulative' and industrialvalueadded > 200",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.province",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.minitypecomap",
      "ed_industryproduction.livalueap",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectsum",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexname"
    ]
  },
  {
    "question": "Show the amount of money and gold and the amount of money issuance in the central bank's balance sheet.",
    "sql": "select moneyandgold, moneyissuance from ed_moneyauthoritybs;",
    "norm_sql": "select moneyandgold , moneyissuance from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "otherliability(other liabilities (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))",
          "id(record identifier)",
          "moneyandgold(currency gold (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "forex(foreign exchange (in million of rmb))"
        ],
        "column_names_original_en": [
          "otherliability",
          "otherforeignassets",
          "bondissuance",
          "id",
          "moneyandgold",
          "moneyissuance",
          "forex"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "id(record identifier)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "sovereigntycountry(the subject country)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "gyoyofimvaluegoods",
          "exvalueofgoods",
          "gyoyofeximvaluegoods",
          "id",
          "gyoyofexvaluegoods",
          "sovereigntycountry"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "drrtype(reserve requirement ratio category)",
          "ratioceiling(maximum ratio (%))",
          "effectivedate(effective date)",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "id",
          "drrtype",
          "ratioceiling",
          "effectivedate",
          "ratiofloor"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Show the amount of money and gold and the amount of money issuance in the central bank's balance sheet. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%))",
    "output_sequence": "select _ from _ | select moneyandgold , moneyissuance from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.forex",
      "ed_exportimport.*",
      "ed_exportimport.reportperiod",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.id",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.sovereigntycountry",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratiofloor"
    ]
  },
  {
    "question": "How much is the cumulative industrial production value at the end of the year for large, medium, and small enterprises in \"National\" \"All Industrial Enterprises\" two years ago?",
    "sql": "select largecomap, mediumcomap, minitypecomap from ed_industryproduction  where reportarea ='National' and statstandard ='All Industrial Enterprises' and reportperiod ='Year-end Cumulative' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-2 year')) ;",
    "norm_sql": "select largecomap , mediumcomap , minitypecomap from ed_industryproduction where reportarea = 'National' and statstandard = 'All Industrial Enterprises' and reportperiod = 'Year-end Cumulative' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "largecomap(large-scale enterprise (light industry))",
          "mediumcomap(medium-sized enterprise (light industry))",
          "minitypecomap(small-scale enterprise (light industry))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportarea",
          "reportperiod",
          "statstandard",
          "largecomap",
          "mediumcomap",
          "minitypecomap"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "shorttermloans(short-term loan)",
          "datatype(data type code)",
          "orgdeposits(government and institutional deposits)",
          "moneyincirculation(currency in circulation)",
          "othersavings(other deposits)",
          "mediumlongtermloans(medium-to-long term loans)",
          "financedeposits(financial deposit)"
        ],
        "column_names_original_en": [
          "shorttermloans",
          "datatype",
          "orgdeposits",
          "moneyincirculation",
          "othersavings",
          "mediumlongtermloans",
          "financedeposits"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "qoqcpi(resident consumer price index (month-on-month))",
          "cumcpimedicare(cumulative average of healthcare and personal care products)",
          "cumcpitobacco(cumulative average of tobacco, alcohol, and supplies)",
          "qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month)",
          "enddate(deadline)",
          "cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services)",
          "yoycpitrafficcommunication(transportation and communication year-over-year)"
        ],
        "column_names_original_en": [
          "qoqcpi",
          "cumcpimedicare",
          "cumcpitobacco",
          "qoqcpientertainmentservice",
          "enddate",
          "cumcpifamilyequipmentservice",
          "yoycpitrafficcommunication"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How much is the cumulative industrial production value at the end of the year for large, medium, and small enterprises in \"National\" \"All Industrial Enterprises\" two years ago? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).orgdeposits(government and institutional deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).qoqcpi(resident consumer price index (month-on-month)) , ed_consumerpriceindex(consumer price index).cumcpimedicare(cumulative average of healthcare and personal care products) , ed_consumerpriceindex(consumer price index).cumcpitobacco(cumulative average of tobacco, alcohol, and supplies) , ed_consumerpriceindex(consumer price index).qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month) , ed_consumerpriceindex(consumer price index).enddate(deadline) , ed_consumerpriceindex(consumer price index).cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services) , ed_consumerpriceindex(consumer price index).yoycpitrafficcommunication(transportation and communication year-over-year)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select largecomap , mediumcomap , minitypecomap from ed_industryproduction where reportarea = 'National' and statstandard = 'All Industrial Enterprises' and reportperiod = 'Year-end Cumulative' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.minitypecomap",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.orgdeposits",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.qoqcpi",
      "ed_consumerpriceindex.cumcpimedicare",
      "ed_consumerpriceindex.cumcpitobacco",
      "ed_consumerpriceindex.qoqcpientertainmentservice",
      "ed_consumerpriceindex.enddate",
      "ed_consumerpriceindex.cumcpifamilyequipmentservice",
      "ed_consumerpriceindex.yoycpitrafficcommunication"
    ]
  },
  {
    "question": "Do we have records of the financial institution's credit income and expenses over the years? Please check for savings deposits.",
    "sql": "select savingsdeposits from ed_chinafibalancesheetrmb;",
    "norm_sql": "select savingsdeposits from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "savingsdeposits(savings deposits)",
          "domesticloans((one) domestic loan)",
          "sharesandotherinvestments(equity and other investments)",
          "datatype(data type code)",
          "financialbonds(financial bonds)",
          "assetsatifo(asset in international financial institutions)",
          "corporatesavings(unit deposit/corporate deposit)"
        ],
        "column_names_original_en": [
          "savingsdeposits",
          "domesticloans",
          "sharesandotherinvestments",
          "datatype",
          "financialbonds",
          "assetsatifo",
          "corporatesavings"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "cumcpitrafficcommunication(cumulative average of transportation and communication)",
          "qoqcpi(resident consumer price index (month-on-month))",
          "qoqcpimedicare(healthcare and personal care products month-on-month)",
          "cumcpihousing(accumulated average of residence)",
          "yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year)",
          "yoycpifood(food year-on-year)",
          "cumcpi(cumulative average of resident consumer price index)"
        ],
        "column_names_original_en": [
          "cumcpitrafficcommunication",
          "qoqcpi",
          "qoqcpimedicare",
          "cumcpihousing",
          "yoycpientertainmentservice",
          "yoycpifood",
          "cumcpi"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "salestax(business tax (in million of rmb))",
          "centralgovrevenue(central fiscal revenue (in million of yuan))",
          "reportarea(statistical area category)",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "nationaldefense(defense expenditure (in million of rmb))",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "salestax",
          "centralgovrevenue",
          "reportarea",
          "localgovexpenditure",
          "nationaldefense",
          "localgovrevenue",
          "valueaddedtax"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Do we have records of the financial institution's credit income and expenses over the years? Please check for savings deposits. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).cumcpitrafficcommunication(cumulative average of transportation and communication) , ed_consumerpriceindex(consumer price index).qoqcpi(resident consumer price index (month-on-month)) , ed_consumerpriceindex(consumer price index).qoqcpimedicare(healthcare and personal care products month-on-month) , ed_consumerpriceindex(consumer price index).cumcpihousing(accumulated average of residence) , ed_consumerpriceindex(consumer price index).yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year) , ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).centralgovrevenue(central fiscal revenue (in million of yuan)) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb))",
    "output_sequence": "select _ from _ | select savingsdeposits from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.cumcpitrafficcommunication",
      "ed_consumerpriceindex.qoqcpi",
      "ed_consumerpriceindex.qoqcpimedicare",
      "ed_consumerpriceindex.cumcpihousing",
      "ed_consumerpriceindex.yoycpientertainmentservice",
      "ed_consumerpriceindex.yoycpifood",
      "ed_consumerpriceindex.cumcpi",
      "ed_financialbalance.*",
      "ed_financialbalance.salestax",
      "ed_financialbalance.centralgovrevenue",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.nationaldefense",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.valueaddedtax"
    ]
  },
  {
    "question": "What is the record of central government expenditure and local government expenditure in the financial balance sheet in each province and city in our country over the years?",
    "sql": "select centralgovexpenditure, localgovexpenditure from ed_financialbalance;",
    "norm_sql": "select centralgovexpenditure , localgovexpenditure from ed_financialbalance",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "genterpriseincome(enterprise revenue growth rate)",
          "enddate(deadline)",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "supportunderdevelopedarea(policy subsidy expenditure (in million of rmb))",
          "individualincometax(personal income tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "genterpriseincome",
          "enddate",
          "localgovexpenditure",
          "centralgovexpenditure",
          "operatingexpensescesh",
          "supportunderdevelopedarea",
          "individualincometax"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "yoy",
          "reportperiod",
          "subjectsum",
          "subjectname"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "accuavgprice(cumulative average price)",
          "unitname(company name)",
          "enddate(deadline)",
          "accuquantity(accumulated quantity)",
          "productname(product name)",
          "reportperiod(data statistical period)",
          "operatetype(import and export categories)"
        ],
        "column_names_original_en": [
          "accuavgprice",
          "unitname",
          "enddate",
          "accuquantity",
          "productname",
          "reportperiod",
          "operatetype"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the record of central government expenditure and local government expenditure in the financial balance sheet in each province and city in our country over the years? | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).genterpriseincome(enterprise revenue growth rate) , ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).supportunderdevelopedarea(policy subsidy expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).accuavgprice(cumulative average price) , ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).productname(product name) , ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).operatetype(import and export categories)",
    "output_sequence": "select _ from _ | select centralgovexpenditure , localgovexpenditure from ed_financialbalance",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.genterpriseincome",
      "ed_financialbalance.enddate",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.centralgovexpenditure",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.supportunderdevelopedarea",
      "ed_financialbalance.individualincometax",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.subjectname",
      "ed_productexportimport.*",
      "ed_productexportimport.accuavgprice",
      "ed_productexportimport.unitname",
      "ed_productexportimport.enddate",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.productname",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.operatetype"
    ]
  },
  {
    "question": "Please help check which records in the balance sheet of other deposit-taking companies last year had a total asset amount exceeding 50 million. Show the display time and the total asset amount.",
    "sql": "select enddate, totalassets from ed_otherdepositorycorpbs where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year')) and totalassets > 50000000;",
    "norm_sql": "select enddate , totalassets from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) and totalassets > 50000000",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) and _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)",
          "cumcpi(cumulative average of resident consumer price index)",
          "yoycpifood(food year-on-year)",
          "cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services)",
          "qoqcpitrafficcommunication(transportation and communication month-on-month)",
          "id(record identifier)",
          "yoycpitobacco(tobacco, alcohol, and supplies year-on-year)"
        ],
        "column_names_original_en": [
          "yoycpifamilyequipmentservice",
          "cumcpi",
          "yoycpifood",
          "cumcpifamilyequipmentservice",
          "qoqcpitrafficcommunication",
          "id",
          "yoycpitobacco"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "reportperiod(data statistical period)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "province(province and city)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "sovereigntycountry(the subject country)"
        ],
        "column_names_original_en": [
          "gyoyofexvaluegoods",
          "imvalueofgoods",
          "reportperiod",
          "exvalueofgoods",
          "province",
          "eximvalueofgoods",
          "sovereigntycountry"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "totalassets(total assets)",
          "id(record identifier)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "claimsoncentralbank(claims on central bank)",
          "reserveassets(reserve assets)",
          "otherliabilities(other liabilities)"
        ],
        "column_names_original_en": [
          "enddate",
          "totalassets",
          "id",
          "claimsonothernfinstitute",
          "claimsoncentralbank",
          "reserveassets",
          "otherliabilities"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help check which records in the balance sheet of other deposit-taking companies last year had a total asset amount exceeding 50 million. Show the display time and the total asset amount. | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) , ed_consumerpriceindex(consumer price index).cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services) , ed_consumerpriceindex(consumer price index).qoqcpitrafficcommunication(transportation and communication month-on-month) , ed_consumerpriceindex(consumer price index).id(record identifier) , ed_consumerpriceindex(consumer price index).yoycpitobacco(tobacco, alcohol, and supplies year-on-year) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities)",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) and _ | select enddate , totalassets from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) and totalassets > 50000000",
    "tc_original": [
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.yoycpifood",
      "ed_consumerpriceindex.cumcpifamilyequipmentservice",
      "ed_consumerpriceindex.qoqcpitrafficcommunication",
      "ed_consumerpriceindex.id",
      "ed_consumerpriceindex.yoycpitobacco",
      "ed_exportimport.*",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.reportperiod",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.province",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.sovereigntycountry",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.otherliabilities"
    ]
  },
  {
    "question": "What were the per capita GDP and the total GDP of the tertiary industry in Inner Mongolia in 2000?",
    "sql": "select gdppercapita, thirdindustrygdp from ed_grossdomesticproduct where province ='Inner Mongolia' and  strftime('%Y', enddate)='2000' ;",
    "norm_sql": "select gdppercapita , thirdindustrygdp from ed_grossdomesticproduct where province = 'Inner Mongolia' and strftime ( '%Y' , enddate ) = '2000'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "enddate(deadline)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "gdp(gross domestic product (in million of rmb).)"
        ],
        "column_names_original_en": [
          "province",
          "enddate",
          "thirdindustrygdp",
          "gdppercapita",
          "primaryindustrygdp",
          "gdpgrowthyoy",
          "gdp"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "comparetolastmonth(index month-on-month change (points))",
          "reportarea(statistical region category)",
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "enddate(deadline)",
          "indexvalue(index value)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "comparetolastmonth",
          "reportarea",
          "reportperiod",
          "indextitle",
          "enddate",
          "indexvalue",
          "id"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "statecode(primary country)",
          "unitname(company name)",
          "category(product category)",
          "operatetype(import and export categories)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "accuquantity(accumulated quantity)"
        ],
        "column_names_original_en": [
          "statecode",
          "unitname",
          "category",
          "operatetype",
          "id",
          "reportperiod",
          "accuquantity"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What were the per capita GDP and the total GDP of the tertiary industry in Inner Mongolia in 2000? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).id(record identifier) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).category(product category) , ed_productexportimport(product import and export volume).operatetype(import and export categories) , ed_productexportimport(product import and export volume).id(record identifier) , ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).accuquantity(accumulated quantity)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = _ | select gdppercapita , thirdindustrygdp from ed_grossdomesticproduct where province = 'Inner Mongolia' and strftime ( '%Y' , enddate ) = '2000'",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.gdp",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.id",
      "ed_productexportimport.*",
      "ed_productexportimport.statecode",
      "ed_productexportimport.unitname",
      "ed_productexportimport.category",
      "ed_productexportimport.operatetype",
      "ed_productexportimport.id",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.accuquantity"
    ]
  },
  {
    "question": "Please calculate the data records for the period before 2010, when there was a year-on-year increase in exports and a year-on-year decrease in imports. List the time, import amount, and export amount.",
    "sql": "select enddate, exvalueofgoods, imvalueofgoods from ed_exportimport where gyoyofexvaluegoods > 0 and gyoyofimvaluegoods < 0 and strftime('%Y', enddate)<'2010';",
    "norm_sql": "select enddate , exvalueofgoods , imvalueofgoods from ed_exportimport where gyoyofexvaluegoods > 0 and gyoyofimvaluegoods < 0 and strftime ( '%Y' , enddate ) < '2010'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) < _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "enddate(deadline)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "province(province and city)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "exvalueofgoods",
          "imvalueofgoods",
          "gyoyofexvaluegoods",
          "gyoyofimvaluegoods",
          "province",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "mediumcomap(medium-sized enterprise (light industry))",
          "collectivecomap(collective enterprise (light industry))",
          "minitypecomap(small-scale enterprise (light industry))",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "reportarea(statistical area category)",
          "largecomap(large-scale enterprise (light industry))",
          "reportperiod(data statistics interval)"
        ],
        "column_names_original_en": [
          "mediumcomap",
          "collectivecomap",
          "minitypecomap",
          "stateownedcontrolledcomap",
          "reportarea",
          "largecomap",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "indexvalue(index value (points))",
          "indexname(index name)",
          "enddate(deadline)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "id",
          "indexvalue",
          "indexname",
          "enddate",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please calculate the data records for the period before 2010, when there was a year-on-year increase in exports and a year-on-year decrease in imports. List the time, import amount, and export amount. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).reportperiod(data statistical period) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).reportperiod(data statistics interval) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) < _ | select enddate , exvalueofgoods , imvalueofgoods from ed_exportimport where gyoyofexvaluegoods > 0 and gyoyofimvaluegoods < 0 and strftime ( '%Y' , enddate ) < '2010'",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.enddate",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.province",
      "ed_exportimport.reportperiod",
      "ed_industryproduction.*",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.collectivecomap",
      "ed_industryproduction.minitypecomap",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.reportperiod",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.reportperiod"
    ]
  },
  {
    "question": "Hello, please help me check the index value of \"Furniture manufacturing industry\" in the \"National Economic Industry Index\" for the \"last year same period.\"",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod ='last year same period' and indextype ='National Economic Industry Index' and indexname ='Furniture manufacturing industry';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'last year same period' and indextype = 'National Economic Industry Index' and indexname = 'Furniture manufacturing industry'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexname(index name)",
          "indextype(index category)",
          "id(record identifier)",
          "indexvalue(index)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "enddate",
          "indexname",
          "indextype",
          "id",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "reportarea(statistical area category)",
          "collectivecomap(collective enterprise (light industry))",
          "statstandard(statistical caliber)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "industrialvalueadded",
          "industrialoutputvalueap",
          "reportarea",
          "collectivecomap",
          "statstandard"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "fcdeposits(foreign currency deposit.)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "centralbankbonds(central bank bonds)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "quasimoney(quasi-currency)",
          "claimstogov(claims on the government (net))",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)"
        ],
        "column_names_original_en": [
          "fcdeposits",
          "moneyandquasimoney",
          "centralbankbonds",
          "claimstononfinancialinst",
          "quasimoney",
          "claimstogov",
          "claimstootherinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hello, please help me check the index value of \"Furniture manufacturing industry\" in the \"National Economic Industry Index\" for the \"last year same period.\" | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexvalue(index) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) , ed_industryproduction(industrial production).statstandard(statistical caliber) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'last year same period' and indextype = 'National Economic Industry Index' and indexname = 'Furniture manufacturing industry'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexvalue",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.id",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.collectivecomap",
      "ed_industryproduction.statstandard",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstootherinst"
    ]
  },
  {
    "question": "Please calculate the records of claims against government debt and claims against deposit money banks in the asset and liability statement of the monetary authority two years ago.",
    "sql": "select claimtogovernment, claimtosavingsbanks from ed_moneyauthoritybs where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select claimtogovernment , claimtosavingsbanks from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "selfownedmoney(own funds (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "claimtogovernment",
          "claimtosavingsbanks",
          "otherforeignassets",
          "selfownedmoney",
          "forex",
          "moneyandgold"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "reportarea(statistical area category)",
          "enterpriseincometax(enterprise income tax (in million of rmb))",
          "id(record identifier)",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))",
          "salestax(business tax (in million of rmb))",
          "socialsecurity(social security expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "reportarea",
          "enterpriseincometax",
          "id",
          "expenditurecitymc",
          "centralgovexpenditure",
          "salestax",
          "socialsecurity"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "effectivedate(effective date)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)",
          "drrtype(reserve requirement ratio category)"
        ],
        "column_names_original_en": [
          "effectivedate",
          "ratiofloor",
          "ratioceiling",
          "id",
          "drrtype"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please calculate the records of claims against government debt and claims against deposit money banks in the asset and liability statement of the monetary authority two years ago. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category)",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) | select claimtogovernment , claimtosavingsbanks from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_financialbalance.*",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.enterpriseincometax",
      "ed_financialbalance.id",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.centralgovexpenditure",
      "ed_financialbalance.salestax",
      "ed_financialbalance.socialsecurity",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.drrtype"
    ]
  },
  {
    "question": "List the total retail value of social consumer goods in Shanghai within the annual statistical period.",
    "sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province ='Shanghai' and reportperiod ='annual';",
    "norm_sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Shanghai' and reportperiod = 'annual'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "reportperiod(statistical period)",
          "enddate(deadline)",
          "subjectsum(amount (in million of rmb))",
          "subjectname(indicator name)",
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "enddate",
          "subjectsum",
          "subjectname",
          "id",
          "yoy"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "otherliability(other liabilities (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))",
          "enddate(deadline)",
          "moneyreserves(reserve currency (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))"
        ],
        "column_names_original_en": [
          "otherliability",
          "abroadliability",
          "enddate",
          "moneyreserves",
          "moneyissuance",
          "otherforeignassets",
          "governmentsavings"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "province(province and city)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "belowcounty(county and below)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "othersunits(other units)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "province",
          "retailvalueofscgoods",
          "belowcounty",
          "wholesaleretailtrade",
          "othersunits",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "List the total retail value of social consumer goods in Shanghai within the annual statistical period. | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier)",
    "output_sequence": "select _ from _ where _ | select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Shanghai' and reportperiod = 'annual'",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.id"
    ]
  },
  {
    "question": "What is the number of bond issues and the amount of paid-in capital in our balance sheet of other depository companies?",
    "sql": "select bondissue, paidincapital from ed_otherdepositorycorpbs;",
    "norm_sql": "select bondissue , paidincapital from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "bondissue(bond issuance)",
          "paidincapital(paid-up capital)",
          "timedeposits(fixed deposit for enterprises)",
          "foreignassets(foreign net assets)",
          "claimsongovernment(claims on government (net))",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)"
        ],
        "column_names_original_en": [
          "bondissue",
          "paidincapital",
          "timedeposits",
          "foreignassets",
          "claimsongovernment",
          "liabtootherfinancialcorp",
          "liabilitiestonfinst"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "collectiveunits(collective unit)",
          "jointventures(joint operating unit)",
          "province(province and city)",
          "reportperiod(data statistical period)",
          "stateownedunits(state-owned unit)",
          "othersindustry(other industries)",
          "city(city)"
        ],
        "column_names_original_en": [
          "collectiveunits",
          "jointventures",
          "province",
          "reportperiod",
          "stateownedunits",
          "othersindustry",
          "city"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "indexvalue(index)",
          "id(record identifier)",
          "enddate(deadline)",
          "indextype(index category)"
        ],
        "column_names_original_en": [
          "indexname",
          "reportperiod",
          "indexvalue",
          "id",
          "enddate",
          "indextype"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the number of bond issues and the amount of paid-in capital in our balance sheet of other depository companies? | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indextype(index category)",
    "output_sequence": "select _ from _ | select bondissue , paidincapital from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.city",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indextype"
    ]
  },
  {
    "question": "What are the records of our country's registered capital exceeding 1 million yuan? Please present the records of registered capital in descending order according to time.",
    "sql": "select capitalreceived from ed_chinamoneyandbanking where capitalreceived > 1000000 order by capitalreceived desc ;",
    "norm_sql": "select capitalreceived from ed_chinamoneyandbanking where capitalreceived > 1000000 order by capitalreceived desc",
    "sql_skeleton": "select _ from _ where _ order by _ desc",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "fcdeposits(foreign currency deposit.)",
          "id(record identifier)",
          "capitalreceived(paid-up capital)",
          "enddate(deadline)",
          "quasimoney(quasi-currency)",
          "claimstogov(claims on the government (net))",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)"
        ],
        "column_names_original_en": [
          "fcdeposits",
          "id",
          "capitalreceived",
          "enddate",
          "quasimoney",
          "claimstogov",
          "claimstospecificsavingorg"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "indexvalue(index value)",
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "reportarea(statistical region category)",
          "id(record identifier)",
          "enddate(deadline)",
          "comparetolastmonth(index month-on-month change (points))"
        ],
        "column_names_original_en": [
          "indexvalue",
          "reportperiod",
          "indextitle",
          "reportarea",
          "id",
          "enddate",
          "comparetolastmonth"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "avgprice(average price)",
          "unitname(company name)",
          "statecode(primary country)",
          "id(record identifier)",
          "accuavgprice(cumulative average price)",
          "reportperiod(data statistical period)",
          "operatetype(import and export categories)"
        ],
        "column_names_original_en": [
          "avgprice",
          "unitname",
          "statecode",
          "id",
          "accuavgprice",
          "reportperiod",
          "operatetype"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the records of our country's registered capital exceeding 1 million yuan? Please present the records of registered capital in descending order according to time. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).avgprice(average price) , ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).id(record identifier) , ed_productexportimport(product import and export volume).accuavgprice(cumulative average price) , ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).operatetype(import and export categories)",
    "output_sequence": "select _ from _ where _ order by _ desc | select capitalreceived from ed_chinamoneyandbanking where capitalreceived > 1000000 order by capitalreceived desc",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.comparetolastmonth",
      "ed_productexportimport.*",
      "ed_productexportimport.avgprice",
      "ed_productexportimport.unitname",
      "ed_productexportimport.statecode",
      "ed_productexportimport.id",
      "ed_productexportimport.accuavgprice",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.operatetype"
    ]
  },
  {
    "question": "In 2005, what were the amounts of total savings and total loans in the credit and debit balances of China's financial institutions?",
    "sql": "select totalsavings, totalloans from ed_chinafibalancesheetrmb where strftime('%Y', enddate)='2005';",
    "norm_sql": "select totalsavings , totalloans from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) = '2005'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "totalsavings(all deposit accounts)",
          "totalloans(various loans)",
          "agriculturaldeposits(agricultural deposit)",
          "shorttermloans(short-term loan)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "overseasloans((two) overseas loans)"
        ],
        "column_names_original_en": [
          "enddate",
          "totalsavings",
          "totalloans",
          "agriculturaldeposits",
          "shorttermloans",
          "trustedandcreditdeposits",
          "overseasloans"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indexvalue(index value)",
          "indextitle(index name)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indexvalue",
          "indextitle",
          "id",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))",
          "genterpriseincome(enterprise revenue growth rate)",
          "enterpriseincome(enterprise income (in million of rmb))",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "nationaldefense(defense expenditure (in million of rmb))",
          "gsocialsecurity(social security expenditure growth rate)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "centralgovexpenditure",
          "genterpriseincome",
          "enterpriseincome",
          "localgovrevenue",
          "nationaldefense",
          "gsocialsecurity"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In 2005, what were the amounts of total savings and total loans in the credit and debit balances of China's financial institutions? | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).genterpriseincome(enterprise revenue growth rate) , ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gsocialsecurity(social security expenditure growth rate)",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select totalsavings , totalloans from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) = '2005'",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.overseasloans",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.enddate",
      "ed_financialbalance.*",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.centralgovexpenditure",
      "ed_financialbalance.genterpriseincome",
      "ed_financialbalance.enterpriseincome",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.nationaldefense",
      "ed_financialbalance.gsocialsecurity"
    ]
  },
  {
    "question": "Please list the retail data of social consumer goods for joint ventures.",
    "sql": "select jointventures from ed_retailvalueofscgoods;",
    "norm_sql": "select jointventures from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "jointventures(joint operating unit)",
          "reportarea(statistical category of region)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "belowcounty(county and below)",
          "othersindustry(other industries)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "jointventures",
          "reportarea",
          "retailvalueofscgoods",
          "belowcounty",
          "othersindustry",
          "wholesaleretailtrade",
          "id"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "reportperiod(statistical period)",
          "yoy(year-on-year increase or decrease (%))",
          "subjectname(indicator name)",
          "id(record identifier)",
          "subjectsum(amount (in million of rmb))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "yoy",
          "subjectname",
          "id",
          "subjectsum",
          "enddate"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indexvalue(index value)",
          "indextitle(index name)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "indextitle",
          "id",
          "reportperiod",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the retail data of social consumer goods for joint ventures. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline)",
    "output_sequence": "select _ from _ | select jointventures from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.id",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.enddate",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.enddate"
    ]
  },
  {
    "question": "How much are the recorded export value of our goods and the year-on-year growth and decline data of exports?",
    "sql": "select exvalueofgoods, gyoyofexvaluegoods from ed_exportimport;",
    "norm_sql": "select exvalueofgoods , gyoyofexvaluegoods from ed_exportimport",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "othersunits(other units)",
          "city(city)",
          "stateownedunits(state-owned unit)",
          "foodbeverage(catering industry)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "wholesaleretailtrade(wholesale and retail trade industry)"
        ],
        "column_names_original_en": [
          "othersunits",
          "city",
          "stateownedunits",
          "foodbeverage",
          "reportperiod",
          "enddate",
          "wholesaleretailtrade"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "province(province and city)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "reportarea(statistical category of the region)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "exvalueofgoods",
          "gyoyofexvaluegoods",
          "gyoyofeximvaluegoods",
          "province",
          "gyoyofimvaluegoods",
          "reportarea",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "maturity(repurchase period)",
          "effectivedate(effective date)",
          "ratioceiling(maximum ratio (%))",
          "valueceiling(maximum value (rmb))",
          "basiscode(billing baseline)",
          "valuefloor(minimum value/starting point (rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "maturity",
          "effectivedate",
          "ratioceiling",
          "valueceiling",
          "basiscode",
          "valuefloor",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How much are the recorded export value of our goods and the year-on-year growth and decline data of exports? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).reportperiod(data statistical period) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).id(record identifier)",
    "output_sequence": "select _ from _ | select exvalueofgoods , gyoyofexvaluegoods from ed_exportimport",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_exportimport.*",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.province",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.reportarea",
      "ed_exportimport.reportperiod",
      "ed_taxrate.*",
      "ed_taxrate.maturity",
      "ed_taxrate.effectivedate",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valueceiling",
      "ed_taxrate.basiscode",
      "ed_taxrate.valuefloor",
      "ed_taxrate.id"
    ]
  },
  {
    "question": "What are the amounts of money reserves, money issuance, and reserved deposits in the monetary authority balance sheet?",
    "sql": "select moneyreserves, moneyissuance, reservedeposits from ed_moneyauthoritybs;",
    "norm_sql": "select moneyreserves , moneyissuance , reservedeposits from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "moneyreserves(reserve currency (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "reservedeposits(reserve deposit (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "claimtogovernment(claims on the government (in million of rmb))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "moneyreserves",
          "moneyissuance",
          "reservedeposits",
          "abroadliability",
          "totalassets",
          "claimtogovernment",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indextype(index category)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indexvalue(index)",
          "enddate(deadline)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "indextype",
          "id",
          "reportperiod",
          "indexvalue",
          "enddate",
          "indexname"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "reportarea(statistical category of region)",
          "collectiveunits(collective unit)",
          "othersunits(other units)",
          "id(record identifier)",
          "county(county)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "reportarea",
          "collectiveunits",
          "othersunits",
          "id",
          "county",
          "retailvalueofscgoods"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the amounts of money reserves, money issuance, and reserved deposits in the monetary authority balance sheet? | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexname(index name) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
    "output_sequence": "select _ from _ | select moneyreserves , moneyissuance , reservedeposits from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.enddate",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexname",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.id",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.retailvalueofscgoods"
    ]
  },
  {
    "question": "I want to know the total amount of our exported goods and the year-on-year growth in export value.",
    "sql": "select exvalueofgoods, gyoyofexvaluegoods from ed_exportimport ;",
    "norm_sql": "select exvalueofgoods , gyoyofexvaluegoods from ed_exportimport",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "province(province and city)",
          "reportperiod(data statistical period)",
          "commodity(product name)"
        ],
        "column_names_original_en": [
          "exvalueofgoods",
          "gyoyofexvaluegoods",
          "gyoyofimvaluegoods",
          "gyoyofeximvaluegoods",
          "province",
          "reportperiod",
          "commodity"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "reportarea(statistical category of region)",
          "county(county)",
          "reportperiod(data statistical period)",
          "collectiveunits(collective unit)",
          "othersindustry(other industries)",
          "jointventures(joint operating unit)",
          "othersunits(other units)"
        ],
        "column_names_original_en": [
          "reportarea",
          "county",
          "reportperiod",
          "collectiveunits",
          "othersindustry",
          "jointventures",
          "othersunits"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdp(gross domestic product (in million of rmb).)",
          "enddate(deadline)",
          "id(record identifier)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "gdp",
          "enddate",
          "id",
          "gdpgrowthyoy",
          "thirdindustrygdp",
          "primaryindustrygdp",
          "secondindustrygdp"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the total amount of our exported goods and the year-on-year growth in export value. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).commodity(product name) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb))",
    "output_sequence": "select _ from _ | select exvalueofgoods , gyoyofexvaluegoods from ed_exportimport",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.province",
      "ed_exportimport.reportperiod",
      "ed_exportimport.commodity",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.othersunits",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp"
    ]
  },
  {
    "question": "What is the record of specific deposit institution's debt claim data in the central bank's balance sheet of assets and liabilities, please list it.",
    "sql": "select claimtosavingsbanks from ed_moneyauthoritybs ;",
    "norm_sql": "select claimtosavingsbanks from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)",
          "secumarket(securities market)",
          "id(record identifier)",
          "valueceiling(maximum value (rmb))",
          "itemname(tax rate items)",
          "basiscode(billing baseline)"
        ],
        "column_names_original_en": [
          "ratiofloor",
          "effectivedate",
          "secumarket",
          "id",
          "valueceiling",
          "itemname",
          "basiscode"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "bonds(bonds)",
          "enddate(deadline)",
          "money1(currency (narrow money m1))",
          "domesticloans(domestic credit)",
          "capitalreceived(paid-up capital)",
          "fcdeposits(foreign currency deposit.)",
          "netabroadassets(foreign net assets)"
        ],
        "column_names_original_en": [
          "bonds",
          "enddate",
          "money1",
          "domesticloans",
          "capitalreceived",
          "fcdeposits",
          "netabroadassets"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "id(record identifier)",
          "claimtogovernment(claims on the government (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))"
        ],
        "column_names_original_en": [
          "otherforeignassets",
          "claimtosavingsbanks",
          "forex",
          "id",
          "claimtogovernment",
          "moneyissuance",
          "claimtononfinancialinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the record of specific deposit institution's debt claim data in the central bank's balance sheet of assets and liabilities, please list it. | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).basiscode(billing baseline) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
    "output_sequence": "select _ from _ | select claimtosavingsbanks from ed_moneyauthoritybs",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.effectivedate",
      "ed_taxrate.secumarket",
      "ed_taxrate.id",
      "ed_taxrate.valueceiling",
      "ed_taxrate.itemname",
      "ed_taxrate.basiscode",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.claimtononfinancialinst"
    ]
  },
  {
    "question": "I would like to see which year since 2000 has the highest record of total liabilities, and also display the amount of total assets for that year.",
    "sql": "select enddate, totalassets from ed_moneyauthoritybs where strftime('%Y', enddate)>= '2000' order by totalliability desc limit 1;",
    "norm_sql": "select enddate , totalassets from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) >= '2000' order by totalliability desc limit 1",
    "sql_skeleton": "select _ from _ where strftime ( _ ) >= _ order by _ desc limit _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "totalassets(total assets (in million of rmb).)",
          "totalliability(total liabilities (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "totalassets",
          "totalliability",
          "claimtosavingsinst",
          "moneyreserves",
          "claimtosavingsbanks",
          "abroadliability"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "id(record identifier)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "enddate(deadline)",
          "sovereigntycountry(the subject country)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "id",
          "gyoyofimvaluegoods",
          "enddate",
          "sovereigntycountry",
          "imvalueofgoods",
          "exvalueofgoods",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "corporatesavings(unit deposit/corporate deposit)",
          "totalloans(various loans)",
          "reservedeposits(deposit of reserve funds)",
          "enddate(deadline)",
          "loantogov(financial borrowing)",
          "agriculturaldeposits(agricultural deposit)",
          "financialbonds(financial bonds)"
        ],
        "column_names_original_en": [
          "corporatesavings",
          "totalloans",
          "reservedeposits",
          "enddate",
          "loantogov",
          "agriculturaldeposits",
          "financialbonds"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I would like to see which year since 2000 has the highest record of total liabilities, and also display the amount of total assets for that year. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).reportperiod(data statistical period) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds)",
    "output_sequence": "select _ from _ where strftime ( _ ) >= _ order by _ desc limit _ | select enddate , totalassets from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) >= '2000' order by totalliability desc limit 1",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.abroadliability",
      "ed_exportimport.*",
      "ed_exportimport.id",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.enddate",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.reportperiod",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.financialbonds"
    ]
  },
  {
    "question": "Hey, can you provide a detailed record of non-financial institutions' bonds, claims to government debts, and claims to specific deposit institutions' debts?",
    "sql": "select claimstononfinancialinst, claimstogov, claimstospecificsavingorg from ed_chinamoneyandbanking;",
    "norm_sql": "select claimstononfinancialinst , claimstogov , claimstospecificsavingorg from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "enddate(deadline)",
          "quasimoney(quasi-currency)",
          "centralbankbonds(central bank bonds)"
        ],
        "column_names_original_en": [
          "claimstogov",
          "claimstononfinancialinst",
          "claimstospecificsavingorg",
          "moneyandquasimoney",
          "enddate",
          "quasimoney",
          "centralbankbonds"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "comparetolastmonth(index month-on-month change (points))",
          "indexvalue(index value)",
          "reportperiod(data statistical period)",
          "indexcode(index code)",
          "id(record identifier)",
          "reportarea(statistical region category)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "comparetolastmonth",
          "indexvalue",
          "reportperiod",
          "indexcode",
          "id",
          "reportarea",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "id(record identifier)",
          "enddate(deadline)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))",
          "reportperiod(statistical period)",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "id",
          "enddate",
          "subjectsum",
          "yoy",
          "reportperiod",
          "subjectname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hey, can you provide a detailed record of non-financial institutions' bonds, claims to government debts, and claims to specific deposit institutions' debts? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).enddate(deadline) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name)",
    "output_sequence": "select _ from _ | select claimstononfinancialinst , claimstogov , claimstospecificsavingorg from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.centralbankbonds",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.enddate",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectname"
    ]
  },
  {
    "question": "What is the social retail data of the food and beverage industry and the wholesale and retail trade industry in Chongqing in recent years?",
    "sql": "select foodbeverage, wholesaleretailtrade from ed_retailvalueofscgoods where province='Chongqing';",
    "norm_sql": "select foodbeverage , wholesaleretailtrade from ed_retailvalueofscgoods where province = 'Chongqing'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "province(province and city)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "foodbeverage(catering industry)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "county(county)",
          "reportarea(statistical category of region)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "province",
          "wholesaleretailtrade",
          "foodbeverage",
          "retailvalueofscgoods",
          "county",
          "reportarea",
          "enddate"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "effectivedate(effective date)",
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)",
          "drrtype(reserve requirement ratio category)",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "effectivedate",
          "ratioceiling",
          "id",
          "drrtype",
          "ratiofloor"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "bondissuance(bond issuance (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "bondissuance",
          "moneyandgold",
          "moneyissuance",
          "nonfinancialorgdeposits",
          "abroadliability",
          "forex",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the social retail data of the food and beverage industry and the wholesale and retail trade industry in Chongqing in recent years? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline)",
    "output_sequence": "select _ from _ where _ | select foodbeverage , wholesaleretailtrade from ed_retailvalueofscgoods where province = 'Chongqing'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.enddate",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratiofloor",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.enddate"
    ]
  },
  {
    "question": "Please show what is the minimum ratio for \"Rural Credit Cooperatives\" in \"reserve requirement ratio\"?",
    "sql": "select ratiofloor from ed_taxrate where typename ='Rural Credit Cooperatives' and itemname ='reserve requirement ratio';",
    "norm_sql": "select ratiofloor from ed_taxrate where typename = 'Rural Credit Cooperatives' and itemname = 'reserve requirement ratio'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "ratiofloor(minimum ratio (%))",
          "secumarket(securities market)",
          "id(record identifier)",
          "valueceiling(maximum value (rmb))",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "ratiofloor",
          "secumarket",
          "id",
          "valueceiling",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "stateownedunits(state-owned unit)",
          "reportarea(statistical category of region)",
          "selfemployed(individual unit)",
          "collectiveunits(collective unit)",
          "city(city)",
          "othersindustry(other industries)",
          "county(county)"
        ],
        "column_names_original_en": [
          "stateownedunits",
          "reportarea",
          "selfemployed",
          "collectiveunits",
          "city",
          "othersindustry",
          "county"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "commodity(product name)",
          "reportarea(statistical category of the region)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "province(province and city)",
          "sovereigntycountry(the subject country)"
        ],
        "column_names_original_en": [
          "gyoyofimvaluegoods",
          "gyoyofeximvaluegoods",
          "commodity",
          "reportarea",
          "eximvalueofgoods",
          "province",
          "sovereigntycountry"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please show what is the minimum ratio for \"Rural Credit Cooperatives\" in \"reserve requirement ratio\"? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).effectivedate(effective date) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).sovereigntycountry(the subject country)",
    "output_sequence": "select _ from _ where _ | select ratiofloor from ed_taxrate where typename = 'Rural Credit Cooperatives' and itemname = 'reserve requirement ratio'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.secumarket",
      "ed_taxrate.id",
      "ed_taxrate.valueceiling",
      "ed_taxrate.effectivedate",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.county",
      "ed_exportimport.*",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.commodity",
      "ed_exportimport.reportarea",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.province",
      "ed_exportimport.sovereigntycountry"
    ]
  },
  {
    "question": "How much is the money in circulation in the financial institution's historical credit income and expenditure?",
    "sql": "select moneyincirculation from ed_chinafibalancesheetrmb;",
    "norm_sql": "select moneyincirculation from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "moneyincirculation(currency in circulation)",
          "totalsavings(all deposit accounts)",
          "domesticloans((one) domestic loan)",
          "enddate(deadline)",
          "reservedeposits(deposit of reserve funds)",
          "othersavings(other deposits)",
          "shorttermloans(short-term loan)"
        ],
        "column_names_original_en": [
          "moneyincirculation",
          "totalsavings",
          "domesticloans",
          "enddate",
          "reservedeposits",
          "othersavings",
          "shorttermloans"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "reportperiod(data statistics interval)",
          "id(record identifier)",
          "enddate(deadline)",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "entrustedloans(trust loan (in 100 million of rmb))",
          "reportarea(statistical region category)"
        ],
        "column_names_original_en": [
          "undiscountedbacceptances",
          "reportperiod",
          "id",
          "enddate",
          "definancingofnonfe",
          "entrustedloans",
          "reportarea"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "indexvalue(index value)",
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "id",
          "indexvalue",
          "reportperiod",
          "indextitle",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How much is the money in circulation in the financial institution's historical credit income and expenditure? | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline)",
    "output_sequence": "select _ from _ | select moneyincirculation from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_socialfinancing.*",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.id",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.reportarea",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.enddate"
    ]
  },
  {
    "question": "Can you display the names of the indexes in the \"Industrial Structure Classification Index\"?",
    "sql": "select indexname from ed_producerpiformp where indextype = 'Industrial Structure Classification Index';",
    "norm_sql": "select indexname from ed_producerpiformp where indextype = 'Industrial Structure Classification Index'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indextype(index category)",
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "enddate(deadline)",
          "indexvalue(index)"
        ],
        "column_names_original_en": [
          "indextype",
          "indexname",
          "reportperiod",
          "id",
          "enddate",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "commodity(product name)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "reportarea(statistical category of the region)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "province(province and city)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "exvalueofgoods",
          "commodity",
          "imvalueofgoods",
          "reportarea",
          "gyoyofexvaluegoods",
          "province",
          "eximvalueofgoods"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "qoqcpimedicare(healthcare and personal care products month-on-month)",
          "id(record identifier)",
          "yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year)",
          "enddate(deadline)",
          "cumcpicloth(cumulative average of clothing)",
          "yoycpi(resident consumer price index (year-on-year))",
          "yoycpicloth(clothing year-on-year)"
        ],
        "column_names_original_en": [
          "qoqcpimedicare",
          "id",
          "yoycpientertainmentservice",
          "enddate",
          "cumcpicloth",
          "yoycpi",
          "yoycpicloth"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you display the names of the indexes in the \"Industrial Structure Classification Index\"? | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).qoqcpimedicare(healthcare and personal care products month-on-month) , ed_consumerpriceindex(consumer price index).id(record identifier) , ed_consumerpriceindex(consumer price index).yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year) , ed_consumerpriceindex(consumer price index).enddate(deadline) , ed_consumerpriceindex(consumer price index).cumcpicloth(cumulative average of clothing) , ed_consumerpriceindex(consumer price index).yoycpi(resident consumer price index (year-on-year)) , ed_consumerpriceindex(consumer price index).yoycpicloth(clothing year-on-year)",
    "output_sequence": "select _ from _ where _ | select indexname from ed_producerpiformp where indextype = 'Industrial Structure Classification Index'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_exportimport.*",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.commodity",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.reportarea",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.province",
      "ed_exportimport.eximvalueofgoods",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.qoqcpimedicare",
      "ed_consumerpriceindex.id",
      "ed_consumerpriceindex.yoycpientertainmentservice",
      "ed_consumerpriceindex.enddate",
      "ed_consumerpriceindex.cumcpicloth",
      "ed_consumerpriceindex.yoycpi",
      "ed_consumerpriceindex.yoycpicloth"
    ]
  },
  {
    "question": "I heard that recently in statistical data, what is the amount of self-owned funds and other liabilities in the central bank's balance sheet?",
    "sql": "select selfownedmoney, otherliability from ed_moneyauthoritybs;",
    "norm_sql": "select selfownedmoney , otherliability from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "selfownedmoney(own funds (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))",
          "enddate(deadline)",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))"
        ],
        "column_names_original_en": [
          "selfownedmoney",
          "otherliability",
          "enddate",
          "claimtogovernment",
          "claimtononfinancialinst",
          "governmentsavings",
          "claimtosavingsinst"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "province(province and city)",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "rmbloans(rmb loans (in 100 million rmb))",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "enddate(deadline)",
          "entrustedloans(trust loan (in 100 million of rmb))",
          "socialfinancing(total social financing scale (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "corporatebonds",
          "rmbloans",
          "foreigncurrencyloans",
          "enddate",
          "entrustedloans",
          "socialfinancing"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "drrtype(reserve requirement ratio category)",
          "id(record identifier)",
          "effectivedate(effective date)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "drrtype",
          "id",
          "effectivedate",
          "ratiofloor",
          "ratioceiling"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I heard that recently in statistical data, what is the amount of self-owned funds and other liabilities in the central bank's balance sheet? | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%))",
    "output_sequence": "select _ from _ | select selfownedmoney , otherliability from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_socialfinancing.*",
      "ed_socialfinancing.province",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.socialfinancing",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.ratioceiling"
    ]
  },
  {
    "question": "I want to know the index types in our table of industrial product ex-factory price index.",
    "sql": "select indextype from ed_producerpiformp;",
    "norm_sql": "select indextype from ed_producerpiformp",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)",
          "id(record identifier)",
          "indextype(index category)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indexname",
          "indexvalue",
          "enddate",
          "id",
          "indextype",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "entrustedloans(trust loan (in 100 million of rmb))",
          "id(record identifier)",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "rmbloans(rmb loans (in 100 million rmb))",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "definancingofnonfe",
          "corporatebonds",
          "entrustedloans",
          "id",
          "socialfinancing",
          "rmbloans",
          "undiscountedbacceptances"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "subjectsum(amount (in million of rmb))",
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))",
          "subjectname(indicator name)",
          "reportperiod(statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "subjectsum",
          "id",
          "yoy",
          "subjectname",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the index types in our table of industrial product ex-factory price index. | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period)",
    "output_sequence": "select _ from _ | select indextype from ed_producerpiformp",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.reportperiod",
      "ed_socialfinancing.*",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.id",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.reportperiod"
    ]
  },
  {
    "question": "Please confirm the highest and lowest ratio of \"Excess Deposit Reserve Ratio\" for our \"Chinese Small to Medium-sized Banks.\"",
    "sql": "select ratioceiling, ratiofloor from ed_taxrate where typename='Chinese Small to Medium-sized Banks' and itemname='Excess Deposit Reserve Ratio';",
    "norm_sql": "select ratioceiling , ratiofloor from ed_taxrate where typename = 'Chinese Small to Medium-sized Banks' and itemname = 'Excess Deposit Reserve Ratio'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)",
          "secumarket(securities market)",
          "valueceiling(maximum value (rmb))"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "ratiofloor",
          "ratioceiling",
          "id",
          "secumarket",
          "valueceiling"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "id(record identifier)",
          "timedeposits(fixed deposit for enterprises)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "enddate(deadline)",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "totalassets(total assets)"
        ],
        "column_names_original_en": [
          "id",
          "timedeposits",
          "claimsonothernfinstitute",
          "enddate",
          "liabilitiestonfinst",
          "liabilitiestocentralbank",
          "totalassets"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "cumcpihousing(accumulated average of residence)",
          "cumcpicloth(cumulative average of clothing)",
          "qoqcpitobacco(tobacco, alcohol, and supplies month-on-month)",
          "id(record identifier)",
          "cumcpitrafficcommunication(cumulative average of transportation and communication)",
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)",
          "yoycpimedicare(medical care and personal care products year-on-year)"
        ],
        "column_names_original_en": [
          "cumcpihousing",
          "cumcpicloth",
          "qoqcpitobacco",
          "id",
          "cumcpitrafficcommunication",
          "yoycpifamilyequipmentservice",
          "yoycpimedicare"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please confirm the highest and lowest ratio of \"Excess Deposit Reserve Ratio\" for our \"Chinese Small to Medium-sized Banks.\" | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).cumcpihousing(accumulated average of residence) , ed_consumerpriceindex(consumer price index).cumcpicloth(cumulative average of clothing) , ed_consumerpriceindex(consumer price index).qoqcpitobacco(tobacco, alcohol, and supplies month-on-month) , ed_consumerpriceindex(consumer price index).id(record identifier) , ed_consumerpriceindex(consumer price index).cumcpitrafficcommunication(cumulative average of transportation and communication) , ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year) , ed_consumerpriceindex(consumer price index).yoycpimedicare(medical care and personal care products year-on-year)",
    "output_sequence": "select _ from _ where _ | select ratioceiling , ratiofloor from ed_taxrate where typename = 'Chinese Small to Medium-sized Banks' and itemname = 'Excess Deposit Reserve Ratio'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.id",
      "ed_taxrate.secumarket",
      "ed_taxrate.valueceiling",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.cumcpihousing",
      "ed_consumerpriceindex.cumcpicloth",
      "ed_consumerpriceindex.qoqcpitobacco",
      "ed_consumerpriceindex.id",
      "ed_consumerpriceindex.cumcpitrafficcommunication",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice",
      "ed_consumerpriceindex.yoycpimedicare"
    ]
  },
  {
    "question": "Can we list the GDP and the corresponding YoY amount for each province and city over the past three years?",
    "sql": "select gdp, gdpgrowthyoy from ed_grossdomesticproduct where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select gdp , gdpgrowthyoy from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "province(province and city)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "gdp(gross domestic product (in million of rmb).)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "thirdindustrygdp",
          "primaryindustrygdp",
          "gdpgrowthyoy",
          "gdp",
          "id"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "quantity(quantity)",
          "operatetype(import and export categories)",
          "category(product category)",
          "productname(product name)",
          "statecode(primary country)",
          "unitname(company name)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "quantity",
          "operatetype",
          "category",
          "productname",
          "statecode",
          "unitname"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "enddate(deadline)",
          "creditloans(trust loan (in 100 million rmb))",
          "reportarea(statistical region category)",
          "province(province and city)",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "definancingofnonfe",
          "enddate",
          "creditloans",
          "reportarea",
          "province",
          "undiscountedbacceptances",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can we list the GDP and the corresponding YoY amount for each province and city over the past three years? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).id(record identifier) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).quantity(quantity) , ed_productexportimport(product import and export volume).operatetype(import and export categories) , ed_productexportimport(product import and export volume).category(product category) , ed_productexportimport(product import and export volume).productname(product name) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).unitname(company name) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier)",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select gdp , gdpgrowthyoy from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.id",
      "ed_productexportimport.*",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.quantity",
      "ed_productexportimport.operatetype",
      "ed_productexportimport.category",
      "ed_productexportimport.productname",
      "ed_productexportimport.statecode",
      "ed_productexportimport.unitname",
      "ed_socialfinancing.*",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.creditloans",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.province",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.id"
    ]
  },
  {
    "question": "What are the records of our claims to other financial institutions and non-financial sectors in the monetary authority's balance sheet in the past 5 years?",
    "sql": "select claimtootherfinnonfininst, claimtononfinancialinst from ed_moneyauthoritybs where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-5 year'));",
    "norm_sql": "select claimtootherfinnonfininst , claimtononfinancialinst from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-5 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "enddate(deadline)",
          "reservedeposits(reserve deposit (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))"
        ],
        "column_names_original_en": [
          "claimtononfinancialinst",
          "claimtootherfinnonfininst",
          "enddate",
          "reservedeposits",
          "moneyandgold",
          "otherforeignassets",
          "claimtogovernment"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "enddate(deadline)",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "province(province and city)",
          "creditloans(trust loan (in 100 million rmb))",
          "entrustedloans(trust loan (in 100 million of rmb))",
          "reportarea(statistical region category)"
        ],
        "column_names_original_en": [
          "definancingofnonfe",
          "enddate",
          "undiscountedbacceptances",
          "province",
          "creditloans",
          "entrustedloans",
          "reportarea"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))",
          "subjectsum(amount (in million of rmb))",
          "subjectname(indicator name)",
          "enddate(deadline)",
          "reportperiod(statistical period)"
        ],
        "column_names_original_en": [
          "id",
          "yoy",
          "subjectsum",
          "subjectname",
          "enddate",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the records of our claims to other financial institutions and non-financial sectors in the monetary authority's balance sheet in the past 5 years? | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period)",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select claimtootherfinnonfininst , claimtononfinancialinst from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-5 year' ) )",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_socialfinancing.*",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.province",
      "ed_socialfinancing.creditloans",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.reportarea",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod"
    ]
  },
  {
    "question": "Please provide the records from data stored by \"End of Period Cumulative\" where the amount of newly added RMB loans is less than 200,000. List the time and the added amount.",
    "sql": "select enddate, subjectsum from ed_newincreasingloan where reportperiod = 'End of Period Cumulative' and subjectsum < 200000;",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'End of Period Cumulative' and subjectsum < 200000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "subjectname(indicator name)",
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "subjectsum",
          "subjectname",
          "id",
          "yoy"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "drrtype(reserve requirement ratio category)",
          "ratioceiling(maximum ratio (%))",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "id",
          "drrtype",
          "ratioceiling",
          "ratiofloor",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "id(record identifier)",
          "gdp(gross domestic product (in million of rmb).)",
          "enddate(deadline)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "province(province and city)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)"
        ],
        "column_names_original_en": [
          "id",
          "gdp",
          "enddate",
          "gdppercapita",
          "province",
          "primaryindustrygdp",
          "gdpgrowthyoy"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please provide the records from data stored by \"End of Period Cumulative\" where the amount of newly added RMB loans is less than 200,000. List the time and the added amount. | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
    "output_sequence": "select _ from _ where _ | select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'End of Period Cumulative' and subjectsum < 200000",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.effectivedate",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.gdpgrowthyoy"
    ]
  },
  {
    "question": "Check our domestic gross domestic product data and per capita gross domestic product data.",
    "sql": "select gdp, gdppercapita from ed_grossdomesticproduct;",
    "norm_sql": "select gdp , gdppercapita from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdp(gross domestic product (in million of rmb).)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "id(record identifier)",
          "province(province and city)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "gdp",
          "gdppercapita",
          "gdpgrowthyoy",
          "id",
          "province",
          "primaryindustrygdp",
          "secondindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexname(index name)",
          "id(record identifier)",
          "indextype(index category)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexvalue(index)"
        ],
        "column_names_original_en": [
          "indexname",
          "id",
          "indextype",
          "reportperiod",
          "enddate",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "effectivedate(effective date)",
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "id(record identifier)",
          "valueceiling(maximum value (rmb))",
          "valuefloor(minimum value/starting point (rmb))",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "effectivedate",
          "itemname",
          "typename",
          "id",
          "valueceiling",
          "valuefloor",
          "ratioceiling"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Check our domestic gross domestic product data and per capita gross domestic product data. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%))",
    "output_sequence": "select _ from _ | select gdp , gdppercapita from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_taxrate.*",
      "ed_taxrate.effectivedate",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.id",
      "ed_taxrate.valueceiling",
      "ed_taxrate.valuefloor",
      "ed_taxrate.ratioceiling"
    ]
  },
  {
    "question": "What are the base code, minimum value, and maximum value of the \"Transaction Commission Rate\" in our A-share market?",
    "sql": "select basiscode, valuefloor, valueceiling from ed_taxrate where typename='A-share' and itemname='Transaction Commission Rate';",
    "norm_sql": "select basiscode , valuefloor , valueceiling from ed_taxrate where typename = 'A-share' and itemname = 'Transaction Commission Rate'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "effectivedate(effective date)",
          "id(record identifier)",
          "valuefloor(minimum value/starting point (rmb))",
          "valueceiling(maximum value (rmb))",
          "basiscode(billing baseline)",
          "itemname(tax rate items)",
          "typename(tax rate type)"
        ],
        "column_names_original_en": [
          "effectivedate",
          "id",
          "valuefloor",
          "valueceiling",
          "basiscode",
          "itemname",
          "typename"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "id(record identifier)",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "entrustedloans(trust loan (in 100 million of rmb))",
          "enddate(deadline)",
          "reportperiod(data statistics interval)"
        ],
        "column_names_original_en": [
          "undiscountedbacceptances",
          "id",
          "foreigncurrencyloans",
          "corporatebonds",
          "entrustedloans",
          "enddate",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indexvalue(index value (points))",
          "enddate(deadline)",
          "indexname(index name)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indexvalue",
          "enddate",
          "indexname",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the base code, minimum value, and maximum value of the \"Transaction Commission Rate\" in our A-share market? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier)",
    "output_sequence": "select _ from _ where _ | select basiscode , valuefloor , valueceiling from ed_taxrate where typename = 'A-share' and itemname = 'Transaction Commission Rate'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.effectivedate",
      "ed_taxrate.id",
      "ed_taxrate.valuefloor",
      "ed_taxrate.valueceiling",
      "ed_taxrate.basiscode",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_socialfinancing.*",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.id",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.reportperiod",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.id"
    ]
  },
  {
    "question": "Wang Gong wants to know the data records of total assets and total liabilities in the Central Bank's balance sheet.",
    "sql": "select totalassets, totalliability from ed_moneyauthoritybs;",
    "norm_sql": "select totalassets , totalliability from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "supportunderdevelopedarea(policy subsidy expenditure (in million of rmb))",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "gsupportunderdevelopedarea(policy subsidy expenditure growth rate)",
          "individualincometax(personal income tax (in million of rmb))",
          "nationaldefense(defense expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "supportunderdevelopedarea",
          "gfinancialrevenue",
          "localgovrevenue",
          "gfinancialexpenditure",
          "gsupportunderdevelopedarea",
          "individualincometax",
          "nationaldefense"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "totalassets(total assets (in million of rmb).)",
          "totalliability(total liabilities (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))"
        ],
        "column_names_original_en": [
          "totalassets",
          "totalliability",
          "claimtosavingsinst",
          "moneyandgold",
          "moneyreserves",
          "governmentsavings",
          "nonfinancialorgdeposits"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "subjectsum(amount (in million of rmb))",
          "reportperiod(statistical period)",
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))",
          "enddate(deadline)",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "subjectsum",
          "reportperiod",
          "id",
          "yoy",
          "enddate",
          "subjectname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Wang Gong wants to know the data records of total assets and total liabilities in the Central Bank's balance sheet. | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).supportunderdevelopedarea(policy subsidy expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).gsupportunderdevelopedarea(policy subsidy expenditure growth rate) , ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name)",
    "output_sequence": "select _ from _ | select totalassets , totalliability from ed_moneyauthoritybs",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.supportunderdevelopedarea",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.gsupportunderdevelopedarea",
      "ed_financialbalance.individualincometax",
      "ed_financialbalance.nationaldefense",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectname"
    ]
  },
  {
    "question": "What is the record of the bond issuance data in the balance sheet of other deposit-taking companies? Please check it.",
    "sql": "select bondissue from ed_otherdepositorycorpbs;",
    "norm_sql": "select bondissue from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "bondissue(bond issuance)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "savingdeposits(resident savings deposits)",
          "enddate(deadline)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "timedeposits(fixed deposit for enterprises)",
          "claimsonotherresidentsec(claims on other resident sectors)"
        ],
        "column_names_original_en": [
          "bondissue",
          "claimsonotherdepositcorp",
          "savingdeposits",
          "enddate",
          "depositsincludedinm2",
          "timedeposits",
          "claimsonotherresidentsec"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "statstandard(statistical caliber)",
          "livalueap(light industry (in million of rmb))",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "reportperiod(data statistics interval)",
          "province(province)"
        ],
        "column_names_original_en": [
          "enddate",
          "statstandard",
          "livalueap",
          "industrialvalueadded",
          "industrialoutputvalueap",
          "reportperiod",
          "province"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))",
          "subjectsum(amount (in million of rmb))",
          "subjectname(indicator name)",
          "reportperiod(statistical period)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "id",
          "yoy",
          "subjectsum",
          "subjectname",
          "reportperiod",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the record of the bond issuance data in the balance sheet of other deposit-taking companies? Please check it. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).province(province) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).enddate(deadline)",
    "output_sequence": "select _ from _ | select bondissue from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.province",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.enddate"
    ]
  },
  {
    "question": "What are the highest and lowest ratio rates for \"transaction commission rate\" when the \"repurchase agreement\" has different repurchase periods?",
    "sql": "select maturity, ratiofloor, ratioceiling from ed_taxrate where typename ='Repurchase Agreement for Treasury Bonds' and itemname ='Transaction Commission Rate' ;",
    "norm_sql": "select maturity , ratiofloor , ratioceiling from ed_taxrate where typename = 'Repurchase Agreement for Treasury Bonds' and itemname = 'Transaction Commission Rate'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "maturity(repurchase period)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "valueceiling(maximum value (rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "maturity",
          "ratiofloor",
          "ratioceiling",
          "valueceiling",
          "id"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "reservedeposits(deposit of reserve funds)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "othersavings(other deposits)",
          "mediumlongtermloans(medium-to-long term loans)",
          "financialbonds(financial bonds)",
          "orgdeposits(government and institutional deposits)",
          "agriculturaldeposits(agricultural deposit)"
        ],
        "column_names_original_en": [
          "reservedeposits",
          "trustedandcreditdeposits",
          "othersavings",
          "mediumlongtermloans",
          "financialbonds",
          "orgdeposits",
          "agriculturaldeposits"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "quasimoney(quasi-currency)",
          "enddate(deadline)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "domesticloans(domestic credit)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "quasimoney",
          "enddate",
          "moneyandquasimoney",
          "domesticloans",
          "claimstootherinst",
          "claimstospecificsavingorg",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the highest and lowest ratio rates for \"transaction commission rate\" when the \"repurchase agreement\" has different repurchase periods? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).id(record identifier) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).orgdeposits(government and institutional deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier)",
    "output_sequence": "select _ from _ where _ | select maturity , ratiofloor , ratioceiling from ed_taxrate where typename = 'Repurchase Agreement for Treasury Bonds' and itemname = 'Transaction Commission Rate'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.maturity",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valueceiling",
      "ed_taxrate.id",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.orgdeposits",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.id"
    ]
  },
  {
    "question": "I would like to know the maximum and minimum values of total assets and total liabilities since 2000.",
    "sql": "select max(totalassets),min(totalassets), max(totalliability), min(totalliability) from ed_moneyauthoritybs where strftime('%Y', enddate)>='2000';",
    "norm_sql": "select max ( totalassets ) , min ( totalassets ) , max ( totalliability ) , min ( totalliability ) from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) >= '2000'",
    "sql_skeleton": "select max ( _ ) , min ( _ ) , max ( _ ) , min ( _ ) from _ where strftime ( _ ) >= _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "totalassets(total assets (in million of rmb).)",
          "totalliability(total liabilities (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "totalassets",
          "totalliability",
          "claimtootherfinnonfininst",
          "moneyreserves",
          "claimtosavingsinst",
          "bondissuance"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "rmbloans(rmb loans (in 100 million rmb))",
          "id(record identifier)",
          "province(province and city)",
          "entrustedloans(trust loan (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "foreigncurrencyloans",
          "undiscountedbacceptances",
          "socialfinancing",
          "rmbloans",
          "id",
          "province",
          "entrustedloans"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "foreignliabilities(foreign liabilities)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "otherliabilities(other liabilities)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "totalassets(total assets)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)"
        ],
        "column_names_original_en": [
          "foreignliabilities",
          "depositsincludedinm2",
          "otherliabilities",
          "liabtootherfinancialcorp",
          "totalassets",
          "claimsonothernfinstitute",
          "liabtootherdepositcorp"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I would like to know the maximum and minimum values of total assets and total liabilities since 2000. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
    "output_sequence": "select max ( _ ) , min ( _ ) , max ( _ ) , min ( _ ) from _ where strftime ( _ ) >= _ | select max ( totalassets ) , min ( totalassets ) , max ( totalliability ) , min ( totalliability ) from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) >= '2000'",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.bondissuance",
      "ed_socialfinancing.*",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.id",
      "ed_socialfinancing.province",
      "ed_socialfinancing.entrustedloans",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.foreignliabilities",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp"
    ]
  },
  {
    "question": "What is the social retail sales data of these municipalities? Look up the total social retail sales of Chongqing in recent years.",
    "sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Chongqing';",
    "norm_sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Chongqing'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "province(province and city)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "foodbeverage(catering industry)",
          "enddate(deadline)",
          "county(county)",
          "belowcounty(county and below)",
          "othersindustry(other industries)"
        ],
        "column_names_original_en": [
          "province",
          "retailvalueofscgoods",
          "foodbeverage",
          "enddate",
          "county",
          "belowcounty",
          "othersindustry"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "province(province and city)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "id(record identifier)",
          "commodity(product name)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "imvalueofgoods",
          "gyoyofimvaluegoods",
          "province",
          "exvalueofgoods",
          "id",
          "commodity",
          "gyoyofexvaluegoods"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdppercapita(per capita gross domestic product (cny/person))",
          "enddate(deadline)",
          "id(record identifier)",
          "gdp(gross domestic product (in million of rmb).)",
          "province(province and city)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "primaryindustrygdp(the primary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "gdppercapita",
          "enddate",
          "id",
          "gdp",
          "province",
          "gdpgrowthyoy",
          "primaryindustrygdp"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the social retail sales data of these municipalities? Look up the total social retail sales of Chongqing in recent years. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Chongqing'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_exportimport.*",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.province",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.id",
      "ed_exportimport.commodity",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.primaryindustrygdp"
    ]
  },
  {
    "question": "Please help me check the quantities of our bonds and central bank bonds separately.",
    "sql": "select bonds, centralbankbonds from ed_chinamoneyandbanking;",
    "norm_sql": "select bonds , centralbankbonds from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "bonds(bonds)",
          "centralbankbonds(central bank bonds)",
          "fcdeposits(foreign currency deposit.)",
          "quasimoney(quasi-currency)",
          "netabroadassets(foreign net assets)",
          "money1(currency (narrow money m1))",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)"
        ],
        "column_names_original_en": [
          "bonds",
          "centralbankbonds",
          "fcdeposits",
          "quasimoney",
          "netabroadassets",
          "money1",
          "claimstospecificsavingorg"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "agriculturetax(agricultural tax (in million of rmb))",
          "socialsecurity(social security expenditure (in million of rmb))",
          "nationaldefense(defense expenditure (in million of rmb))",
          "genterpriseincome(enterprise revenue growth rate)",
          "province(province and city)",
          "individualincometax(personal income tax (in million of rmb))",
          "commercialtax(business tax revenue (in million of rmb))"
        ],
        "column_names_original_en": [
          "agriculturetax",
          "socialsecurity",
          "nationaldefense",
          "genterpriseincome",
          "province",
          "individualincometax",
          "commercialtax"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "mediumcomap(medium-sized enterprise (light industry))",
          "statstandard(statistical caliber)",
          "largecomap(large-scale enterprise (light industry))",
          "province(province)",
          "reportperiod(data statistics interval)",
          "enddate(deadline)",
          "industrialvalueadded(industrial added value (in million of rmb))"
        ],
        "column_names_original_en": [
          "mediumcomap",
          "statstandard",
          "largecomap",
          "province",
          "reportperiod",
          "enddate",
          "industrialvalueadded"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me check the quantities of our bonds and central bank bonds separately. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).genterpriseincome(enterprise revenue growth rate) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb))",
    "output_sequence": "select _ from _ | select bonds , centralbankbonds from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_financialbalance.*",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.socialsecurity",
      "ed_financialbalance.nationaldefense",
      "ed_financialbalance.genterpriseincome",
      "ed_financialbalance.province",
      "ed_financialbalance.individualincometax",
      "ed_financialbalance.commercialtax",
      "ed_industryproduction.*",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.province",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.enddate",
      "ed_industryproduction.industrialvalueadded"
    ]
  },
  {
    "question": "Please help me check the end-of-period balance of financial bonds for financial institutions.",
    "sql": "select financialbonds from ed_chinafibalancesheetrmb;",
    "norm_sql": "select financialbonds from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "financialbonds(financial bonds)",
          "equityandotherinvestment(securities and investments)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "id(record identifier)",
          "reservedeposits(deposit of reserve funds)",
          "overseasloans((two) overseas loans)",
          "assetsatifo(asset in international financial institutions)"
        ],
        "column_names_original_en": [
          "financialbonds",
          "equityandotherinvestment",
          "trustedandcreditdeposits",
          "id",
          "reservedeposits",
          "overseasloans",
          "assetsatifo"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "reportarea(statistical region category)",
          "province(province and city)",
          "reportperiod(data statistics interval)",
          "id(record identifier)",
          "rmbloans(rmb loans (in 100 million rmb))",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "foreigncurrencyloans",
          "reportarea",
          "province",
          "reportperiod",
          "id",
          "rmbloans",
          "undiscountedbacceptances"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "indexname(index name)",
          "id(record identifier)",
          "enddate(deadline)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "indexname",
          "id",
          "enddate",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me check the end-of-period balance of financial bonds for financial institutions. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period)",
    "output_sequence": "select _ from _ | select financialbonds from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_socialfinancing.*",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.province",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.id",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.undiscountedbacceptances",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.reportperiod"
    ]
  },
  {
    "question": "Hello, let me take a look at the annual GDP and the year-on-year amount of GDP in Beijing.",
    "sql": "select gdp, gdpgrowthyoy from ed_grossdomesticproduct where province ='Beijing';",
    "norm_sql": "select gdp , gdpgrowthyoy from ed_grossdomesticproduct where province = 'Beijing'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "province",
          "gdp",
          "gdpgrowthyoy",
          "secondindustrygdp",
          "gdppercapita",
          "thirdindustrygdp",
          "id"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "sovereigntycountry(the subject country)",
          "commodity(product name)",
          "reportarea(statistical category of the region)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "sovereigntycountry",
          "commodity",
          "reportarea",
          "gyoyofexvaluegoods",
          "exvalueofgoods",
          "eximvalueofgoods",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "financedeposits(financial deposit)",
          "equityandotherinvestment(securities and investments)",
          "loantogov(financial borrowing)",
          "orgdeposits(government and institutional deposits)",
          "reservedeposits(deposit of reserve funds)",
          "moneyincirculation(currency in circulation)",
          "corporatesavings(unit deposit/corporate deposit)"
        ],
        "column_names_original_en": [
          "financedeposits",
          "equityandotherinvestment",
          "loantogov",
          "orgdeposits",
          "reservedeposits",
          "moneyincirculation",
          "corporatesavings"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hello, let me take a look at the annual GDP and the year-on-year amount of GDP in Beijing. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).enddate(deadline) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).orgdeposits(government and institutional deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit)",
    "output_sequence": "select _ from _ where _ | select gdp , gdpgrowthyoy from ed_grossdomesticproduct where province = 'Beijing'",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_exportimport.*",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.commodity",
      "ed_exportimport.reportarea",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.enddate",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.orgdeposits",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.corporatesavings"
    ]
  },
  {
    "question": "Can you list the detailed records of domestic loans, net foreign assets, and foreign currency deposits in China?",
    "sql": "select domesticloans, netabroadassets, fcdeposits from ed_chinamoneyandbanking;",
    "norm_sql": "select domesticloans , netabroadassets , fcdeposits from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "fcdeposits(foreign currency deposit.)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "bonds(bonds)",
          "money1(currency (narrow money m1))"
        ],
        "column_names_original_en": [
          "netabroadassets",
          "domesticloans",
          "fcdeposits",
          "claimstospecificsavingorg",
          "claimstononfinancialinst",
          "bonds",
          "money1"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "secondindustrygdp(the second industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "id(record identifier)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "gdp(gross domestic product (in million of rmb).)",
          "province(province and city)",
          "primaryindustrygdp(the primary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "secondindustrygdp",
          "gdppercapita",
          "id",
          "thirdindustrygdp",
          "gdp",
          "province",
          "primaryindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "financialbonds(financial bonds)",
          "reservedeposits(deposit of reserve funds)",
          "financedeposits(financial deposit)",
          "loantogov(financial borrowing)",
          "moneyincirculation(currency in circulation)",
          "othersavings(other deposits)",
          "currencyname(currency unit code)"
        ],
        "column_names_original_en": [
          "financialbonds",
          "reservedeposits",
          "financedeposits",
          "loantogov",
          "moneyincirculation",
          "othersavings",
          "currencyname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you list the detailed records of domestic loans, net foreign assets, and foreign currency deposits in China? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code)",
    "output_sequence": "select _ from _ | select domesticloans , netabroadassets , fcdeposits from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.money1",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.currencyname"
    ]
  },
  {
    "question": "What is the annual agricultural tax revenue in each province and city of our country?",
    "sql": "select agriculturetax from ed_financialbalance;",
    "norm_sql": "select agriculturetax from ed_financialbalance",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "agriculturetax(agricultural tax (in million of rmb))",
          "salestax(business tax (in million of rmb))",
          "supportunderdevelopedarea(policy subsidy expenditure (in million of rmb))",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "gtaxs(various tax revenues growth rate)",
          "gfinancialexpenditure(fiscal expenditure growth rate)"
        ],
        "column_names_original_en": [
          "agriculturetax",
          "salestax",
          "supportunderdevelopedarea",
          "expenditurecitymc",
          "localgovexpenditure",
          "gtaxs",
          "gfinancialexpenditure"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "bonds(bonds)",
          "id(record identifier)",
          "centralbankbonds(central bank bonds)",
          "claimstogov(claims on the government (net))",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "money1(currency (narrow money m1))",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)"
        ],
        "column_names_original_en": [
          "bonds",
          "id",
          "centralbankbonds",
          "claimstogov",
          "moneyandquasimoney",
          "money1",
          "claimstospecificsavingorg"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index value (points))",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "id",
          "reportperiod",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the annual agricultural tax revenue in each province and city of our country? | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).supportunderdevelopedarea(policy subsidy expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gtaxs(various tax revenues growth rate) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name)",
    "output_sequence": "select _ from _ | select agriculturetax from ed_financialbalance",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.salestax",
      "ed_financialbalance.supportunderdevelopedarea",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.gtaxs",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname"
    ]
  },
  {
    "question": "Can you provide the amounts of fiscal deposits and savings deposits in the balance of payments of financial institutions in China?",
    "sql": "select financedeposits, savingsdeposits from ed_chinafibalancesheetrmb;",
    "norm_sql": "select financedeposits , savingsdeposits from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "financedeposits(financial deposit)",
          "savingsdeposits(savings deposits)",
          "financialbonds(financial bonds)",
          "shorttermloans(short-term loan)",
          "totalsavings(all deposit accounts)",
          "currencyname(currency unit code)",
          "overseasloans((two) overseas loans)"
        ],
        "column_names_original_en": [
          "financedeposits",
          "savingsdeposits",
          "financialbonds",
          "shorttermloans",
          "totalsavings",
          "currencyname",
          "overseasloans"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "reserveassets(reserve assets)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "enddate(deadline)",
          "depositswithcentralbank(reserve deposit)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "totalliabilities(total liabilities)"
        ],
        "column_names_original_en": [
          "claimsonotherdepositcorp",
          "reserveassets",
          "claimsonothernfinstitute",
          "enddate",
          "depositswithcentralbank",
          "depositsincludedinm2",
          "totalliabilities"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "minitypecomap(small-scale enterprise (light industry))",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "province(province)",
          "largecomap(large-scale enterprise (light industry))",
          "hivalueap(heavy industry (in million of rmb))",
          "collectivecomap(collective enterprise (light industry))",
          "livalueap(light industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "minitypecomap",
          "industrialvalueadded",
          "province",
          "largecomap",
          "hivalueap",
          "collectivecomap",
          "livalueap"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you provide the amounts of fiscal deposits and savings deposits in the balance of payments of financial institutions in China? | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb))",
    "output_sequence": "select _ from _ | select financedeposits , savingsdeposits from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_industryproduction.*",
      "ed_industryproduction.minitypecomap",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.province",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.collectivecomap",
      "ed_industryproduction.livalueap"
    ]
  },
  {
    "question": "Oh, Lao Li, how long is the repurchase period for \"Corporate Bonds\" and what is the threshold?",
    "sql": "select maturity, valuefloor from ed_taxrate where typename ='Corporate Bonds';",
    "norm_sql": "select maturity , valuefloor from ed_taxrate where typename = 'Corporate Bonds'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "maturity(repurchase period)",
          "valuefloor(minimum value/starting point (rmb))",
          "valueceiling(maximum value (rmb))",
          "ratioceiling(maximum ratio (%))",
          "effectivedate(effective date)",
          "basiscode(billing baseline)"
        ],
        "column_names_original_en": [
          "typename",
          "maturity",
          "valuefloor",
          "valueceiling",
          "ratioceiling",
          "effectivedate",
          "basiscode"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdppercapita(per capita gross domestic product (cny/person))",
          "id(record identifier)",
          "province(province and city)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "primaryindustrygdp(the primary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "gdppercapita",
          "id",
          "province",
          "thirdindustrygdp",
          "gdpgrowthyoy",
          "secondindustrygdp",
          "primaryindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexvalue(index)",
          "id(record identifier)",
          "indexname(index name)",
          "indextype(index category)",
          "enddate(deadline)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "id",
          "indexname",
          "indextype",
          "enddate",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Oh, Lao Li, how long is the repurchase period for \"Corporate Bonds\" and what is the threshold? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).basiscode(billing baseline) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period)",
    "output_sequence": "select _ from _ where _ | select maturity , valuefloor from ed_taxrate where typename = 'Corporate Bonds'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.maturity",
      "ed_taxrate.valuefloor",
      "ed_taxrate.valueceiling",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.effectivedate",
      "ed_taxrate.basiscode",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod"
    ]
  },
  {
    "question": "Please list the amount of foreign exchange and the total value of currency and gold in each of the past 3 years. Detailed records are to be found from the balance sheet of the monetary authority.",
    "sql": "select enddate, forex, moneyandgold from ed_moneyauthoritybs where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select enddate , forex , moneyandgold from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "totalassets(total assets (in million of rmb).)",
          "totalliability(total liabilities (in million of rmb))",
          "selfownedmoney(own funds (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "enddate(deadline)",
          "forex(foreign exchange (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))"
        ],
        "column_names_original_en": [
          "totalassets",
          "totalliability",
          "selfownedmoney",
          "moneyandgold",
          "enddate",
          "forex",
          "governmentsavings"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indexvalue(index value)",
          "indextitle(index name)",
          "id(record identifier)",
          "enddate(deadline)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "indextitle",
          "id",
          "enddate",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "quasimoney(quasi-currency)",
          "money1(currency (narrow money m1))",
          "domesticloans(domestic credit)",
          "centralbankbonds(central bank bonds)",
          "id(record identifier)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "netabroadassets(foreign net assets)"
        ],
        "column_names_original_en": [
          "quasimoney",
          "money1",
          "domesticloans",
          "centralbankbonds",
          "id",
          "moneyandquasimoney",
          "netabroadassets"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the amount of foreign exchange and the total value of currency and gold in each of the past 3 years. Detailed records are to be found from the balance sheet of the monetary authority. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets)",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , forex , moneyandgold from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.governmentsavings",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.reportperiod",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.netabroadassets"
    ]
  },
  {
    "question": "What is the amount of newly added RMB loans recorded by \"Month\" in the first quarter of this year?",
    "sql": "select enddate, subjectsum from ed_newincreasingloan where reportperiod ='Month' and strftime('%Y', enddate) = strftime('%Y', date()) and round(strftime('%m',enddate)/3.0 + 0.495) = 1;",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'Month' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( ) ) and round ( strftime ( '%m' , enddate ) / 3.0 + 0.495 ) = 1",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( ) ) and round ( strftime ( _ ) / _ + _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "subjectname(indicator name)",
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "subjectsum",
          "subjectname",
          "id",
          "yoy"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "id(record identifier)",
          "yoycpitobacco(tobacco, alcohol, and supplies year-on-year)",
          "yoycpitrafficcommunication(transportation and communication year-over-year)",
          "qoqcpihousing(residential month-to-month)",
          "yoycpi(resident consumer price index (year-on-year))",
          "yoycpicloth(clothing year-on-year)",
          "qoqcpicloth(clothing month-on-month)"
        ],
        "column_names_original_en": [
          "id",
          "yoycpitobacco",
          "yoycpitrafficcommunication",
          "qoqcpihousing",
          "yoycpi",
          "yoycpicloth",
          "qoqcpicloth"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "moneyandgold(currency gold (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "id(record identifier)",
          "forex(foreign exchange (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "reservedeposits(reserve deposit (in million of rmb))"
        ],
        "column_names_original_en": [
          "moneyandgold",
          "totalassets",
          "otherforeignassets",
          "id",
          "forex",
          "nonfinancialorgdeposits",
          "reservedeposits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the amount of newly added RMB loans recorded by \"Month\" in the first quarter of this year? | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).id(record identifier) , ed_consumerpriceindex(consumer price index).yoycpitobacco(tobacco, alcohol, and supplies year-on-year) , ed_consumerpriceindex(consumer price index).yoycpitrafficcommunication(transportation and communication year-over-year) , ed_consumerpriceindex(consumer price index).qoqcpihousing(residential month-to-month) , ed_consumerpriceindex(consumer price index).yoycpi(resident consumer price index (year-on-year)) , ed_consumerpriceindex(consumer price index).yoycpicloth(clothing year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpicloth(clothing month-on-month) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( ) ) and round ( strftime ( _ ) / _ + _ ) = _ | select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'Month' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( ) ) and round ( strftime ( '%m' , enddate ) / 3.0 + 0.495 ) = 1",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.id",
      "ed_consumerpriceindex.yoycpitobacco",
      "ed_consumerpriceindex.yoycpitrafficcommunication",
      "ed_consumerpriceindex.qoqcpihousing",
      "ed_consumerpriceindex.yoycpi",
      "ed_consumerpriceindex.yoycpicloth",
      "ed_consumerpriceindex.qoqcpicloth",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.reservedeposits"
    ]
  },
  {
    "question": "List the names of provinces with GDP below 200 billion but per capita GDP exceeding 5,000 in 2008.",
    "sql": "select province from ed_grossdomesticproduct where strftime('%Y', enddate)='2008' and gdp < 200 billion and gdppercapita > 5,000;",
    "norm_sql": "select province from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = '2008' and gdp < 200 billion and gdppercapita > 5 , 000",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _ and _ billion and _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "enddate(deadline)",
          "gdp(gross domestic product (in million of rmb).)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "id(record identifier)",
          "primaryindustrygdp(the primary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "enddate",
          "gdp",
          "gdppercapita",
          "secondindustrygdp",
          "id",
          "primaryindustrygdp"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "enddate(deadline)",
          "indextitle(index name)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "id",
          "enddate",
          "indextitle",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "effectivedate(effective date)",
          "drrtype(reserve requirement ratio category)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "ratiofloor",
          "ratioceiling",
          "effectivedate",
          "drrtype",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "List the names of provinces with GDP below 200 billion but per capita GDP exceeding 5,000 in 2008. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).id(record identifier)",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ and _ billion and _ | select province from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = '2008' and gdp < 200 billion and gdppercapita > 5 , 000",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.indexvalue",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.id"
    ]
  },
  {
    "question": "What were the amounts of foreign exchange and monetary gold in the central bank's balance sheet last year?",
    "sql": "select forex , moneyandgold from ed_moneyauthoritybs  where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year')) ;",
    "norm_sql": "select forex , moneyandgold from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "reportarea(statistical region category)",
          "rmbloans(rmb loans (in 100 million rmb))",
          "enddate(deadline)",
          "id(record identifier)",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "reportperiod(data statistics interval)",
          "creditloans(trust loan (in 100 million rmb))"
        ],
        "column_names_original_en": [
          "reportarea",
          "rmbloans",
          "enddate",
          "id",
          "definancingofnonfe",
          "reportperiod",
          "creditloans"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "forex(foreign exchange (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "forex",
          "moneyandgold",
          "moneyissuance",
          "claimtosavingsinst",
          "claimtosavingsbanks",
          "otherliability"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "indexvalue(index value (points))",
          "reportperiod(data statistical period)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "indexvalue",
          "reportperiod",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What were the amounts of foreign exchange and monetary gold in the central bank's balance sheet last year? | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name)",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) | select forex , moneyandgold from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_socialfinancing.*",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.id",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.creditloans",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.otherliability",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname"
    ]
  },
  {
    "question": "Li Gong wants to know the index value of \"Non-Metallic Mineral Product Industry\" in the \"National Economic Industry Index\" for the \"same period last year\".",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod ='same period last year' and indextype ='National Economic Industry Index' and indexname ='Non-Metallic Mineral Product Industry';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'same period last year' and indextype = 'National Economic Industry Index' and indexname = 'Non-Metallic Mineral Product Industry'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "id",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "reportarea(statistical category of the region)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "commodity(product name)",
          "enddate(deadline)",
          "imvalueofgoods(total import amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "eximvalueofgoods",
          "exvalueofgoods",
          "reportarea",
          "gyoyofeximvaluegoods",
          "commodity",
          "enddate",
          "imvalueofgoods"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "othersindustry(other industries)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "city(city)",
          "foodbeverage(catering industry)",
          "jointventures(joint operating unit)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "othersindustry",
          "retailvalueofscgoods",
          "city",
          "foodbeverage",
          "jointventures",
          "enddate",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Li Gong wants to know the index value of \"Non-Metallic Mineral Product Industry\" in the \"National Economic Industry Index\" for the \"same period last year\". | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier)",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'same period last year' and indextype = 'National Economic Industry Index' and indexname = 'Non-Metallic Mineral Product Industry'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_exportimport.*",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.reportarea",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.commodity",
      "ed_exportimport.enddate",
      "ed_exportimport.imvalueofgoods",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.id"
    ]
  },
  {
    "question": "List the names of the top ten provinces and cities in terms of the gross domestic product of the primary industry two years ago.",
    "sql": "select province from ed_grossdomesticproduct where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-2 year')) order by PrimaryIndustryGDP desc limit 10;",
    "norm_sql": "select province from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) ) order by primaryindustrygdp desc limit 10",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) order by _ desc limit _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "enddate(deadline)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "gdp(gross domestic product (in million of rmb).)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "enddate",
          "primaryindustrygdp",
          "gdpgrowthyoy",
          "gdp",
          "thirdindustrygdp",
          "secondindustrygdp"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "ratiofloor(minimum ratio (%))",
          "drrtype(reserve requirement ratio category)",
          "effectivedate(effective date)",
          "id(record identifier)",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "ratiofloor",
          "drrtype",
          "effectivedate",
          "id",
          "ratioceiling"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)",
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "subjectsum",
          "yoy",
          "id",
          "enddate",
          "reportperiod",
          "subjectname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "List the names of the top ten provinces and cities in terms of the gross domestic product of the primary industry two years ago. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name)",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) order by _ desc limit _ | select province from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) ) order by primaryindustrygdp desc limit 10",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratioceiling",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectname"
    ]
  },
  {
    "question": "Please list the social security expenditure and the expenditure on education, culture, science, and health in each province and city of our country over the years.",
    "sql": "select socialsecurity, operatingexpensescesh from ed_financialbalance;",
    "norm_sql": "select socialsecurity , operatingexpensescesh from ed_financialbalance",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "socialsecurity(social security expenditure (in million of rmb))",
          "enddate(deadline)",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))",
          "reportperiod(data statistical period)",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "reportarea(statistical area category)"
        ],
        "column_names_original_en": [
          "operatingexpensescesh",
          "socialsecurity",
          "enddate",
          "centralgovexpenditure",
          "reportperiod",
          "localgovrevenue",
          "reportarea"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "indexvalue(index value)",
          "id(record identifier)",
          "reportarea(statistical region category)",
          "indextitle(index name)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexcode(index code)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "id",
          "reportarea",
          "indextitle",
          "reportperiod",
          "enddate",
          "indexcode"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)",
          "effectivedate(effective date)",
          "ratiofloor(minimum ratio (%))",
          "valueceiling(maximum value (rmb))",
          "basiscode(billing baseline)",
          "typename(tax rate type)"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "id",
          "effectivedate",
          "ratiofloor",
          "valueceiling",
          "basiscode",
          "typename"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the social security expenditure and the expenditure on education, culture, science, and health in each province and city of our country over the years. | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).indexcode(index code) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).typename(tax rate type)",
    "output_sequence": "select _ from _ | select socialsecurity , operatingexpensescesh from ed_financialbalance",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.socialsecurity",
      "ed_financialbalance.enddate",
      "ed_financialbalance.centralgovexpenditure",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.reportarea",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.indexcode",
      "ed_taxrate.*",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.id",
      "ed_taxrate.effectivedate",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.valueceiling",
      "ed_taxrate.basiscode",
      "ed_taxrate.typename"
    ]
  },
  {
    "question": "Hello, can you please check the data of handling fees for different repurchase periods in \"Treasury Bond Repurchase (Buy-Back)\"?",
    "sql": "select maturity, basiscode from ed_taxrate where typename ='Treasury Bond Repurchase (Buy-Back)' and itemname ='Handling Fee' ;",
    "norm_sql": "select maturity , basiscode from ed_taxrate where typename = 'Treasury Bond Repurchase (Buy-Back)' and itemname = 'Handling Fee'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "maturity(repurchase period)",
          "basiscode(billing baseline)",
          "valuefloor(minimum value/starting point (rmb))",
          "ratiofloor(minimum ratio (%))",
          "valueceiling(maximum value (rmb))"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "maturity",
          "basiscode",
          "valuefloor",
          "ratiofloor",
          "valueceiling"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "province(province and city)",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "reportperiod(data statistics interval)",
          "reportarea(statistical region category)",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "enddate(deadline)",
          "corporatebonds(corporate bonds (in hundred million rmb))"
        ],
        "column_names_original_en": [
          "province",
          "socialfinancing",
          "reportperiod",
          "reportarea",
          "undiscountedbacceptances",
          "enddate",
          "corporatebonds"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "otherliabilities(other liabilities)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "reserveassets(reserve assets)",
          "totalassets(total assets)",
          "timedeposits(fixed deposit for enterprises)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "claimsonotherdepositcorp",
          "otherliabilities",
          "liabilitiestocentralbank",
          "reserveassets",
          "totalassets",
          "timedeposits",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hello, can you please check the data of handling fees for different repurchase periods in \"Treasury Bond Repurchase (Buy-Back)\"? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier)",
    "output_sequence": "select _ from _ where _ | select maturity , basiscode from ed_taxrate where typename = 'Treasury Bond Repurchase (Buy-Back)' and itemname = 'Handling Fee'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.maturity",
      "ed_taxrate.basiscode",
      "ed_taxrate.valuefloor",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.valueceiling",
      "ed_socialfinancing.*",
      "ed_socialfinancing.province",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.corporatebonds",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_otherdepositorycorpbs.id"
    ]
  },
  {
    "question": "Please help me check the annual growth rate of fiscal revenue in various provinces and cities in our country.",
    "sql": "select gfinancialrevenue from ed_financialbalance ;",
    "norm_sql": "select gfinancialrevenue from ed_financialbalance",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "gfinancialrevenue(fiscal revenue growth rate)",
          "genterpriseincome(enterprise revenue growth rate)",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "gtaxs(various tax revenues growth rate)",
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))",
          "nationaldefense(defense expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "gfinancialrevenue",
          "genterpriseincome",
          "expenditurecitymc",
          "gtaxs",
          "gfinancialexpenditure",
          "centralgovexpenditure",
          "nationaldefense"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "equityandotherinvestment(securities and investments)",
          "agriculturaldeposits(agricultural deposit)",
          "reservedeposits(deposit of reserve funds)",
          "financialbonds(financial bonds)",
          "orgdeposits(government and institutional deposits)",
          "currencyname(currency unit code)",
          "totalsavings(all deposit accounts)"
        ],
        "column_names_original_en": [
          "equityandotherinvestment",
          "agriculturaldeposits",
          "reservedeposits",
          "financialbonds",
          "orgdeposits",
          "currencyname",
          "totalsavings"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "sovereigntycountry(the subject country)",
          "enddate(deadline)",
          "id(record identifier)",
          "commodity(product name)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "exvalueofgoods(total export amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "sovereigntycountry",
          "enddate",
          "id",
          "commodity",
          "gyoyofexvaluegoods",
          "gyoyofeximvaluegoods",
          "exvalueofgoods"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me check the annual growth rate of fiscal revenue in various provinces and cities in our country. | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).genterpriseincome(enterprise revenue growth rate) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gtaxs(various tax revenues growth rate) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).orgdeposits(government and institutional deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars))",
    "output_sequence": "select _ from _ | select gfinancialrevenue from ed_financialbalance",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.genterpriseincome",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.gtaxs",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.centralgovexpenditure",
      "ed_financialbalance.nationaldefense",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.orgdeposits",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_exportimport.*",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.enddate",
      "ed_exportimport.id",
      "ed_exportimport.commodity",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.exvalueofgoods"
    ]
  },
  {
    "question": "Last year, what were the amounts of money issuance, reserve deposits, and non-financial institutional deposits? Please check the balance sheet of the monetary authority.",
    "sql": "select moneyissuance , reservedeposits, nonfinancialorgdeposits from ed_moneyauthoritybs where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year'));",
    "norm_sql": "select moneyissuance , reservedeposits , nonfinancialorgdeposits from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "moneyissuance(currency issuance (in million of rmb))",
          "reservedeposits(reserve deposit (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "moneyissuance",
          "reservedeposits",
          "nonfinancialorgdeposits",
          "claimtosavingsinst",
          "moneyandgold",
          "claimtogovernment"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "yoy(year-on-year increase or decrease (%))",
          "reportperiod(statistical period)",
          "id(record identifier)",
          "subjectsum(amount (in million of rmb))",
          "subjectname(indicator name)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "yoy",
          "reportperiod",
          "id",
          "subjectsum",
          "subjectname",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "ratiofloor(minimum ratio (%))",
          "valuefloor(minimum value/starting point (rmb))",
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)",
          "typename(tax rate type)",
          "secumarket(securities market)"
        ],
        "column_names_original_en": [
          "itemname",
          "ratiofloor",
          "valuefloor",
          "ratioceiling",
          "id",
          "typename",
          "secumarket"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Last year, what were the amounts of money issuance, reserve deposits, and non-financial institutional deposits? Please check the balance sheet of the monetary authority. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market)",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) | select moneyissuance , reservedeposits , nonfinancialorgdeposits from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.enddate",
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.valuefloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.id",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket"
    ]
  },
  {
    "question": "Display the social security expenditure data and the growth rate of social security expenditure in Beijing in the year 2000.",
    "sql": "select socialsecurity, gsocialsecurity from ed_financialbalance where province='Beijing' and strftime('%Y', enddate)='2000';",
    "norm_sql": "select socialsecurity , gsocialsecurity from ed_financialbalance where province = 'Beijing' and strftime ( '%Y' , enddate ) = '2000'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexname(index name)",
          "indextype(index category)",
          "indexvalue(index)"
        ],
        "column_names_original_en": [
          "id",
          "reportperiod",
          "enddate",
          "indexname",
          "indextype",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "rmbloans(rmb loans (in 100 million rmb))",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "creditloans(trust loan (in 100 million rmb))",
          "entrustedloans(trust loan (in 100 million of rmb))",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "reportarea(statistical region category)",
          "socialfinancing(total social financing scale (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "rmbloans",
          "foreigncurrencyloans",
          "creditloans",
          "entrustedloans",
          "corporatebonds",
          "reportarea",
          "socialfinancing"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "province(province and city)",
          "socialsecurity(social security expenditure (in million of rmb))",
          "gsocialsecurity(social security expenditure growth rate)",
          "id(record identifier)",
          "supportunderdevelopedarea(policy subsidy expenditure (in million of rmb))",
          "gfinancialrevenue(fiscal revenue growth rate)"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "socialsecurity",
          "gsocialsecurity",
          "id",
          "supportunderdevelopedarea",
          "gfinancialrevenue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Display the social security expenditure data and the growth rate of social security expenditure in Beijing in the year 2000. | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexvalue(index) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gsocialsecurity(social security expenditure growth rate) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).supportunderdevelopedarea(policy subsidy expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = _ | select socialsecurity , gsocialsecurity from ed_financialbalance where province = 'Beijing' and strftime ( '%Y' , enddate ) = '2000'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexvalue",
      "ed_socialfinancing.*",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.creditloans",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.socialfinancing",
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.province",
      "ed_financialbalance.socialsecurity",
      "ed_financialbalance.gsocialsecurity",
      "ed_financialbalance.id",
      "ed_financialbalance.supportunderdevelopedarea",
      "ed_financialbalance.gfinancialrevenue"
    ]
  },
  {
    "question": "Do you want to know the highest ratio of \"Reserve Requirement Ratio\" for \"Large Chinese Banks\"?",
    "sql": "select ratioceiling from ed_taxrate where typename ='Large Chinese Banks' and itemname ='Reserve Requirement Ratio';",
    "norm_sql": "select ratioceiling from ed_taxrate where typename = 'Large Chinese Banks' and itemname = 'Reserve Requirement Ratio'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "ratioceiling(maximum ratio (%))",
          "valuefloor(minimum value/starting point (rmb))",
          "maturity(repurchase period)",
          "id(record identifier)",
          "valueceiling(maximum value (rmb))"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "ratioceiling",
          "valuefloor",
          "maturity",
          "id",
          "valueceiling"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "qoqcpitrafficcommunication(transportation and communication month-on-month)",
          "qoqcpicloth(clothing month-on-month)",
          "qoqcpifamilyequipmentservice(household equipment and services month-on-month)",
          "cumcpitrafficcommunication(cumulative average of transportation and communication)",
          "cumcpicloth(cumulative average of clothing)",
          "id(record identifier)",
          "qoqcpifood(food price month-on-month)"
        ],
        "column_names_original_en": [
          "qoqcpitrafficcommunication",
          "qoqcpicloth",
          "qoqcpifamilyequipmentservice",
          "cumcpitrafficcommunication",
          "cumcpicloth",
          "id",
          "qoqcpifood"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "subjectsum(amount (in million of rmb))",
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))",
          "reportperiod(statistical period)",
          "subjectname(indicator name)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "subjectsum",
          "id",
          "yoy",
          "reportperiod",
          "subjectname",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Do you want to know the highest ratio of \"Reserve Requirement Ratio\" for \"Large Chinese Banks\"? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).qoqcpitrafficcommunication(transportation and communication month-on-month) , ed_consumerpriceindex(consumer price index).qoqcpicloth(clothing month-on-month) , ed_consumerpriceindex(consumer price index).qoqcpifamilyequipmentservice(household equipment and services month-on-month) , ed_consumerpriceindex(consumer price index).cumcpitrafficcommunication(cumulative average of transportation and communication) , ed_consumerpriceindex(consumer price index).cumcpicloth(cumulative average of clothing) , ed_consumerpriceindex(consumer price index).id(record identifier) , ed_consumerpriceindex(consumer price index).qoqcpifood(food price month-on-month) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).enddate(deadline)",
    "output_sequence": "select _ from _ where _ | select ratioceiling from ed_taxrate where typename = 'Large Chinese Banks' and itemname = 'Reserve Requirement Ratio'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valuefloor",
      "ed_taxrate.maturity",
      "ed_taxrate.id",
      "ed_taxrate.valueceiling",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.qoqcpitrafficcommunication",
      "ed_consumerpriceindex.qoqcpicloth",
      "ed_consumerpriceindex.qoqcpifamilyequipmentservice",
      "ed_consumerpriceindex.cumcpitrafficcommunication",
      "ed_consumerpriceindex.cumcpicloth",
      "ed_consumerpriceindex.id",
      "ed_consumerpriceindex.qoqcpifood",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.enddate"
    ]
  },
  {
    "question": "List the total retail value of social consumer goods in Shanghai over the years.",
    "sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province ='Shanghai';",
    "norm_sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Shanghai'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "province(province and city)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "belowcounty(county and below)",
          "selfemployed(individual unit)",
          "stateownedunits(state-owned unit)",
          "jointventures(joint operating unit)",
          "county(county)"
        ],
        "column_names_original_en": [
          "province",
          "retailvalueofscgoods",
          "belowcounty",
          "selfemployed",
          "stateownedunits",
          "jointventures",
          "county"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "drrtype(reserve requirement ratio category)",
          "id(record identifier)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "drrtype",
          "id",
          "ratiofloor",
          "ratioceiling",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "id(record identifier)",
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "id",
          "indexname",
          "indexvalue",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "List the total retail value of social consumer goods in Shanghai over the years. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline)",
    "output_sequence": "select _ from _ where _ | select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Shanghai'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.county",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.effectivedate",
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate"
    ]
  },
  {
    "question": "Please extract the amount of our reserve assets data each year since 2010 from the balance sheet of other deposit-taking company.",
    "sql": "select enddate, reserveassets from ed_otherdepositorycorpbs where strftime('%Y', enddate) >= '2010';",
    "norm_sql": "select enddate , reserveassets from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) >= '2010'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) >= _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "reserveassets(reserve assets)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "depositsexcludedfromm2(deposits not included in broad money)",
          "foreignassets(foreign net assets)",
          "id(record identifier)",
          "totalassets(total assets)"
        ],
        "column_names_original_en": [
          "enddate",
          "reserveassets",
          "claimsonotherdepositcorp",
          "depositsexcludedfromm2",
          "foreignassets",
          "id",
          "totalassets"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "maturity(repurchase period)",
          "itemname(tax rate items)",
          "valuefloor(minimum value/starting point (rmb))",
          "id(record identifier)",
          "basiscode(billing baseline)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "maturity",
          "itemname",
          "valuefloor",
          "id",
          "basiscode",
          "ratiofloor",
          "ratioceiling"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indextitle(index name)",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "enddate(deadline)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "indextitle",
          "reportperiod",
          "id",
          "enddate",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please extract the amount of our reserve assets data each year since 2010 from the balance sheet of other deposit-taking company. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value)",
    "output_sequence": "select _ from _ where strftime ( _ ) >= _ | select enddate , reserveassets from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) >= '2010'",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_taxrate.*",
      "ed_taxrate.maturity",
      "ed_taxrate.itemname",
      "ed_taxrate.valuefloor",
      "ed_taxrate.id",
      "ed_taxrate.basiscode",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indexvalue"
    ]
  },
  {
    "question": "What are the trading markets for \"Treasury Bond Buy-Back Style Repurchase Agreement\"?",
    "sql": "select secumarket from ed_taxrate where typename ='Treasury Bond Buy-Back Style Repurchase Agreement';",
    "norm_sql": "select secumarket from ed_taxrate where typename = 'Treasury Bond Buy-Back Style Repurchase Agreement'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "secumarket(securities market)",
          "valueceiling(maximum value (rmb))",
          "basiscode(billing baseline)",
          "effectivedate(effective date)",
          "ratiofloor(minimum ratio (%))",
          "valuefloor(minimum value/starting point (rmb))"
        ],
        "column_names_original_en": [
          "typename",
          "secumarket",
          "valueceiling",
          "basiscode",
          "effectivedate",
          "ratiofloor",
          "valuefloor"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "enddate(deadline)",
          "indextype(index category)",
          "indexvalue(index)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indexname",
          "enddate",
          "indextype",
          "indexvalue",
          "id"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "accuquantity(accumulated quantity)",
          "quantity(quantity)",
          "accueximvalue(accumulated amount)",
          "enddate(deadline)",
          "currencycode(currency unit)",
          "id(record identifier)",
          "eximvalue(amount)"
        ],
        "column_names_original_en": [
          "accuquantity",
          "quantity",
          "accueximvalue",
          "enddate",
          "currencycode",
          "id",
          "eximvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the trading markets for \"Treasury Bond Buy-Back Style Repurchase Agreement\"? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).quantity(quantity) , ed_productexportimport(product import and export volume).accueximvalue(accumulated amount) , ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).currencycode(currency unit) , ed_productexportimport(product import and export volume).id(record identifier) , ed_productexportimport(product import and export volume).eximvalue(amount)",
    "output_sequence": "select _ from _ where _ | select secumarket from ed_taxrate where typename = 'Treasury Bond Buy-Back Style Repurchase Agreement'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.valueceiling",
      "ed_taxrate.basiscode",
      "ed_taxrate.effectivedate",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.valuefloor",
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_productexportimport.*",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.quantity",
      "ed_productexportimport.accueximvalue",
      "ed_productexportimport.enddate",
      "ed_productexportimport.currencycode",
      "ed_productexportimport.id",
      "ed_productexportimport.eximvalue"
    ]
  },
  {
    "question": "Find the records in the 2000 financial institution balance sheet in China where the money in circulation is less than 10 million Yuan, including financial bonds, securities and investments, equities, and other investments.",
    "sql": "select financialbonds, equityandotherinvestment, sharesandotherinvestments from ed_chinafibalancesheetrmb where strftime('%Y', enddate)='2000' and moneyincirculation < 10000000;",
    "norm_sql": "select financialbonds , equityandotherinvestment , sharesandotherinvestments from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) = '2000' and moneyincirculation < 10000000",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _ and _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "financialbonds(financial bonds)",
          "moneyincirculation(currency in circulation)",
          "equityandotherinvestment(securities and investments)",
          "sharesandotherinvestments(equity and other investments)",
          "financedeposits(financial deposit)",
          "savingsdeposits(savings deposits)"
        ],
        "column_names_original_en": [
          "enddate",
          "financialbonds",
          "moneyincirculation",
          "equityandotherinvestment",
          "sharesandotherinvestments",
          "financedeposits",
          "savingsdeposits"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "supportunderdevelopedarea(policy subsidy expenditure (in million of rmb))",
          "nationaldefense(defense expenditure (in million of rmb))",
          "genterpriseincome(enterprise revenue growth rate)",
          "reportarea(statistical area category)",
          "province(province and city)",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "gfinancialexpenditure",
          "supportunderdevelopedarea",
          "nationaldefense",
          "genterpriseincome",
          "reportarea",
          "province",
          "localgovexpenditure"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "otherforeignassets(other foreign assets (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "reservedeposits(reserve deposit (in million of rmb))",
          "id(record identifier)",
          "otherliability(other liabilities (in million of rmb))"
        ],
        "column_names_original_en": [
          "otherforeignassets",
          "moneyandgold",
          "claimtosavingsbanks",
          "nonfinancialorgdeposits",
          "reservedeposits",
          "id",
          "otherliability"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Find the records in the 2000 financial institution balance sheet in China where the money in circulation is less than 10 million Yuan, including financial bonds, securities and investments, equities, and other investments. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).supportunderdevelopedarea(policy subsidy expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).genterpriseincome(enterprise revenue growth rate) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ and _ | select financialbonds , equityandotherinvestment , sharesandotherinvestments from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) = '2000' and moneyincirculation < 10000000",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_financialbalance.*",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.supportunderdevelopedarea",
      "ed_financialbalance.nationaldefense",
      "ed_financialbalance.genterpriseincome",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.province",
      "ed_financialbalance.localgovexpenditure",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.otherliability"
    ]
  },
  {
    "question": "Please query the data records of our liabilities to other financial companies in the balance sheet of other depositary companies.",
    "sql": "select liabtootherfinancialcorp from ed_otherdepositorycorpbs;",
    "norm_sql": "select liabtootherfinancialcorp from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "cashinvault(cash on hand)",
          "foreignassets(foreign net assets)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "claimsonotherresidentsec(claims on other resident sectors)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "totalassets(total assets)"
        ],
        "column_names_original_en": [
          "liabtootherfinancialcorp",
          "cashinvault",
          "foreignassets",
          "claimsonotherdepositcorp",
          "claimsonotherresidentsec",
          "liabtootherdepositcorp",
          "totalassets"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "indextitle(index name)",
          "reportperiod(data statistical period)",
          "indexvalue(index value)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "id",
          "indextitle",
          "reportperiod",
          "indexvalue",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "accuquantity(accumulated quantity)",
          "productname(product name)",
          "accueximvalue(accumulated amount)",
          "avgprice(average price)",
          "unitname(company name)",
          "currencycode(currency unit)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "accuquantity",
          "productname",
          "accueximvalue",
          "avgprice",
          "unitname",
          "currencycode"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please query the data records of our liabilities to other financial companies in the balance sheet of other depositary companies. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).productname(product name) , ed_productexportimport(product import and export volume).accueximvalue(accumulated amount) , ed_productexportimport(product import and export volume).avgprice(average price) , ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).currencycode(currency unit)",
    "output_sequence": "select _ from _ | select liabtootherfinancialcorp from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.totalassets",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.enddate",
      "ed_productexportimport.*",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.productname",
      "ed_productexportimport.accueximvalue",
      "ed_productexportimport.avgprice",
      "ed_productexportimport.unitname",
      "ed_productexportimport.currencycode"
    ]
  },
  {
    "question": "What are the growth rates of Shanghai's fiscal revenue and fiscal expenditure in the past ten years?",
    "sql": "select gfinancialrevenue, gfinancialexpenditure from ed_financialbalance  where province ='Shanghai' and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-10 year'));",
    "norm_sql": "select gfinancialrevenue , gfinancialexpenditure from ed_financialbalance where province = 'Shanghai' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "province(province and city)",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "id(record identifier)",
          "gnationaldefense(defense expenditure growth rate)",
          "localgovrevenue(local fiscal revenue (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "gfinancialrevenue",
          "gfinancialexpenditure",
          "id",
          "gnationaldefense",
          "localgovrevenue"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "foodbeverage(catering industry)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "city(city)",
          "stateownedunits(state-owned unit)",
          "othersunits(other units)",
          "collectiveunits(collective unit)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "foodbeverage",
          "retailvalueofscgoods",
          "city",
          "stateownedunits",
          "othersunits",
          "collectiveunits"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "datatype(data type code)",
          "reservedeposits(deposit of reserve funds)",
          "sharesandotherinvestments(equity and other investments)",
          "totalsavings(all deposit accounts)",
          "overseasloans((two) overseas loans)",
          "loantogov(financial borrowing)",
          "shorttermloans(short-term loan)"
        ],
        "column_names_original_en": [
          "datatype",
          "reservedeposits",
          "sharesandotherinvestments",
          "totalsavings",
          "overseasloans",
          "loantogov",
          "shorttermloans"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the growth rates of Shanghai's fiscal revenue and fiscal expenditure in the past ten years? | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select gfinancialrevenue , gfinancialexpenditure from ed_financialbalance where province = 'Shanghai' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.province",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.id",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.localgovrevenue",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.shorttermloans"
    ]
  },
  {
    "question": "How much is our foreign currency deposit?",
    "sql": "select fcdeposits from ed_chinamoneyandbanking;",
    "norm_sql": "select fcdeposits from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "fcdeposits(foreign currency deposit.)",
          "bonds(bonds)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "quasimoney(quasi-currency)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "fcdeposits",
          "bonds",
          "moneyandquasimoney",
          "claimstogov",
          "claimstononfinancialinst",
          "quasimoney",
          "id"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "valuefloor(minimum value/starting point (rmb))",
          "itemname(tax rate items)",
          "basiscode(billing baseline)",
          "typename(tax rate type)",
          "maturity(repurchase period)",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "valuefloor",
          "itemname",
          "basiscode",
          "typename",
          "maturity",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "entrustedloans(trust loan (in 100 million of rmb))",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "rmbloans(rmb loans (in 100 million rmb))",
          "corporatebonds(corporate bonds (in hundred million rmb))"
        ],
        "column_names_original_en": [
          "entrustedloans",
          "definancingofnonfe",
          "undiscountedbacceptances",
          "foreigncurrencyloans",
          "socialfinancing",
          "rmbloans",
          "corporatebonds"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How much is our foreign currency deposit? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).effectivedate(effective date) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb))",
    "output_sequence": "select _ from _ | select fcdeposits from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.id",
      "ed_taxrate.*",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valuefloor",
      "ed_taxrate.itemname",
      "ed_taxrate.basiscode",
      "ed_taxrate.typename",
      "ed_taxrate.maturity",
      "ed_taxrate.effectivedate",
      "ed_socialfinancing.*",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.corporatebonds"
    ]
  },
  {
    "question": "What is the industrial production value of large, medium, and small enterprises in \"state-owned and above-scale industrial enterprises\" in Shenzhen Special Economic Zone three years ago?",
    "sql": "select enddate, largecomap, mediumcomap, minitypecomap from ed_industryproduction where province ='Shenzhen' and statstandard ='state-owned and above-scale industrial enterprises' and reportperiod ='annual' and strftime('%Y', enddate) < strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select enddate , largecomap , mediumcomap , minitypecomap from ed_industryproduction where province = 'Shenzhen' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'annual' and strftime ( '%Y' , enddate ) < strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) < strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistics interval)",
          "province(province)",
          "statstandard(statistical caliber)",
          "largecomap(large-scale enterprise (light industry))",
          "mediumcomap(medium-sized enterprise (light industry))",
          "minitypecomap(small-scale enterprise (light industry))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "province",
          "statstandard",
          "largecomap",
          "mediumcomap",
          "minitypecomap"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month)",
          "cumcpi(cumulative average of resident consumer price index)",
          "cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services)",
          "qoqcpimedicare(healthcare and personal care products month-on-month)",
          "yoycpitobacco(tobacco, alcohol, and supplies year-on-year)",
          "yoycpifood(food year-on-year)",
          "qoqcpi(resident consumer price index (month-on-month))"
        ],
        "column_names_original_en": [
          "qoqcpientertainmentservice",
          "cumcpi",
          "cumcpifamilyequipmentservice",
          "qoqcpimedicare",
          "yoycpitobacco",
          "yoycpifood",
          "qoqcpi"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "indextype(index category)",
          "indexvalue(index)",
          "indexname(index name)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "indextype",
          "indexvalue",
          "indexname",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the industrial production value of large, medium, and small enterprises in \"state-owned and above-scale industrial enterprises\" in Shenzhen Special Economic Zone three years ago? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services) , ed_consumerpriceindex(consumer price index).qoqcpimedicare(healthcare and personal care products month-on-month) , ed_consumerpriceindex(consumer price index).yoycpitobacco(tobacco, alcohol, and supplies year-on-year) , ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpi(resident consumer price index (month-on-month)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) < strftime ( _ , date ( _ ) ) | select enddate , largecomap , mediumcomap , minitypecomap from ed_industryproduction where province = 'Shenzhen' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'annual' and strftime ( '%Y' , enddate ) < strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.province",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.minitypecomap",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.qoqcpientertainmentservice",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.cumcpifamilyequipmentservice",
      "ed_consumerpriceindex.qoqcpimedicare",
      "ed_consumerpriceindex.yoycpitobacco",
      "ed_consumerpriceindex.yoycpifood",
      "ed_consumerpriceindex.qoqcpi",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.reportperiod"
    ]
  },
  {
    "question": "Wang Gong from the Agricultural Bureau has been wanting this data for a long time. Please provide him with the index value of \"Agriculture and Food Processing Industry\" from last year.",
    "sql": "select indexvalue from ed_producerpiformp where indexname='Agriculture and Food Processing Industry' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year'));",
    "norm_sql": "select indexvalue from ed_producerpiformp where indexname = 'Agriculture and Food Processing Industry' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)",
          "indextype(index category)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexname",
          "indexvalue",
          "id",
          "indextype",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexvalue(index value (points))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "indexname",
          "reportperiod",
          "enddate",
          "indexvalue",
          "id"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "subjectname(indicator name)",
          "yoy(year-on-year increase or decrease (%))",
          "subjectsum(amount (in million of rmb))",
          "id(record identifier)",
          "reportperiod(statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "subjectname",
          "yoy",
          "subjectsum",
          "id",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Wang Gong from the Agricultural Bureau has been wanting this data for a long time. Please provide him with the index value of \"Agriculture and Food Processing Industry\" from last year. | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select indexvalue from ed_producerpiformp where indexname = 'Agriculture and Food Processing Industry' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.reportperiod",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.id",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.reportperiod"
    ]
  },
  {
    "question": "In recent years, what are the records in the balance sheets of other deposit-taking companies where the total asset amount exceeded 50 million yuan? List the time, total asset amount, and total liability amount.",
    "sql": "select enddate, totalassets, totalliabilities from ed_otherdepositorycorpbs where totalassets > 50000000;",
    "norm_sql": "select enddate , totalassets , totalliabilities from ed_otherdepositorycorpbs where totalassets > 50000000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "totalassets(total assets)",
          "totalliabilities(total liabilities)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "otherliabilities(other liabilities)",
          "bondissue(bond issuance)",
          "transferabledeposits(transferable deposits)"
        ],
        "column_names_original_en": [
          "enddate",
          "totalassets",
          "totalliabilities",
          "claimsonotherdepositcorp",
          "otherliabilities",
          "bondissue",
          "transferabledeposits"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "sharesandotherinvestments(equity and other investments)",
          "reservedeposits(deposit of reserve funds)",
          "mediumlongtermloans(medium-to-long term loans)",
          "equityandotherinvestment(securities and investments)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "agriculturaldeposits(agricultural deposit)",
          "orgdeposits(government and institutional deposits)"
        ],
        "column_names_original_en": [
          "sharesandotherinvestments",
          "reservedeposits",
          "mediumlongtermloans",
          "equityandotherinvestment",
          "trustedandcreditdeposits",
          "agriculturaldeposits",
          "orgdeposits"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "ratiofloor(minimum ratio (%))",
          "drrtype(reserve requirement ratio category)",
          "effectivedate(effective date)",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "id",
          "ratiofloor",
          "drrtype",
          "effectivedate",
          "ratioceiling"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In recent years, what are the records in the balance sheets of other deposit-taking companies where the total asset amount exceeded 50 million yuan? List the time, total asset amount, and total liability amount. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).orgdeposits(government and institutional deposits) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%))",
    "output_sequence": "select _ from _ where _ | select enddate , totalassets , totalliabilities from ed_otherdepositorycorpbs where totalassets > 50000000",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.orgdeposits",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratioceiling"
    ]
  },
  {
    "question": "Can I ask you a question? Do you know the trade amount of our other industries in recent years?",
    "sql": "select othersindustry from ed_retailvalueofscgoods;",
    "norm_sql": "select othersindustry from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "jointventures(joint operating unit)",
          "city(city)",
          "county(county)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "othersindustry(other industries)",
          "enddate(deadline)",
          "collectiveunits(collective unit)"
        ],
        "column_names_original_en": [
          "jointventures",
          "city",
          "county",
          "retailvalueofscgoods",
          "othersindustry",
          "enddate",
          "collectiveunits"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "otherforeignassets(other foreign assets (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "totalassets(total assets (in million of rmb).)"
        ],
        "column_names_original_en": [
          "otherforeignassets",
          "bondissuance",
          "claimtosavingsbanks",
          "nonfinancialorgdeposits",
          "forex",
          "moneyreserves",
          "totalassets"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "reportarea(statistical category of the region)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "gyoyofeximvaluegoods",
          "imvalueofgoods",
          "gyoyofimvaluegoods",
          "eximvalueofgoods",
          "reportarea",
          "exvalueofgoods",
          "province"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can I ask you a question? Do you know the trade amount of our other industries in recent years? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).province(province and city)",
    "output_sequence": "select _ from _ | select othersindustry from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.totalassets",
      "ed_exportimport.*",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.reportarea",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.province"
    ]
  },
  {
    "question": "Can you help me check the data record of government debt claims and deposit bank debt claims in the central bank's balance sheet?",
    "sql": "select claimtogovernment, claimtosavingsbanks from ed_moneyauthoritybs;",
    "norm_sql": "select claimtogovernment , claimtosavingsbanks from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "selfownedmoney(own funds (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))"
        ],
        "column_names_original_en": [
          "claimtogovernment",
          "claimtosavingsbanks",
          "bondissuance",
          "claimtosavingsinst",
          "otherforeignassets",
          "selfownedmoney",
          "claimtononfinancialinst"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "ratiofloor(minimum ratio (%))",
          "drrtype(reserve requirement ratio category)",
          "id(record identifier)",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "ratiofloor",
          "drrtype",
          "id",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indexvalue(index value)",
          "indextitle(index name)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "indextitle",
          "reportperiod",
          "enddate",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you help me check the data record of government debt claims and deposit bank debt claims in the central bank's balance sheet? | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier)",
    "output_sequence": "select _ from _ | select claimtogovernment , claimtosavingsbanks from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.effectivedate",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.id"
    ]
  },
  {
    "question": "Please list the index value of \"Coal Mining and Washing Industry\" in the \"National Economic Industry Index\" within the \"Same Month Last Year\" period.",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod ='Same Month Last Year' and indextype ='National Economic Industry Index' and indexname ='Coal Mining and Washing Industry';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'Same Month Last Year' and indextype = 'National Economic Industry Index' and indexname = 'Coal Mining and Washing Industry'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "effectivedate(effective date)",
          "maturity(repurchase period)",
          "secumarket(securities market)",
          "valuefloor(minimum value/starting point (rmb))",
          "itemname(tax rate items)",
          "basiscode(billing baseline)",
          "typename(tax rate type)"
        ],
        "column_names_original_en": [
          "effectivedate",
          "maturity",
          "secumarket",
          "valuefloor",
          "itemname",
          "basiscode",
          "typename"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "commodity(product name)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "id(record identifier)",
          "reportarea(statistical category of the region)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "commodity",
          "gyoyofeximvaluegoods",
          "eximvalueofgoods",
          "id",
          "reportarea",
          "gyoyofimvaluegoods"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the index value of \"Coal Mining and Washing Industry\" in the \"National Economic Industry Index\" within the \"Same Month Last Year\" period. | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).typename(tax rate type) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease)",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'Same Month Last Year' and indextype = 'National Economic Industry Index' and indexname = 'Coal Mining and Washing Industry'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_taxrate.*",
      "ed_taxrate.effectivedate",
      "ed_taxrate.maturity",
      "ed_taxrate.secumarket",
      "ed_taxrate.valuefloor",
      "ed_taxrate.itemname",
      "ed_taxrate.basiscode",
      "ed_taxrate.typename",
      "ed_exportimport.*",
      "ed_exportimport.reportperiod",
      "ed_exportimport.commodity",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.id",
      "ed_exportimport.reportarea",
      "ed_exportimport.gyoyofimvaluegoods"
    ]
  },
  {
    "question": "Do you know the value of the index for \"All Industrial Goods\" in the \"Same Month Last Year\"?",
    "sql": "select indexvalue from ed_producerpiformp where indexname = 'All Industrial Goods' and reportperiod = 'Same Month Last Year' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year'));",
    "norm_sql": "select indexvalue from ed_producerpiformp where indexname = 'All Industrial Goods' and reportperiod = 'Same Month Last Year' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "datatype(data type code)",
          "moneyincirculation(currency in circulation)",
          "domesticloans((one) domestic loan)",
          "overseasloans((two) overseas loans)",
          "orgdeposits(government and institutional deposits)",
          "sharesandotherinvestments(equity and other investments)",
          "totalloans(various loans)"
        ],
        "column_names_original_en": [
          "datatype",
          "moneyincirculation",
          "domesticloans",
          "overseasloans",
          "orgdeposits",
          "sharesandotherinvestments",
          "totalloans"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)",
          "indextype(index category)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "indexname",
          "indexvalue",
          "id",
          "indextype"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "id(record identifier)",
          "enddate(deadline)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextitle",
          "id",
          "enddate",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Do you know the value of the index for \"All Industrial Goods\" in the \"Same Month Last Year\"? | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).orgdeposits(government and institutional deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indextype(index category) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select indexvalue from ed_producerpiformp where indexname = 'All Industrial Goods' and reportperiod = 'Same Month Last Year' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_chinafibalancesheetrmb.orgdeposits",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indextype",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indexvalue"
    ]
  },
  {
    "question": "What is the income and commercial tax of enterprises in each province and city of China in the past three years?",
    "sql": "select enterpriseincome, commercialtax from ed_financialbalance  where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select enterpriseincome , commercialtax from ed_financialbalance where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "commercialtax(business tax revenue (in million of rmb))",
          "enterpriseincome(enterprise income (in million of rmb))",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "reportarea(statistical area category)",
          "gtaxs(various tax revenues growth rate)",
          "gfinancialexpenditure(fiscal expenditure growth rate)"
        ],
        "column_names_original_en": [
          "enddate",
          "commercialtax",
          "enterpriseincome",
          "operatingexpensescesh",
          "reportarea",
          "gtaxs",
          "gfinancialexpenditure"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "drrtype(reserve requirement ratio category)",
          "ratioceiling(maximum ratio (%))",
          "effectivedate(effective date)",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "id",
          "drrtype",
          "ratioceiling",
          "effectivedate",
          "ratiofloor"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdppercapita(per capita gross domestic product (cny/person))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "id(record identifier)",
          "province(province and city)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "gdppercapita",
          "primaryindustrygdp",
          "secondindustrygdp",
          "id",
          "province",
          "thirdindustrygdp",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the income and commercial tax of enterprises in each province and city of China in the past three years? | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb)) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).gtaxs(various tax revenues growth rate) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline)",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enterpriseincome , commercialtax from ed_financialbalance where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.enterpriseincome",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.gtaxs",
      "ed_financialbalance.gfinancialexpenditure",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratiofloor",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.enddate"
    ]
  },
  {
    "question": "Please display the amount of national defense expenditure in various provinces and cities in China over the years.",
    "sql": "select nationaldefense from ed_financialbalance;",
    "norm_sql": "select nationaldefense from ed_financialbalance",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "nationaldefense(defense expenditure (in million of rmb))",
          "reportperiod(data statistical period)",
          "valueaddedtax(value added tax (in million of rmb))",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "nationaldefense",
          "reportperiod",
          "valueaddedtax",
          "localgovexpenditure",
          "localgovrevenue",
          "centralgovexpenditure",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexvalue(index)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "enddate(deadline)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "id",
          "reportperiod",
          "indextype",
          "enddate",
          "indexname"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "reportarea(statistical category of the region)",
          "sovereigntycountry(the subject country)",
          "commodity(product name)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "imvalueofgoods",
          "reportperiod",
          "id",
          "reportarea",
          "sovereigntycountry",
          "commodity",
          "eximvalueofgoods"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please display the amount of national defense expenditure in various provinces and cities in China over the years. | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enddate(deadline) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexname(index name) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars))",
    "output_sequence": "select _ from _ | select nationaldefense from ed_financialbalance",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.nationaldefense",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.valueaddedtax",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.centralgovexpenditure",
      "ed_financialbalance.enddate",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexname",
      "ed_exportimport.*",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.reportperiod",
      "ed_exportimport.id",
      "ed_exportimport.reportarea",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.commodity",
      "ed_exportimport.eximvalueofgoods"
    ]
  },
  {
    "question": "Last year, in the balance sheet of other deposit-taking financial institutions, which records had foreign net assets exceeding 5 million? Please list the time, total assets, and the amount of foreign net assets.",
    "sql": "select enddate, totalassets, foreignassets from ed_otherdepositorycorpbs where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year')) and foreignassets > 5000000;",
    "norm_sql": "select enddate , totalassets , foreignassets from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) and foreignassets > 5000000",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) and _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "otherassets(other assets)",
          "foreignassets(foreign net assets)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "totalassets(total assets)",
          "enddate(deadline)",
          "liabilitiestocentralbank(liabilities to the central bank.)"
        ],
        "column_names_original_en": [
          "otherassets",
          "foreignassets",
          "depositsincludedinm2",
          "liabtootherdepositcorp",
          "totalassets",
          "enddate",
          "liabilitiestocentralbank"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)",
          "drrtype(reserve requirement ratio category)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "ratiofloor",
          "effectivedate",
          "drrtype",
          "id"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpi(resident consumer price index (year-on-year))",
          "qoqcpimedicare(healthcare and personal care products month-on-month)",
          "qoqcpifood(food price month-on-month)",
          "yoycpitobacco(tobacco, alcohol, and supplies year-on-year)",
          "cumcpi(cumulative average of resident consumer price index)",
          "qoqcpihousing(residential month-to-month)",
          "qoqcpitobacco(tobacco, alcohol, and supplies month-on-month)"
        ],
        "column_names_original_en": [
          "yoycpi",
          "qoqcpimedicare",
          "qoqcpifood",
          "yoycpitobacco",
          "cumcpi",
          "qoqcpihousing",
          "qoqcpitobacco"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Last year, in the balance sheet of other deposit-taking financial institutions, which records had foreign net assets exceeding 5 million? Please list the time, total assets, and the amount of foreign net assets. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpi(resident consumer price index (year-on-year)) , ed_consumerpriceindex(consumer price index).qoqcpimedicare(healthcare and personal care products month-on-month) , ed_consumerpriceindex(consumer price index).qoqcpifood(food price month-on-month) , ed_consumerpriceindex(consumer price index).yoycpitobacco(tobacco, alcohol, and supplies year-on-year) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).qoqcpihousing(residential month-to-month) , ed_consumerpriceindex(consumer price index).qoqcpitobacco(tobacco, alcohol, and supplies month-on-month)",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) and _ | select enddate , totalassets , foreignassets from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) and foreignassets > 5000000",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.otherassets",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.id",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpi",
      "ed_consumerpriceindex.qoqcpimedicare",
      "ed_consumerpriceindex.qoqcpifood",
      "ed_consumerpriceindex.yoycpitobacco",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.qoqcpihousing",
      "ed_consumerpriceindex.qoqcpitobacco"
    ]
  },
  {
    "question": "What is the record of retail sales of social consumer goods for individual units in our country? Please check.",
    "sql": "select selfemployed from ed_retailvalueofscgoods;",
    "norm_sql": "select selfemployed from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "selfemployed(individual unit)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "id(record identifier)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "othersunits(other units)",
          "reportperiod(data statistical period)",
          "jointventures(joint operating unit)"
        ],
        "column_names_original_en": [
          "selfemployed",
          "retailvalueofscgoods",
          "id",
          "wholesaleretailtrade",
          "othersunits",
          "reportperiod",
          "jointventures"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enterpriseincometax(enterprise income tax (in million of rmb))",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "reportarea(statistical area category)",
          "agriculturetax(agricultural tax (in million of rmb))",
          "province(province and city)",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "gfinancialexpenditure(fiscal expenditure growth rate)"
        ],
        "column_names_original_en": [
          "enterpriseincometax",
          "expenditurecitymc",
          "reportarea",
          "agriculturetax",
          "province",
          "operatingexpensescesh",
          "gfinancialexpenditure"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "paidincapital(paid-up capital)",
          "reserveassets(reserve assets)",
          "enddate(deadline)",
          "claimsongovernment(claims on government (net))",
          "claimsoncentralbank(claims on central bank)",
          "depositsexcludedfromm2(deposits not included in broad money)",
          "savingdeposits(resident savings deposits)"
        ],
        "column_names_original_en": [
          "paidincapital",
          "reserveassets",
          "enddate",
          "claimsongovernment",
          "claimsoncentralbank",
          "depositsexcludedfromm2",
          "savingdeposits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the record of retail sales of social consumer goods for individual units in our country? Please check. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) , ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits)",
    "output_sequence": "select _ from _ | select selfemployed from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.id",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.jointventures",
      "ed_financialbalance.*",
      "ed_financialbalance.enterpriseincometax",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.province",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_otherdepositorycorpbs.savingdeposits"
    ]
  },
  {
    "question": "Can you showcase the total assets and total liability amounts in our central bank's balance sheet?",
    "sql": "select totalassets, totalliability from ed_moneyauthoritybs;",
    "norm_sql": "select totalassets , totalliability from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "totalassets(total assets (in million of rmb).)",
          "totalliability(total liabilities (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "enddate(deadline)",
          "moneyreserves(reserve currency (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))"
        ],
        "column_names_original_en": [
          "totalassets",
          "totalliability",
          "moneyandgold",
          "claimtootherfinnonfininst",
          "enddate",
          "moneyreserves",
          "claimtosavingsinst"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "enddate(deadline)",
          "reportarea(statistical region category)",
          "id(record identifier)",
          "indexvalue(index value)",
          "comparetolastmonth(index month-on-month change (points))",
          "indexcode(index code)",
          "indextitle(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportarea",
          "id",
          "indexvalue",
          "comparetolastmonth",
          "indexcode",
          "indextitle"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "id(record identifier)",
          "indexvalue(index value (points))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "indexname",
          "id",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you showcase the total assets and total liability amounts in our central bank's balance sheet? | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).indextitle(index name) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points))",
    "output_sequence": "select _ from _ | select totalassets , totalliability from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.indextitle",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexvalue"
    ]
  },
  {
    "question": "What is the monthly amount of total assets and total liabilities in the balance sheet of other depositary companies in the first half of last year?",
    "sql": "select enddate, totalassets, totalliabilities from ed_otherdepositorycorpbs where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year')) and strftime('%m', enddate)='7';",
    "norm_sql": "select enddate , totalassets , totalliabilities from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) and strftime ( '%m' , enddate ) = '7'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "maturity(repurchase period)",
          "ratioceiling(maximum ratio (%))",
          "valueceiling(maximum value (rmb))",
          "basiscode(billing baseline)",
          "effectivedate(effective date)",
          "secumarket(securities market)"
        ],
        "column_names_original_en": [
          "itemname",
          "maturity",
          "ratioceiling",
          "valueceiling",
          "basiscode",
          "effectivedate",
          "secumarket"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "totalassets(total assets)",
          "totalliabilities(total liabilities)",
          "depositsexcludedfromm2(deposits not included in broad money)",
          "demanddeposits(current deposits for enterprises)",
          "foreignassets(foreign net assets)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "totalassets",
          "totalliabilities",
          "depositsexcludedfromm2",
          "demanddeposits",
          "foreignassets",
          "id"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "effectivedate(effective date)",
          "id(record identifier)",
          "ratiofloor(minimum ratio (%))",
          "drrtype(reserve requirement ratio category)",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "effectivedate",
          "id",
          "ratiofloor",
          "drrtype",
          "ratioceiling"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the monthly amount of total assets and total liabilities in the balance sheet of other depositary companies in the first half of last year? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).secumarket(securities market) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) , ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%))",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) and strftime ( _ ) = _ | select enddate , totalassets , totalliabilities from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) and strftime ( '%m' , enddate ) = '7'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.maturity",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valueceiling",
      "ed_taxrate.basiscode",
      "ed_taxrate.effectivedate",
      "ed_taxrate.secumarket",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.id",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratioceiling"
    ]
  },
  {
    "question": "List the records of unit deposits, treasury deposits, and agricultural deposits in the financial institution's credit and debit balance sheet in 2005 where the total deposit amount exceeds 10 million.",
    "sql": "select corporatesavings, financedeposits, agriculturaldeposits from ed_chinafibalancesheetrmb where strftime('%Y', enddate)='2005' and totalloans >10000000;",
    "norm_sql": "select corporatesavings , financedeposits , agriculturaldeposits from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) = '2005' and totalloans > 10000000",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _ and _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "corporatesavings(unit deposit/corporate deposit)",
          "financedeposits(financial deposit)",
          "agriculturaldeposits(agricultural deposit)",
          "totalloans(various loans)",
          "mediumlongtermloans(medium-to-long term loans)",
          "shorttermloans(short-term loan)"
        ],
        "column_names_original_en": [
          "enddate",
          "corporatesavings",
          "financedeposits",
          "agriculturaldeposits",
          "totalloans",
          "mediumlongtermloans",
          "shorttermloans"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indexvalue(index value)",
          "indextitle(index name)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "indextitle",
          "id",
          "reportperiod",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "savingdeposits(resident savings deposits)",
          "foreignassets(foreign net assets)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "otherliabilities(other liabilities)",
          "otherassets(other assets)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "reserveassets(reserve assets)"
        ],
        "column_names_original_en": [
          "savingdeposits",
          "foreignassets",
          "claimsonotherfinstitute",
          "otherliabilities",
          "otherassets",
          "liabtootherdepositcorp",
          "reserveassets"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "List the records of unit deposits, treasury deposits, and agricultural deposits in the financial institution's credit and debit balance sheet in 2005 where the total deposit amount exceeds 10 million. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets)",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ and _ | select corporatesavings , financedeposits , agriculturaldeposits from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) = '2005' and totalloans > 10000000",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.enddate",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.otherassets",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.reserveassets"
    ]
  },
  {
    "question": "Please provide detailed data on our total import value of goods and total export value of goods.",
    "sql": "select imvalueofgoods , exvalueofgoods from ed_exportimport;",
    "norm_sql": "select imvalueofgoods , exvalueofgoods from ed_exportimport",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "sovereigntycountry(the subject country)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "province(province and city)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "exvalueofgoods",
          "imvalueofgoods",
          "sovereigntycountry",
          "gyoyofimvaluegoods",
          "gyoyofexvaluegoods",
          "province",
          "gyoyofeximvaluegoods"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "id(record identifier)",
          "enddate(deadline)",
          "indexname(index name)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "id",
          "enddate",
          "indexname",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsonothernfinstitute(claims on non-financial institution)",
          "totalliabilities(total liabilities)",
          "claimsongovernment(claims on government (net))",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "depositsexcludedfromm2(deposits not included in broad money)",
          "otherliabilities(other liabilities)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "claimsonothernfinstitute",
          "totalliabilities",
          "claimsongovernment",
          "liabilitiestonfinst",
          "depositsexcludedfromm2",
          "otherliabilities",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please provide detailed data on our total import value of goods and total export value of goods. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier)",
    "output_sequence": "select _ from _ | select imvalueofgoods , exvalueofgoods from ed_exportimport",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.province",
      "ed_exportimport.gyoyofeximvaluegoods",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.reportperiod",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.id"
    ]
  },
  {
    "question": "In addition, please list the maximum amount of total liabilities in 2010.",
    "sql": "select max(totalliability) from ed_moneyauthoritybs where strftime('%Y', enddate)='2010';",
    "norm_sql": "select max ( totalliability ) from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) = '2010'",
    "sql_skeleton": "select max ( _ ) from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "totalliability(total liabilities (in million of rmb))",
          "id(record identifier)",
          "otherliability(other liabilities (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "totalliability",
          "id",
          "otherliability",
          "claimtosavingsbanks",
          "nonfinancialorgdeposits",
          "claimtononfinancialinst"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "gtaxs(various tax revenues growth rate)",
          "nationaldefense(defense expenditure (in million of rmb))",
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "centralgovrevenue(central fiscal revenue (in million of yuan))",
          "reportperiod(data statistical period)",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "gtaxs",
          "nationaldefense",
          "gfinancialexpenditure",
          "expenditurecitymc",
          "centralgovrevenue",
          "reportperiod",
          "localgovexpenditure"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "mediumlongtermloans(medium-to-long term loans)",
          "id(record identifier)",
          "reservedeposits(deposit of reserve funds)",
          "totalloans(various loans)",
          "enddate(deadline)",
          "agriculturaldeposits(agricultural deposit)",
          "financialbonds(financial bonds)"
        ],
        "column_names_original_en": [
          "mediumlongtermloans",
          "id",
          "reservedeposits",
          "totalloans",
          "enddate",
          "agriculturaldeposits",
          "financialbonds"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In addition, please list the maximum amount of total liabilities in 2010. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).gtaxs(various tax revenues growth rate) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).centralgovrevenue(central fiscal revenue (in million of yuan)) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds)",
    "output_sequence": "select max ( _ ) from _ where strftime ( _ ) = _ | select max ( totalliability ) from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) = '2010'",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_financialbalance.*",
      "ed_financialbalance.gtaxs",
      "ed_financialbalance.nationaldefense",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.centralgovrevenue",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.localgovexpenditure",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.financialbonds"
    ]
  },
  {
    "question": "Let me see the respective records of our currency and quasi-money.",
    "sql": "select money1, quasimoney from ed_chinamoneyandbanking;",
    "norm_sql": "select money1 , quasimoney from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "reportarea(statistical category of region)",
          "jointventures(joint operating unit)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "othersunits(other units)",
          "county(county)",
          "id(record identifier)",
          "collectiveunits(collective unit)"
        ],
        "column_names_original_en": [
          "reportarea",
          "jointventures",
          "retailvalueofscgoods",
          "othersunits",
          "county",
          "id",
          "collectiveunits"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "money1(currency (narrow money m1))",
          "quasimoney(quasi-currency)",
          "capitalreceived(paid-up capital)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "bonds(bonds)"
        ],
        "column_names_original_en": [
          "domesticloans",
          "claimstogov",
          "money1",
          "quasimoney",
          "capitalreceived",
          "claimstononfinancialinst",
          "bonds"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "id(record identifier)",
          "province(province and city)",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "reportarea(statistical region category)",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "socialfinancing",
          "id",
          "province",
          "foreigncurrencyloans",
          "reportarea",
          "corporatebonds",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Let me see the respective records of our currency and quasi-money. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline)",
    "output_sequence": "select _ from _ | select money1 , quasimoney from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.id",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.bonds",
      "ed_socialfinancing.*",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.id",
      "ed_socialfinancing.province",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.enddate"
    ]
  },
  {
    "question": "What is the year-end balance of securities and investments in the annual credit income and expense of financial institutions?",
    "sql": "select equityandotherinvestment from ed_chinafibalancesheetrmb;",
    "norm_sql": "select equityandotherinvestment from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "equityandotherinvestment(securities and investments)",
          "overseasloans((two) overseas loans)",
          "shorttermloans(short-term loan)",
          "domesticloans((one) domestic loan)",
          "corporatesavings(unit deposit/corporate deposit)",
          "mediumlongtermloans(medium-to-long term loans)",
          "financedeposits(financial deposit)"
        ],
        "column_names_original_en": [
          "equityandotherinvestment",
          "overseasloans",
          "shorttermloans",
          "domesticloans",
          "corporatesavings",
          "mediumlongtermloans",
          "financedeposits"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "entrustedloans(trust loan (in 100 million of rmb))",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "reportperiod(data statistics interval)",
          "enddate(deadline)",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "entrustedloans",
          "undiscountedbacceptances",
          "corporatebonds",
          "definancingofnonfe",
          "reportperiod",
          "enddate",
          "province"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "province(province and city)",
          "individualincometax(personal income tax (in million of rmb))",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "salestax(business tax (in million of rmb))",
          "supportunderdevelopedarea(policy subsidy expenditure (in million of rmb))",
          "gsocialsecurity(social security expenditure growth rate)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "province",
          "individualincometax",
          "localgovrevenue",
          "salestax",
          "supportunderdevelopedarea",
          "gsocialsecurity"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the year-end balance of securities and investments in the annual credit income and expense of financial institutions? | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).province(province and city) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).supportunderdevelopedarea(policy subsidy expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gsocialsecurity(social security expenditure growth rate)",
    "output_sequence": "select _ from _ | select equityandotherinvestment from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_socialfinancing.*",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.province",
      "ed_financialbalance.*",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.province",
      "ed_financialbalance.individualincometax",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.salestax",
      "ed_financialbalance.supportunderdevelopedarea",
      "ed_financialbalance.gsocialsecurity"
    ]
  },
  {
    "question": "Since the record began, what is the Gross Domestic Product (GDP) of China, and what is the year-on-year growth rate of GDP?",
    "sql": "select gdp, gdpgrowthyoy from ed_grossdomesticproduct;",
    "norm_sql": "select gdp , gdpgrowthyoy from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdp(gross domestic product (in million of rmb).)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "id(record identifier)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "gdp",
          "gdpgrowthyoy",
          "primaryindustrygdp",
          "id",
          "gdppercapita",
          "thirdindustrygdp",
          "province"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "moneyincirculation(currency in circulation)",
          "othersavings(other deposits)",
          "enddate(deadline)",
          "shorttermloans(short-term loan)",
          "totalloans(various loans)",
          "domesticloans((one) domestic loan)",
          "agriculturaldeposits(agricultural deposit)"
        ],
        "column_names_original_en": [
          "moneyincirculation",
          "othersavings",
          "enddate",
          "shorttermloans",
          "totalloans",
          "domesticloans",
          "agriculturaldeposits"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "claimsoncentralbank(claims on central bank)",
          "totalliabilities(total liabilities)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "totalassets(total assets)",
          "timedeposits(fixed deposit for enterprises)"
        ],
        "column_names_original_en": [
          "enddate",
          "liabtootherfinancialcorp",
          "claimsoncentralbank",
          "totalliabilities",
          "claimsonotherdepositcorp",
          "totalassets",
          "timedeposits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Since the record began, what is the Gross Domestic Product (GDP) of China, and what is the year-on-year growth rate of GDP? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises)",
    "output_sequence": "select _ from _ | select gdp , gdpgrowthyoy from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.timedeposits"
    ]
  },
  {
    "question": "Please show the amount of new RMB loans in recent years.",
    "sql": "select subjectsum from ed_newincreasingloan;",
    "norm_sql": "select subjectsum from ed_newincreasingloan",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "loantogov(financial borrowing)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "moneyincirculation(currency in circulation)",
          "currencyname(currency unit code)",
          "assetsatifo(asset in international financial institutions)",
          "financedeposits(financial deposit)",
          "corporatesavings(unit deposit/corporate deposit)"
        ],
        "column_names_original_en": [
          "loantogov",
          "trustedandcreditdeposits",
          "moneyincirculation",
          "currencyname",
          "assetsatifo",
          "financedeposits",
          "corporatesavings"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "enddate(deadline)",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "id(record identifier)",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "reportarea(statistical region category)"
        ],
        "column_names_original_en": [
          "enddate",
          "undiscountedbacceptances",
          "corporatebonds",
          "definancingofnonfe",
          "id",
          "foreigncurrencyloans",
          "reportarea"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "reportperiod(statistical period)",
          "enddate(deadline)",
          "yoy(year-on-year increase or decrease (%))",
          "subjectsum(amount (in million of rmb))",
          "id(record identifier)",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "enddate",
          "yoy",
          "subjectsum",
          "id",
          "subjectname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please show the amount of new RMB loans in recent years. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name)",
    "output_sequence": "select _ from _ | select subjectsum from ed_newincreasingloan",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_socialfinancing.*",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.id",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.reportarea",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectname"
    ]
  },
  {
    "question": "How much is the commercial tax revenue in Beijing over the years?",
    "sql": "select commercialtax from ed_financialbalance where province ='Beijing';",
    "norm_sql": "select commercialtax from ed_financialbalance where province = 'Beijing'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "province(province and city)",
          "commercialtax(business tax revenue (in million of rmb))",
          "gtaxs(various tax revenues growth rate)",
          "supportunderdevelopedarea(policy subsidy expenditure (in million of rmb))",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "reportarea(statistical area category)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "province",
          "commercialtax",
          "gtaxs",
          "supportunderdevelopedarea",
          "localgovexpenditure",
          "reportarea",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "enddate(deadline)",
          "yoycpicloth(clothing year-on-year)",
          "cumcpitobacco(cumulative average of tobacco, alcohol, and supplies)",
          "cumcpitrafficcommunication(cumulative average of transportation and communication)",
          "qoqcpi(resident consumer price index (month-on-month))",
          "cumcpi(cumulative average of resident consumer price index)",
          "cumcpihousing(accumulated average of residence)"
        ],
        "column_names_original_en": [
          "enddate",
          "yoycpicloth",
          "cumcpitobacco",
          "cumcpitrafficcommunication",
          "qoqcpi",
          "cumcpi",
          "cumcpihousing"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "drrtype(reserve requirement ratio category)",
          "effectivedate(effective date)",
          "id(record identifier)",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "drrtype",
          "effectivedate",
          "id",
          "ratiofloor"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How much is the commercial tax revenue in Beijing over the years? | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gtaxs(various tax revenues growth rate) , ed_financialbalance(government revenue and expenditure).supportunderdevelopedarea(policy subsidy expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).enddate(deadline) , ed_consumerpriceindex(consumer price index).yoycpicloth(clothing year-on-year) , ed_consumerpriceindex(consumer price index).cumcpitobacco(cumulative average of tobacco, alcohol, and supplies) , ed_consumerpriceindex(consumer price index).cumcpitrafficcommunication(cumulative average of transportation and communication) , ed_consumerpriceindex(consumer price index).qoqcpi(resident consumer price index (month-on-month)) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).cumcpihousing(accumulated average of residence) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%))",
    "output_sequence": "select _ from _ where _ | select commercialtax from ed_financialbalance where province = 'Beijing'",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.province",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.gtaxs",
      "ed_financialbalance.supportunderdevelopedarea",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.reportperiod",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.enddate",
      "ed_consumerpriceindex.yoycpicloth",
      "ed_consumerpriceindex.cumcpitobacco",
      "ed_consumerpriceindex.cumcpitrafficcommunication",
      "ed_consumerpriceindex.qoqcpi",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.cumcpihousing",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratiofloor"
    ]
  },
  {
    "question": "Do you know the minimum payment ratio of \"Securities Trading Stamp Duty\" for \"B shares\" on the \"Shanghai Stock Exchange\"?",
    "sql": "select ratiofloor from ed_taxrate where typename = 'B shares' and itemname = 'Securities Trading Stamp Duty' and secumarket = 'Shanghai Stock Exchange';",
    "norm_sql": "select ratiofloor from ed_taxrate where typename = 'B shares' and itemname = 'Securities Trading Stamp Duty' and secumarket = 'Shanghai Stock Exchange'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "secumarket(securities market)",
          "ratiofloor(minimum ratio (%))",
          "basiscode(billing baseline)",
          "valueceiling(maximum value (rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "secumarket",
          "ratiofloor",
          "basiscode",
          "valueceiling",
          "id"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "domesticloans(domestic credit)",
          "money1(currency (narrow money m1))",
          "quasimoney(quasi-currency)",
          "bonds(bonds)",
          "id(record identifier)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)"
        ],
        "column_names_original_en": [
          "claimstospecificsavingorg",
          "domesticloans",
          "money1",
          "quasimoney",
          "bonds",
          "id",
          "claimstootherinst"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indexvalue(index value (points))",
          "enddate(deadline)",
          "id(record identifier)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indexvalue",
          "enddate",
          "id",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Do you know the minimum payment ratio of \"Securities Trading Stamp Duty\" for \"B shares\" on the \"Shanghai Stock Exchange\"? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).id(record identifier) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name)",
    "output_sequence": "select _ from _ where _ | select ratiofloor from ed_taxrate where typename = 'B shares' and itemname = 'Securities Trading Stamp Duty' and secumarket = 'Shanghai Stock Exchange'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.basiscode",
      "ed_taxrate.valueceiling",
      "ed_taxrate.id",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.claimstootherinst",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexname"
    ]
  },
  {
    "question": "Display the total retail sales of consumer goods for each province and city by \"year\".",
    "sql": "select province, retailvalueofscgoods from ed_retailvalueofscgoods where reportperiod ='year';",
    "norm_sql": "select province , retailvalueofscgoods from ed_retailvalueofscgoods where reportperiod = 'year'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "id(record identifier)",
          "indextype(index category)",
          "reportperiod(data statistical period)",
          "indexvalue(index)",
          "enddate(deadline)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "id",
          "indextype",
          "reportperiod",
          "indexvalue",
          "enddate",
          "indexname"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "collectivecomap(collective enterprise (light industry))",
          "hivalueap(heavy industry (in million of rmb))",
          "minitypecomap(small-scale enterprise (light industry))",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))"
        ],
        "column_names_original_en": [
          "industrialoutputvalueap",
          "collectivecomap",
          "hivalueap",
          "minitypecomap",
          "reportarea",
          "reportperiod",
          "stateownedcontrolledcomap"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "province(province and city)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "id(record identifier)",
          "reportarea(statistical category of region)",
          "county(county)",
          "stateownedunits(state-owned unit)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "province",
          "retailvalueofscgoods",
          "id",
          "reportarea",
          "county",
          "stateownedunits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Display the total retail sales of consumer goods for each province and city by \"year\". | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexname(index name) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) , ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit)",
    "output_sequence": "select _ from _ where _ | select province , retailvalueofscgoods from ed_retailvalueofscgoods where reportperiod = 'year'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexname",
      "ed_industryproduction.*",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.collectivecomap",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.minitypecomap",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.id",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.stateownedunits"
    ]
  },
  {
    "question": "Xiao Li, can you help me check the annual industrial output value of \"national\" \"state-owned and above-scale industrial enterprises\"? Don't forget to differentiate it by time.",
    "sql": "select enddate, industrialoutputvalueap from ed_industryproduction where reportarea ='national' and statstandard ='state-owned and above-scale industrial enterprises' and reportperiod ='annual';",
    "norm_sql": "select enddate , industrialoutputvalueap from ed_industryproduction where reportarea = 'national' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'annual'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "statstandard(statistical caliber)",
          "enddate(deadline)",
          "reportarea(statistical area category)",
          "mediumcomap(medium-sized enterprise (light industry))",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "reportperiod(data statistics interval)"
        ],
        "column_names_original_en": [
          "statstandard",
          "enddate",
          "reportarea",
          "mediumcomap",
          "industrialvalueadded",
          "industrialoutputvalueap",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "othersunits(other units)",
          "province(province and city)",
          "id(record identifier)",
          "reportarea(statistical category of region)",
          "belowcounty(county and below)",
          "stateownedunits(state-owned unit)",
          "jointventures(joint operating unit)"
        ],
        "column_names_original_en": [
          "othersunits",
          "province",
          "id",
          "reportarea",
          "belowcounty",
          "stateownedunits",
          "jointventures"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "id(record identifier)",
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "id",
          "indexname",
          "indexvalue",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Xiao Li, can you help me check the annual industrial output value of \"national\" \"state-owned and above-scale industrial enterprises\"? Don't forget to differentiate it by time. | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).reportperiod(data statistics interval) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline)",
    "output_sequence": "select _ from _ where _ | select enddate , industrialoutputvalueap from ed_industryproduction where reportarea = 'national' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'annual'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.reportperiod",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.id",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.jointventures",
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate"
    ]
  },
  {
    "question": "What is the gross domestic product of Beijing in the past three years?",
    "sql": "select gdp from ed_grossdomesticproduct where province='Beijing' and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select gdp from ed_grossdomesticproduct where province = 'Beijing' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "enddate(deadline)",
          "gdp(gross domestic product (in million of rmb).)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "enddate",
          "gdp",
          "secondindustrygdp",
          "gdppercapita",
          "gdpgrowthyoy",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indexvalue(index value)",
          "indextitle(index name)",
          "id(record identifier)",
          "enddate(deadline)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "indextitle",
          "id",
          "enddate",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "effectivedate(effective date)",
          "drrtype(reserve requirement ratio category)",
          "ratioceiling(maximum ratio (%))",
          "ratiofloor(minimum ratio (%))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "effectivedate",
          "drrtype",
          "ratioceiling",
          "ratiofloor",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the gross domestic product of Beijing in the past three years? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).id(record identifier)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select gdp from ed_grossdomesticproduct where province = 'Beijing' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.reportperiod",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.id"
    ]
  },
  {
    "question": "Display the annual per capita GDP and gross domestic product data for China.",
    "sql": "select gdppercapita, gdp from ed_grossdomesticproduct;",
    "norm_sql": "select gdppercapita , gdp from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdp(gross domestic product (in million of rmb).)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "province(province and city)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "enddate(deadline)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "gdp",
          "gdppercapita",
          "province",
          "primaryindustrygdp",
          "enddate",
          "thirdindustrygdp",
          "id"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "subjectsum(amount (in million of rmb))",
          "enddate(deadline)",
          "subjectname(indicator name)",
          "yoy(year-on-year increase or decrease (%))",
          "reportperiod(statistical period)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "subjectsum",
          "enddate",
          "subjectname",
          "yoy",
          "reportperiod",
          "id"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "drrtype(reserve requirement ratio category)",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "drrtype",
          "ratiofloor",
          "effectivedate",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Display the annual per capita GDP and gross domestic product data for China. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).id(record identifier) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).id(record identifier)",
    "output_sequence": "select _ from _ | select gdppercapita , gdp from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.id",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.id"
    ]
  },
  {
    "question": "What is the amount of our foreign exchange in the monetary authority's balance sheet?",
    "sql": "select forex from ed_moneyauthoritybs;",
    "norm_sql": "select forex from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "forex(foreign exchange (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "totalliability(total liabilities (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))"
        ],
        "column_names_original_en": [
          "forex",
          "claimtosavingsinst",
          "totalliability",
          "totalassets",
          "claimtosavingsbanks",
          "claimtootherfinnonfininst",
          "bondissuance"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "foodbeverage(catering industry)",
          "collectiveunits(collective unit)",
          "belowcounty(county and below)",
          "reportarea(statistical category of region)",
          "reportperiod(data statistical period)",
          "stateownedunits(state-owned unit)"
        ],
        "column_names_original_en": [
          "retailvalueofscgoods",
          "foodbeverage",
          "collectiveunits",
          "belowcounty",
          "reportarea",
          "reportperiod",
          "stateownedunits"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "centralbankbonds(central bank bonds)",
          "claimstogov(claims on the government (net))",
          "enddate(deadline)",
          "id(record identifier)",
          "quasimoney(quasi-currency)",
          "netabroadassets(foreign net assets)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)"
        ],
        "column_names_original_en": [
          "centralbankbonds",
          "claimstogov",
          "enddate",
          "id",
          "quasimoney",
          "netabroadassets",
          "claimstospecificsavingorg"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the amount of our foreign exchange in the monetary authority's balance sheet? | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
    "output_sequence": "select _ from _ | select forex from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.bondissuance",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.claimstospecificsavingorg"
    ]
  },
  {
    "question": "Can you look up the historical records of RMB credit receipts and payments of financial institutions in our country, and display the total amount of each deposit?",
    "sql": "select totalsavings from ed_chinafibalancesheetrmb;",
    "norm_sql": "select totalsavings from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "totalsavings(all deposit accounts)",
          "savingsdeposits(savings deposits)",
          "domesticloans((one) domestic loan)",
          "othersavings(other deposits)",
          "financialbonds(financial bonds)",
          "sharesandotherinvestments(equity and other investments)",
          "financedeposits(financial deposit)"
        ],
        "column_names_original_en": [
          "totalsavings",
          "savingsdeposits",
          "domesticloans",
          "othersavings",
          "financialbonds",
          "sharesandotherinvestments",
          "financedeposits"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "gsocialsecurity(social security expenditure growth rate)",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "gtaxs(various tax revenues growth rate)",
          "reportperiod(data statistical period)",
          "reportarea(statistical area category)",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "gsocialsecurity",
          "centralgovexpenditure",
          "operatingexpensescesh",
          "gtaxs",
          "reportperiod",
          "reportarea",
          "province"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "accuquantity(accumulated quantity)",
          "statecode(primary country)",
          "accueximvalue(accumulated amount)",
          "currencycode(currency unit)",
          "productname(product name)",
          "category(product category)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "accuquantity",
          "statecode",
          "accueximvalue",
          "currencycode",
          "productname",
          "category"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you look up the historical records of RMB credit receipts and payments of financial institutions in our country, and display the total amount of each deposit? | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).gsocialsecurity(social security expenditure growth rate) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gtaxs(various tax revenues growth rate) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).province(province and city) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).accueximvalue(accumulated amount) , ed_productexportimport(product import and export volume).currencycode(currency unit) , ed_productexportimport(product import and export volume).productname(product name) , ed_productexportimport(product import and export volume).category(product category)",
    "output_sequence": "select _ from _ | select totalsavings from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_financialbalance.*",
      "ed_financialbalance.gsocialsecurity",
      "ed_financialbalance.centralgovexpenditure",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.gtaxs",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.province",
      "ed_productexportimport.*",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.statecode",
      "ed_productexportimport.accueximvalue",
      "ed_productexportimport.currencycode",
      "ed_productexportimport.productname",
      "ed_productexportimport.category"
    ]
  },
  {
    "question": "Help Mr. Wang calculate the quantity of annual \"Year-end Cumulative\" RMB new loan amount, and list the year-on-year growth rate.",
    "sql": "select enddate, subjectsum, yoy from ed_newincreasingloan where reportperiod = 'Year-end Cumulative';",
    "norm_sql": "select enddate , subjectsum , yoy from ed_newincreasingloan where reportperiod = 'Year-end Cumulative'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))",
          "subjectname(indicator name)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "subjectsum",
          "yoy",
          "subjectname",
          "id"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "secumarket(securities market)",
          "itemname(tax rate items)",
          "maturity(repurchase period)",
          "typename(tax rate type)",
          "id(record identifier)",
          "ratioceiling(maximum ratio (%))",
          "valuefloor(minimum value/starting point (rmb))"
        ],
        "column_names_original_en": [
          "secumarket",
          "itemname",
          "maturity",
          "typename",
          "id",
          "ratioceiling",
          "valuefloor"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "abroadliability(abroad liabilities (in million of rmb))",
          "selfownedmoney(own funds (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))"
        ],
        "column_names_original_en": [
          "abroadliability",
          "selfownedmoney",
          "bondissuance",
          "claimtosavingsbanks",
          "forex",
          "otherliability",
          "moneyissuance"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help Mr. Wang calculate the quantity of annual \"Year-end Cumulative\" RMB new loan amount, and list the year-on-year growth rate. | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).id(record identifier) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select enddate , subjectsum , yoy from ed_newincreasingloan where reportperiod = 'Year-end Cumulative'",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.id",
      "ed_taxrate.*",
      "ed_taxrate.secumarket",
      "ed_taxrate.itemname",
      "ed_taxrate.maturity",
      "ed_taxrate.typename",
      "ed_taxrate.id",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valuefloor",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.moneyissuance"
    ]
  },
  {
    "question": "Ah, the central bank recently cut interest rates, and there has been a significant increase in new loans. Please show the amount of new loans added each year since 2000, as well as the year-on-year growth rate, recorded \"monthly.\"",
    "sql": "select enddate, subjectsum, yoy from ed_newincreasingloan where reportperiod='monthly' and strftime('%Y', enddate)>='2000';",
    "norm_sql": "select enddate , subjectsum , yoy from ed_newincreasingloan where reportperiod = 'monthly' and strftime ( '%Y' , enddate ) >= '2000'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) >= _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "subjectsum",
          "yoy",
          "id",
          "subjectname"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "qoqcpifamilyequipmentservice(household equipment and services month-on-month)",
          "qoqcpifood(food price month-on-month)",
          "cumcpitobacco(cumulative average of tobacco, alcohol, and supplies)",
          "cumcpitrafficcommunication(cumulative average of transportation and communication)",
          "qoqcpicloth(clothing month-on-month)",
          "cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services)",
          "cumcpientertainmentservice(accumulated average of entertainment, education, cultural goods and services)"
        ],
        "column_names_original_en": [
          "qoqcpifamilyequipmentservice",
          "qoqcpifood",
          "cumcpitobacco",
          "cumcpitrafficcommunication",
          "qoqcpicloth",
          "cumcpifamilyequipmentservice",
          "cumcpientertainmentservice"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdppercapita(per capita gross domestic product (cny/person))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "enddate(deadline)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "gdp(gross domestic product (in million of rmb).)",
          "id(record identifier)",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "gdppercapita",
          "gdpgrowthyoy",
          "enddate",
          "primaryindustrygdp",
          "gdp",
          "id",
          "secondindustrygdp"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Ah, the central bank recently cut interest rates, and there has been a significant increase in new loans. Please show the amount of new loans added each year since 2000, as well as the year-on-year growth rate, recorded \"monthly.\" | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).qoqcpifamilyequipmentservice(household equipment and services month-on-month) , ed_consumerpriceindex(consumer price index).qoqcpifood(food price month-on-month) , ed_consumerpriceindex(consumer price index).cumcpitobacco(cumulative average of tobacco, alcohol, and supplies) , ed_consumerpriceindex(consumer price index).cumcpitrafficcommunication(cumulative average of transportation and communication) , ed_consumerpriceindex(consumer price index).qoqcpicloth(clothing month-on-month) , ed_consumerpriceindex(consumer price index).cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services) , ed_consumerpriceindex(consumer price index).cumcpientertainmentservice(accumulated average of entertainment, education, cultural goods and services) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) >= _ | select enddate , subjectsum , yoy from ed_newincreasingloan where reportperiod = 'monthly' and strftime ( '%Y' , enddate ) >= '2000'",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectname",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.qoqcpifamilyequipmentservice",
      "ed_consumerpriceindex.qoqcpifood",
      "ed_consumerpriceindex.cumcpitobacco",
      "ed_consumerpriceindex.cumcpitrafficcommunication",
      "ed_consumerpriceindex.qoqcpicloth",
      "ed_consumerpriceindex.cumcpifamilyequipmentservice",
      "ed_consumerpriceindex.cumcpientertainmentservice",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.secondindustrygdp"
    ]
  },
  {
    "question": "Search for the detailed data of foreign currency deposits, central bank bonds, and capital received over the years for Mr. Li.",
    "sql": "select fcdeposits, centralbankbonds, capitalreceived from ed_chinamoneyandbanking;",
    "norm_sql": "select fcdeposits , centralbankbonds , capitalreceived from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "fcdeposits(foreign currency deposit.)",
          "centralbankbonds(central bank bonds)",
          "capitalreceived(paid-up capital)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "bonds(bonds)"
        ],
        "column_names_original_en": [
          "fcdeposits",
          "centralbankbonds",
          "capitalreceived",
          "claimstospecificsavingorg",
          "domesticloans",
          "claimstogov",
          "bonds"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "selfownedmoney(own funds (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))"
        ],
        "column_names_original_en": [
          "selfownedmoney",
          "claimtogovernment",
          "moneyreserves",
          "claimtootherfinnonfininst",
          "forex",
          "otherforeignassets",
          "moneyissuance"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "effectivedate(effective date)",
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)",
          "drrtype(reserve requirement ratio category)",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "effectivedate",
          "ratioceiling",
          "id",
          "drrtype",
          "ratiofloor"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Search for the detailed data of foreign currency deposits, central bank bonds, and capital received over the years for Mr. Li. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%))",
    "output_sequence": "select _ from _ | select fcdeposits , centralbankbonds , capitalreceived from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.bonds",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.moneyissuance",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratiofloor"
    ]
  },
  {
    "question": "Please help me to see the ending balance of agricultural deposits in the financial institution's credit and debit section.",
    "sql": "select agriculturaldeposits from ed_chinafibalancesheetrmb;",
    "norm_sql": "select agriculturaldeposits from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "agriculturaldeposits(agricultural deposit)",
          "totalloans(various loans)",
          "loantogov(financial borrowing)",
          "financialbonds(financial bonds)",
          "shorttermloans(short-term loan)",
          "savingsdeposits(savings deposits)",
          "othersavings(other deposits)"
        ],
        "column_names_original_en": [
          "agriculturaldeposits",
          "totalloans",
          "loantogov",
          "financialbonds",
          "shorttermloans",
          "savingsdeposits",
          "othersavings"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "unitname(company name)",
          "statecode(primary country)",
          "operatetype(import and export categories)",
          "eximvalue(amount)",
          "enddate(deadline)",
          "category(product category)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "unitname",
          "statecode",
          "operatetype",
          "eximvalue",
          "enddate",
          "category"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "secumarket(securities market)",
          "ratioceiling(maximum ratio (%))",
          "valuefloor(minimum value/starting point (rmb))",
          "effectivedate(effective date)",
          "basiscode(billing baseline)",
          "itemname(tax rate items)",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "secumarket",
          "ratioceiling",
          "valuefloor",
          "effectivedate",
          "basiscode",
          "itemname",
          "ratiofloor"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me to see the ending balance of agricultural deposits in the financial institution's credit and debit section. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).operatetype(import and export categories) , ed_productexportimport(product import and export volume).eximvalue(amount) , ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).category(product category) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%))",
    "output_sequence": "select _ from _ | select agriculturaldeposits from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_productexportimport.*",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.unitname",
      "ed_productexportimport.statecode",
      "ed_productexportimport.operatetype",
      "ed_productexportimport.eximvalue",
      "ed_productexportimport.enddate",
      "ed_productexportimport.category",
      "ed_taxrate.*",
      "ed_taxrate.secumarket",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valuefloor",
      "ed_taxrate.effectivedate",
      "ed_taxrate.basiscode",
      "ed_taxrate.itemname",
      "ed_taxrate.ratiofloor"
    ]
  },
  {
    "question": "Provide Wang Gong with the trading market and repurchase period for \"Treasury Bond Collateralized Repo\".",
    "sql": "select secumarket, maturity from ed_taxrate where typename ='Treasury Bond Collateralized Repo' ;",
    "norm_sql": "select secumarket , maturity from ed_taxrate where typename = 'Treasury Bond Collateralized Repo'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "statecode(primary country)",
          "eximvalue(amount)",
          "category(product category)",
          "operatetype(import and export categories)",
          "avgprice(average price)",
          "accueximvalue(accumulated amount)",
          "accuavgprice(cumulative average price)"
        ],
        "column_names_original_en": [
          "statecode",
          "eximvalue",
          "category",
          "operatetype",
          "avgprice",
          "accueximvalue",
          "accuavgprice"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "cumcpi(cumulative average of resident consumer price index)",
          "yoycpihousing(residential year-on-year)",
          "yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year)",
          "cumcpitrafficcommunication(cumulative average of transportation and communication)",
          "qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month)",
          "qoqcpimedicare(healthcare and personal care products month-on-month)",
          "qoqcpitobacco(tobacco, alcohol, and supplies month-on-month)"
        ],
        "column_names_original_en": [
          "cumcpi",
          "yoycpihousing",
          "yoycpientertainmentservice",
          "cumcpitrafficcommunication",
          "qoqcpientertainmentservice",
          "qoqcpimedicare",
          "qoqcpitobacco"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "secumarket(securities market)",
          "maturity(repurchase period)",
          "ratiofloor(minimum ratio (%))",
          "itemname(tax rate items)",
          "valuefloor(minimum value/starting point (rmb))",
          "basiscode(billing baseline)"
        ],
        "column_names_original_en": [
          "typename",
          "secumarket",
          "maturity",
          "ratiofloor",
          "itemname",
          "valuefloor",
          "basiscode"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Provide Wang Gong with the trading market and repurchase period for \"Treasury Bond Collateralized Repo\". | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).eximvalue(amount) , ed_productexportimport(product import and export volume).category(product category) , ed_productexportimport(product import and export volume).operatetype(import and export categories) , ed_productexportimport(product import and export volume).avgprice(average price) , ed_productexportimport(product import and export volume).accueximvalue(accumulated amount) , ed_productexportimport(product import and export volume).accuavgprice(cumulative average price) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).yoycpihousing(residential year-on-year) , ed_consumerpriceindex(consumer price index).yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year) , ed_consumerpriceindex(consumer price index).cumcpitrafficcommunication(cumulative average of transportation and communication) , ed_consumerpriceindex(consumer price index).qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month) , ed_consumerpriceindex(consumer price index).qoqcpimedicare(healthcare and personal care products month-on-month) , ed_consumerpriceindex(consumer price index).qoqcpitobacco(tobacco, alcohol, and supplies month-on-month) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).basiscode(billing baseline)",
    "output_sequence": "select _ from _ where _ | select secumarket , maturity from ed_taxrate where typename = 'Treasury Bond Collateralized Repo'",
    "tc_original": [
      "ed_productexportimport.*",
      "ed_productexportimport.statecode",
      "ed_productexportimport.eximvalue",
      "ed_productexportimport.category",
      "ed_productexportimport.operatetype",
      "ed_productexportimport.avgprice",
      "ed_productexportimport.accueximvalue",
      "ed_productexportimport.accuavgprice",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.yoycpihousing",
      "ed_consumerpriceindex.yoycpientertainmentservice",
      "ed_consumerpriceindex.cumcpitrafficcommunication",
      "ed_consumerpriceindex.qoqcpientertainmentservice",
      "ed_consumerpriceindex.qoqcpimedicare",
      "ed_consumerpriceindex.qoqcpitobacco",
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.maturity",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.itemname",
      "ed_taxrate.valuefloor",
      "ed_taxrate.basiscode"
    ]
  },
  {
    "question": "Do you know the amount of demand deposits and time deposits in the balance sheet of other deposit-taking companies in the past 3 years, including the time field?",
    "sql": "select enddate, demanddeposits, timedeposits from ed_otherdepositorycorpbs where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select enddate , demanddeposits , timedeposits from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "demanddeposits(current deposits for enterprises)",
          "timedeposits(fixed deposit for enterprises)",
          "otherliabilities(other liabilities)",
          "cashinvault(cash on hand)",
          "totalassets(total assets)",
          "claimsonotherdepositcorp(claims on other deposit-based company)"
        ],
        "column_names_original_en": [
          "enddate",
          "demanddeposits",
          "timedeposits",
          "otherliabilities",
          "cashinvault",
          "totalassets",
          "claimsonotherdepositcorp"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "loantogov(financial borrowing)",
          "financedeposits(financial deposit)",
          "domesticloans((one) domestic loan)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "shorttermloans(short-term loan)",
          "overseasloans((two) overseas loans)",
          "mediumlongtermloans(medium-to-long term loans)"
        ],
        "column_names_original_en": [
          "loantogov",
          "financedeposits",
          "domesticloans",
          "trustedandcreditdeposits",
          "shorttermloans",
          "overseasloans",
          "mediumlongtermloans"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indexvalue(index value)",
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indextitle(index name)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "enddate",
          "id",
          "reportperiod",
          "indextitle"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Do you know the amount of demand deposits and time deposits in the balance sheet of other deposit-taking companies in the past 3 years, including the time field? | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name)",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , demanddeposits , timedeposits from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle"
    ]
  },
  {
    "question": "Hey, can you provide the financial institution's credit income and expenditure situation, mainly including fiscal borrowing and assets at international financial institutions?",
    "sql": "select loantogov, assetsatifo from ed_chinafibalancesheetrmb;",
    "norm_sql": "select loantogov , assetsatifo from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "assetsatifo(asset in international financial institutions)",
          "loantogov(financial borrowing)",
          "totalloans(various loans)",
          "mediumlongtermloans(medium-to-long term loans)",
          "id(record identifier)",
          "agriculturaldeposits(agricultural deposit)",
          "totalsavings(all deposit accounts)"
        ],
        "column_names_original_en": [
          "assetsatifo",
          "loantogov",
          "totalloans",
          "mediumlongtermloans",
          "id",
          "agriculturaldeposits",
          "totalsavings"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "secumarket(securities market)",
          "id(record identifier)",
          "ratiofloor(minimum ratio (%))",
          "basiscode(billing baseline)",
          "maturity(repurchase period)",
          "valueceiling(maximum value (rmb))"
        ],
        "column_names_original_en": [
          "itemname",
          "secumarket",
          "id",
          "ratiofloor",
          "basiscode",
          "maturity",
          "valueceiling"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indexvalue(index value (points))",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "id",
          "enddate",
          "reportperiod",
          "indexvalue",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hey, can you provide the financial institution's credit income and expenditure situation, mainly including fiscal borrowing and assets at international financial institutions? | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name)",
    "output_sequence": "select _ from _ | select loantogov , assetsatifo from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.secumarket",
      "ed_taxrate.id",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.basiscode",
      "ed_taxrate.maturity",
      "ed_taxrate.valueceiling",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.indexname"
    ]
  },
  {
    "question": "Mr. Wang, please help me find out the trading market for \"Warrants\" and how many days are used as the basis for calculation.",
    "sql": "select secumarket, basiscode from ed_taxrate where typename = 'Warrants';",
    "norm_sql": "select secumarket , basiscode from ed_taxrate where typename = 'Warrants'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "effectivedate(effective date)",
          "typename(tax rate type)",
          "secumarket(securities market)",
          "id(record identifier)",
          "valueceiling(maximum value (rmb))",
          "ratiofloor(minimum ratio (%))",
          "basiscode(billing baseline)"
        ],
        "column_names_original_en": [
          "effectivedate",
          "typename",
          "secumarket",
          "id",
          "valueceiling",
          "ratiofloor",
          "basiscode"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "enddate",
          "reportperiod",
          "id",
          "indexname"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "reserveassets(reserve assets)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "savingdeposits(resident savings deposits)",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "transferabledeposits(transferable deposits)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "foreignassets(foreign net assets)"
        ],
        "column_names_original_en": [
          "reserveassets",
          "claimsonothernfinstitute",
          "savingdeposits",
          "liabilitiestonfinst",
          "transferabledeposits",
          "claimsonotherfinstitute",
          "foreignassets"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Mr. Wang, please help me find out the trading market for \"Warrants\" and how many days are used as the basis for calculation. | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).basiscode(billing baseline) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets)",
    "output_sequence": "select _ from _ where _ | select secumarket , basiscode from ed_taxrate where typename = 'Warrants'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.effectivedate",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.id",
      "ed_taxrate.valueceiling",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.basiscode",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexname",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.foreignassets"
    ]
  },
  {
    "question": "Please provide Comrade Lao Li with the retail value data of social consumer goods for the restaurant and wholesale retail trade industries in Beijing for these years.",
    "sql": "select foodbeverage, wholesaleretailtrade from ed_retailvalueofscgoods where province ='Beijing';",
    "norm_sql": "select foodbeverage , wholesaleretailtrade from ed_retailvalueofscgoods where province = 'Beijing'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "province(province and city)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "foodbeverage(catering industry)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "reportarea(statistical category of region)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "province",
          "wholesaleretailtrade",
          "foodbeverage",
          "id",
          "reportperiod",
          "reportarea",
          "enddate"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index value (points))",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "id",
          "reportperiod",
          "indexname"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "id(record identifier)",
          "enddate(deadline)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "gdpgrowthyoy",
          "province",
          "gdp",
          "id",
          "enddate",
          "secondindustrygdp",
          "thirdindustrygdp"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please provide Comrade Lao Li with the retail value data of social consumer goods for the restaurant and wholesale retail trade industries in Beijing for these years. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select foodbeverage , wholesaleretailtrade from ed_retailvalueofscgoods where province = 'Beijing'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.id",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.enddate",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp"
    ]
  },
  {
    "question": "What is the billing basis of \"Transaction Fee\" for \"National Treasury Bond Buyout Repurchase\" based on different repurchase terms?",
    "sql": "select maturity, basiscode from ed_taxrate where typename ='National Treasury Bond Buyout Repurchase' and itemname ='Transaction Fee' ;",
    "norm_sql": "select maturity , basiscode from ed_taxrate where typename = 'National Treasury Bond Buyout Repurchase' and itemname = 'Transaction Fee'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "creditloans(trust loan (in 100 million rmb))",
          "rmbloans(rmb loans (in 100 million rmb))",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "enddate(deadline)",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "reportarea(statistical region category)",
          "entrustedloans(trust loan (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "creditloans",
          "rmbloans",
          "foreigncurrencyloans",
          "enddate",
          "corporatebonds",
          "reportarea",
          "entrustedloans"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "collectiveunits(collective unit)",
          "selfemployed(individual unit)",
          "othersindustry(other industries)",
          "foodbeverage(catering industry)",
          "county(county)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "wholesaleretailtrade",
          "collectiveunits",
          "selfemployed",
          "othersindustry",
          "foodbeverage",
          "county",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "maturity(repurchase period)",
          "basiscode(billing baseline)",
          "secumarket(securities market)",
          "ratioceiling(maximum ratio (%))",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "maturity",
          "basiscode",
          "secumarket",
          "ratioceiling",
          "effectivedate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the billing basis of \"Transaction Fee\" for \"National Treasury Bond Buyout Repurchase\" based on different repurchase terms? | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).effectivedate(effective date)",
    "output_sequence": "select _ from _ where _ | select maturity , basiscode from ed_taxrate where typename = 'National Treasury Bond Buyout Repurchase' and itemname = 'Transaction Fee'",
    "tc_original": [
      "ed_socialfinancing.*",
      "ed_socialfinancing.creditloans",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.entrustedloans",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.maturity",
      "ed_taxrate.basiscode",
      "ed_taxrate.secumarket",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.effectivedate"
    ]
  },
  {
    "question": "What are the respective amounts of fiscal deposits and fiscal loans in the historical records of financial institution's credit receipts and payments?",
    "sql": "select financedeposits, loantogov from ed_chinafibalancesheetrmb;",
    "norm_sql": "select financedeposits , loantogov from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "financedeposits(financial deposit)",
          "loantogov(financial borrowing)",
          "totalsavings(all deposit accounts)",
          "domesticloans((one) domestic loan)",
          "currencyname(currency unit code)",
          "moneyincirculation(currency in circulation)",
          "sharesandotherinvestments(equity and other investments)"
        ],
        "column_names_original_en": [
          "financedeposits",
          "loantogov",
          "totalsavings",
          "domesticloans",
          "currencyname",
          "moneyincirculation",
          "sharesandotherinvestments"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "effectivedate(effective date)",
          "ratiofloor(minimum ratio (%))",
          "drrtype(reserve requirement ratio category)",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "id",
          "effectivedate",
          "ratiofloor",
          "drrtype",
          "ratioceiling"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "savingdeposits(resident savings deposits)",
          "enddate(deadline)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "foreignassets(foreign net assets)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "transferabledeposits(transferable deposits)",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)"
        ],
        "column_names_original_en": [
          "savingdeposits",
          "enddate",
          "liabtootherfinancialcorp",
          "foreignassets",
          "claimsonotherfinstitute",
          "transferabledeposits",
          "liabilitiestonfinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the respective amounts of fiscal deposits and fiscal loans in the historical records of financial institution's credit receipts and payments? | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households)",
    "output_sequence": "select _ from _ | select financedeposits , loantogov from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratioceiling",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_otherdepositorycorpbs.liabilitiestonfinst"
    ]
  },
  {
    "question": "How significant is the impact of interest rate cuts by the central bank on loans? Take a look at the annual \"cumulative at year-end\" amount of newly added loans by financial institutions.",
    "sql": "select enddate, subjectsum from ed_newincreasingloan where reportperiod='year-end cumulative';",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'year-end cumulative'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))",
          "subjectname(indicator name)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "subjectsum",
          "yoy",
          "subjectname",
          "id"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "enddate(deadline)",
          "indexvalue(index)",
          "indextype(index category)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "id",
          "enddate",
          "indexvalue",
          "indextype",
          "indexname"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "enddate(deadline)",
          "rmbloans(rmb loans (in 100 million rmb))",
          "id(record identifier)",
          "reportarea(statistical region category)",
          "reportperiod(data statistics interval)",
          "province(province and city)",
          "socialfinancing(total social financing scale (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "rmbloans",
          "id",
          "reportarea",
          "reportperiod",
          "province",
          "socialfinancing"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How significant is the impact of interest rate cuts by the central bank on loans? Take a look at the annual \"cumulative at year-end\" amount of newly added loans by financial institutions. | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).id(record identifier) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb))",
    "output_sequence": "select _ from _ where _ | select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'year-end cumulative'",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.id",
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_socialfinancing.*",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.id",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.province",
      "ed_socialfinancing.socialfinancing"
    ]
  },
  {
    "question": "I want to know the respective amounts of government claims and non-financial sector claims when the total value of domestic credit in China exceeds 100 million yuan.",
    "sql": "select claimstogov, claimstononfinancialinst from ed_chinamoneyandbanking where domesticloans > 100000000;",
    "norm_sql": "select claimstogov , claimstononfinancialinst from ed_chinamoneyandbanking where domesticloans > 100000000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "claimstogov(claims on the government (net))",
          "money1(currency (narrow money m1))",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "fcdeposits(foreign currency deposit.)",
          "domesticloans(domestic credit)"
        ],
        "column_names_original_en": [
          "enddate",
          "moneyandquasimoney",
          "claimstogov",
          "money1",
          "claimstononfinancialinst",
          "fcdeposits",
          "domesticloans"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "reportarea(statistical category of the region)",
          "sovereigntycountry(the subject country)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "id(record identifier)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "reportarea",
          "sovereigntycountry",
          "imvalueofgoods",
          "id",
          "exvalueofgoods",
          "gyoyofeximvaluegoods",
          "gyoyofexvaluegoods"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "otherliability(other liabilities (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "nonfinancialorgdeposits",
          "moneyissuance",
          "totalassets",
          "otherliability",
          "claimtosavingsbanks",
          "governmentsavings",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the respective amounts of government claims and non-financial sector claims when the total value of domestic credit in China exceeds 100 million yuan. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier)",
    "output_sequence": "select _ from _ where _ | select claimstogov , claimstononfinancialinst from ed_chinamoneyandbanking where domesticloans > 100000000",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_exportimport.*",
      "ed_exportimport.reportarea",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.id",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.id"
    ]
  },
  {
    "question": "What are the securities markets where \"B shares\" is located?",
    "sql": "select secumarket from ed_taxrate where typename='B shares';",
    "norm_sql": "select secumarket from ed_taxrate where typename = 'B shares'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "secumarket(securities market)",
          "valuefloor(minimum value/starting point (rmb))",
          "valueceiling(maximum value (rmb))",
          "maturity(repurchase period)",
          "id(record identifier)",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "typename",
          "secumarket",
          "valuefloor",
          "valueceiling",
          "maturity",
          "id",
          "ratiofloor"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "sovereigntycountry(the subject country)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "reportperiod(data statistical period)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "reportarea(statistical category of the region)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "sovereigntycountry",
          "gyoyofimvaluegoods",
          "exvalueofgoods",
          "reportperiod",
          "gyoyofexvaluegoods",
          "reportarea",
          "eximvalueofgoods"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "gnationaldefense(defense expenditure growth rate)",
          "id(record identifier)",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))",
          "reportarea(statistical area category)",
          "commercialtax(business tax revenue (in million of rmb))",
          "enterpriseincometax(enterprise income tax (in million of rmb))",
          "gfinancialexpenditure(fiscal expenditure growth rate)"
        ],
        "column_names_original_en": [
          "gnationaldefense",
          "id",
          "centralgovexpenditure",
          "reportarea",
          "commercialtax",
          "enterpriseincometax",
          "gfinancialexpenditure"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the securities markets where \"B shares\" is located? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate)",
    "output_sequence": "select _ from _ where _ | select secumarket from ed_taxrate where typename = 'B shares'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.valuefloor",
      "ed_taxrate.valueceiling",
      "ed_taxrate.maturity",
      "ed_taxrate.id",
      "ed_taxrate.ratiofloor",
      "ed_exportimport.*",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.reportperiod",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.reportarea",
      "ed_exportimport.eximvalueofgoods",
      "ed_financialbalance.*",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.id",
      "ed_financialbalance.centralgovexpenditure",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.enterpriseincometax",
      "ed_financialbalance.gfinancialexpenditure"
    ]
  },
  {
    "question": "Please help me check the amount of non-financial institution claims in the balance sheet of other depository corporations.",
    "sql": "select claimsonothernfinstitute from ed_otherdepositorycorpbs;",
    "norm_sql": "select claimsonothernfinstitute from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "province(province and city)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "id(record identifier)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "gdppercapita",
          "gdpgrowthyoy",
          "province",
          "secondindustrygdp",
          "id",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "id(record identifier)",
          "creditloans(trust loan (in 100 million rmb))",
          "enddate(deadline)",
          "rmbloans(rmb loans (in 100 million rmb))",
          "socialfinancing(total social financing scale (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "foreigncurrencyloans",
          "corporatebonds",
          "id",
          "creditloans",
          "enddate",
          "rmbloans",
          "socialfinancing"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsonothernfinstitute(claims on non-financial institution)",
          "enddate(deadline)",
          "transferabledeposits(transferable deposits)",
          "id(record identifier)",
          "totalliabilities(total liabilities)",
          "totalassets(total assets)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "claimsonothernfinstitute",
          "enddate",
          "transferabledeposits",
          "id",
          "totalliabilities",
          "totalassets",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me check the amount of non-financial institution claims in the balance sheet of other depository corporations. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ | select claimsonothernfinstitute from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_socialfinancing.*",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.id",
      "ed_socialfinancing.creditloans",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.socialfinancing",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "Please check the maximum and minimum index values of the \"Tobacco Products Industry\" in the \"Previous Year Same Period\" statistical cycle.",
    "sql": "select max(indexvalue), min(indexvalue) from ed_producerpiformp where indexname ='Tobacco Products Industry' and reportperiod ='Previous Year Same Period' ;",
    "norm_sql": "select max ( indexvalue ) , min ( indexvalue ) from ed_producerpiformp where indexname = 'Tobacco Products Industry' and reportperiod = 'Previous Year Same Period'",
    "sql_skeleton": "select max ( _ ) , min ( _ ) from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "id(record identifier)",
          "totalliability(total liabilities (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))"
        ],
        "column_names_original_en": [
          "id",
          "totalliability",
          "totalassets",
          "claimtosavingsbanks",
          "forex",
          "claimtosavingsinst",
          "nonfinancialorgdeposits"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "othersunits(other units)",
          "id(record identifier)",
          "city(city)",
          "belowcounty(county and below)",
          "enddate(deadline)",
          "selfemployed(individual unit)"
        ],
        "column_names_original_en": [
          "retailvalueofscgoods",
          "othersunits",
          "id",
          "city",
          "belowcounty",
          "enddate",
          "selfemployed"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)",
          "id(record identifier)",
          "indextype(index category)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indexname",
          "indexvalue",
          "enddate",
          "id",
          "indextype"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please check the maximum and minimum index values of the \"Tobacco Products Industry\" in the \"Previous Year Same Period\" statistical cycle. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indextype(index category)",
    "output_sequence": "select max ( _ ) , min ( _ ) from _ where _ | select max ( indexvalue ) , min ( indexvalue ) from ed_producerpiformp where indexname = 'Tobacco Products Industry' and reportperiod = 'Previous Year Same Period'",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.id",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indextype"
    ]
  },
  {
    "question": "Show the minimum ratio of \"Deposit Reserve Rate\" in \"Deposit-type Financial Institutions\".",
    "sql": "select ratiofloor from ed_taxrate where typename ='Deposit-type Financial Institutions' and itemname ='Deposit Reserve Rate';",
    "norm_sql": "select ratiofloor from ed_taxrate where typename = 'Deposit-type Financial Institutions' and itemname = 'Deposit Reserve Rate'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)",
          "valueceiling(maximum value (rmb))",
          "valuefloor(minimum value/starting point (rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "ratiofloor",
          "effectivedate",
          "valueceiling",
          "valuefloor",
          "id"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "indexvalue(index value (points))",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexname",
          "reportperiod",
          "indexvalue",
          "id",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "city(city)",
          "jointventures(joint operating unit)",
          "reportarea(statistical category of region)",
          "enddate(deadline)",
          "foodbeverage(catering industry)",
          "province(province and city)",
          "stateownedunits(state-owned unit)"
        ],
        "column_names_original_en": [
          "city",
          "jointventures",
          "reportarea",
          "enddate",
          "foodbeverage",
          "province",
          "stateownedunits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Show the minimum ratio of \"Deposit Reserve Rate\" in \"Deposit-type Financial Institutions\". | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).id(record identifier) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit)",
    "output_sequence": "select _ from _ where _ | select ratiofloor from ed_taxrate where typename = 'Deposit-type Financial Institutions' and itemname = 'Deposit Reserve Rate'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.effectivedate",
      "ed_taxrate.valueceiling",
      "ed_taxrate.valuefloor",
      "ed_taxrate.id",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.enddate",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.stateownedunits"
    ]
  },
  {
    "question": "Please list the financial revenue and expenditure situation of China's provinces and cities, including central government revenue and local government revenue.",
    "sql": "select centralgovrevenue, localgovrevenue from ed_financialbalance;",
    "norm_sql": "select centralgovrevenue , localgovrevenue from ed_financialbalance",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "centralgovrevenue(central fiscal revenue (in million of yuan))",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "enterpriseincometax(enterprise income tax (in million of rmb))",
          "gnationaldefense(defense expenditure growth rate)",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "nationaldefense(defense expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "centralgovrevenue",
          "localgovrevenue",
          "operatingexpensescesh",
          "enterpriseincometax",
          "gnationaldefense",
          "gfinancialrevenue",
          "nationaldefense"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "fcdeposits(foreign currency deposit.)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "money1(currency (narrow money m1))",
          "netabroadassets(foreign net assets)",
          "claimstogov(claims on the government (net))",
          "capitalreceived(paid-up capital)"
        ],
        "column_names_original_en": [
          "enddate",
          "fcdeposits",
          "moneyandquasimoney",
          "money1",
          "netabroadassets",
          "claimstogov",
          "capitalreceived"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "qoqcpitrafficcommunication(transportation and communication month-on-month)",
          "cumcpitrafficcommunication(cumulative average of transportation and communication)",
          "yoycpicloth(clothing year-on-year)",
          "yoycpitrafficcommunication(transportation and communication year-over-year)",
          "yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year)",
          "yoycpihousing(residential year-on-year)",
          "cumcpi(cumulative average of resident consumer price index)"
        ],
        "column_names_original_en": [
          "qoqcpitrafficcommunication",
          "cumcpitrafficcommunication",
          "yoycpicloth",
          "yoycpitrafficcommunication",
          "yoycpientertainmentservice",
          "yoycpihousing",
          "cumcpi"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the financial revenue and expenditure situation of China's provinces and cities, including central government revenue and local government revenue. | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).centralgovrevenue(central fiscal revenue (in million of yuan)) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).qoqcpitrafficcommunication(transportation and communication month-on-month) , ed_consumerpriceindex(consumer price index).cumcpitrafficcommunication(cumulative average of transportation and communication) , ed_consumerpriceindex(consumer price index).yoycpicloth(clothing year-on-year) , ed_consumerpriceindex(consumer price index).yoycpitrafficcommunication(transportation and communication year-over-year) , ed_consumerpriceindex(consumer price index).yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year) , ed_consumerpriceindex(consumer price index).yoycpihousing(residential year-on-year) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index)",
    "output_sequence": "select _ from _ | select centralgovrevenue , localgovrevenue from ed_financialbalance",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.centralgovrevenue",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.enterpriseincometax",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.nationaldefense",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.qoqcpitrafficcommunication",
      "ed_consumerpriceindex.cumcpitrafficcommunication",
      "ed_consumerpriceindex.yoycpicloth",
      "ed_consumerpriceindex.yoycpitrafficcommunication",
      "ed_consumerpriceindex.yoycpientertainmentservice",
      "ed_consumerpriceindex.yoycpihousing",
      "ed_consumerpriceindex.cumcpi"
    ]
  },
  {
    "question": "Please help me extract the deposit amount data that is not included in broad money from the balance sheet of other depositary financial corporations.",
    "sql": "select depositsexcludedfromm2 from ed_otherdepositorycorpbs;",
    "norm_sql": "select depositsexcludedfromm2 from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indexvalue(index value)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indextitle(index name)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "id",
          "reportperiod",
          "enddate",
          "indextitle"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "quantity(quantity)",
          "accuquantity(accumulated quantity)",
          "enddate(deadline)",
          "operatetype(import and export categories)",
          "statecode(primary country)",
          "productname(product name)",
          "eximvalue(amount)"
        ],
        "column_names_original_en": [
          "quantity",
          "accuquantity",
          "enddate",
          "operatetype",
          "statecode",
          "productname",
          "eximvalue"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "claimsonotherresidentsec(claims on other resident sectors)",
          "depositswithcentralbank(reserve deposit)",
          "claimsongovernment(claims on government (net))",
          "depositsexcludedfromm2(deposits not included in broad money)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "depositsincludedinm2",
          "claimsonotherresidentsec",
          "depositswithcentralbank",
          "claimsongovernment",
          "depositsexcludedfromm2",
          "claimsonotherfinstitute",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me extract the deposit amount data that is not included in broad money from the balance sheet of other depositary financial corporations. | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).quantity(quantity) , ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).operatetype(import and export categories) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).productname(product name) , ed_productexportimport(product import and export volume).eximvalue(amount) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline)",
    "output_sequence": "select _ from _ | select depositsexcludedfromm2 from ed_otherdepositorycorpbs",
    "tc_original": [
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indextitle",
      "ed_productexportimport.*",
      "ed_productexportimport.quantity",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.enddate",
      "ed_productexportimport.operatetype",
      "ed_productexportimport.statecode",
      "ed_productexportimport.productname",
      "ed_productexportimport.eximvalue",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.enddate"
    ]
  },
  {
    "question": "Help Engineer Wang to compile the number of provinces with GDP exceeding 20 billion before the year 2000, along with their GDP and per capita GDP. Remember to include the time.",
    "sql": "select province, enddate, gdp, gdppercapita from ed_grossdomesticproduct where strftime('%Y', enddate)<'2000' and gdp > 20000;",
    "norm_sql": "select province , enddate , gdp , gdppercapita from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) < '2000' and gdp > 20000",
    "sql_skeleton": "select _ from _ where strftime ( _ ) < _ and _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "enddate(deadline)",
          "gdp(gross domestic product (in million of rmb).)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "id(record identifier)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "enddate",
          "gdp",
          "gdppercapita",
          "id",
          "thirdindustrygdp",
          "secondindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "accuquantity(accumulated quantity)",
          "id(record identifier)",
          "statecode(primary country)",
          "avgprice(average price)",
          "category(product category)",
          "eximvalue(amount)",
          "accuavgprice(cumulative average price)"
        ],
        "column_names_original_en": [
          "accuquantity",
          "id",
          "statecode",
          "avgprice",
          "category",
          "eximvalue",
          "accuavgprice"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "salestax(business tax (in million of rmb))",
          "gnationaldefense(defense expenditure growth rate)",
          "gtaxs(various tax revenues growth rate)",
          "gsocialsecurity(social security expenditure growth rate)",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "gfinancialrevenue",
          "salestax",
          "gnationaldefense",
          "gtaxs",
          "gsocialsecurity",
          "centralgovexpenditure"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help Engineer Wang to compile the number of provinces with GDP exceeding 20 billion before the year 2000, along with their GDP and per capita GDP. Remember to include the time. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).id(record identifier) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).avgprice(average price) , ed_productexportimport(product import and export volume).category(product category) , ed_productexportimport(product import and export volume).eximvalue(amount) , ed_productexportimport(product import and export volume).accuavgprice(cumulative average price) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).gtaxs(various tax revenues growth rate) , ed_financialbalance(government revenue and expenditure).gsocialsecurity(social security expenditure growth rate) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) < _ and _ | select province , enddate , gdp , gdppercapita from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) < '2000' and gdp > 20000",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_productexportimport.*",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.id",
      "ed_productexportimport.statecode",
      "ed_productexportimport.avgprice",
      "ed_productexportimport.category",
      "ed_productexportimport.eximvalue",
      "ed_productexportimport.accuavgprice",
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.salestax",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.gtaxs",
      "ed_financialbalance.gsocialsecurity",
      "ed_financialbalance.centralgovexpenditure"
    ]
  },
  {
    "question": "What is the total value of import and export goods in China over the years?",
    "sql": "select eximvalueofgoods from ed_exportimport;",
    "norm_sql": "select eximvalueofgoods from ed_exportimport",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index value)",
          "reportarea(statistical region category)",
          "id(record identifier)",
          "comparetolastmonth(index month-on-month change (points))",
          "indextitle(index name)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "reportarea",
          "id",
          "comparetolastmonth",
          "indextitle",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "commodity(product name)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "sovereigntycountry(the subject country)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "eximvalueofgoods",
          "reportperiod",
          "enddate",
          "commodity",
          "gyoyofeximvaluegoods",
          "sovereigntycountry",
          "gyoyofimvaluegoods"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "productname(product name)",
          "avgprice(average price)",
          "unitname(company name)",
          "operatetype(import and export categories)",
          "reportperiod(data statistical period)",
          "statecode(primary country)",
          "quantity(quantity)"
        ],
        "column_names_original_en": [
          "productname",
          "avgprice",
          "unitname",
          "operatetype",
          "reportperiod",
          "statecode",
          "quantity"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the total value of import and export goods in China over the years? | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).productname(product name) , ed_productexportimport(product import and export volume).avgprice(average price) , ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).operatetype(import and export categories) , ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).quantity(quantity)",
    "output_sequence": "select _ from _ | select eximvalueofgoods from ed_exportimport",
    "tc_original": [
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.reportperiod",
      "ed_exportimport.*",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.reportperiod",
      "ed_exportimport.enddate",
      "ed_exportimport.commodity",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_productexportimport.*",
      "ed_productexportimport.productname",
      "ed_productexportimport.avgprice",
      "ed_productexportimport.unitname",
      "ed_productexportimport.operatetype",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.statecode",
      "ed_productexportimport.quantity"
    ]
  },
  {
    "question": "Do we have records of the retail data for social consumer goods of our joint venture units over the years? Please show it.",
    "sql": "select jointventures from ed_retailvalueofscgoods;",
    "norm_sql": "select jointventures from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "jointventures(joint operating unit)",
          "selfemployed(individual unit)",
          "foodbeverage(catering industry)",
          "reportarea(statistical category of region)",
          "province(province and city)",
          "county(county)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "jointventures",
          "selfemployed",
          "foodbeverage",
          "reportarea",
          "province",
          "county",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "moneyreserves(reserve currency (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "moneyreserves",
          "moneyissuance",
          "otherliability",
          "claimtogovernment",
          "bondissuance",
          "nonfinancialorgdeposits",
          "claimtosavingsbanks"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "totalassets(total assets)",
          "foreignliabilities(foreign liabilities)",
          "depositswithcentralbank(reserve deposit)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "id(record identifier)",
          "otherassets(other assets)"
        ],
        "column_names_original_en": [
          "liabtootherfinancialcorp",
          "totalassets",
          "foreignliabilities",
          "depositswithcentralbank",
          "depositsincludedinm2",
          "id",
          "otherassets"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Do we have records of the retail data for social consumer goods of our joint venture units over the years? Please show it. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets)",
    "output_sequence": "select _ from _ | select jointventures from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.enddate",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.foreignliabilities",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.otherassets"
    ]
  },
  {
    "question": "Since 2010, which records in the balance sheet of other depositary companies have a total liabilities of 50 million or more? List the time and total liabilities amount.",
    "sql": "select enddate, totalliabilities from ed_otherdepositorycorpbs where strftime('%Y', enddate)>= '2010' and totalliabilities > 50000000;",
    "norm_sql": "select enddate , totalliabilities from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) >= '2010' and totalliabilities > 50000000",
    "sql_skeleton": "select _ from _ where strftime ( _ ) >= _ and _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "totalliabilities(total liabilities)",
          "cashinvault(cash on hand)",
          "savingdeposits(resident savings deposits)",
          "foreignliabilities(foreign liabilities)",
          "claimsongovernment(claims on government (net))",
          "claimsonotherfinstitute(claims on other financial institutions)"
        ],
        "column_names_original_en": [
          "enddate",
          "totalliabilities",
          "cashinvault",
          "savingdeposits",
          "foreignliabilities",
          "claimsongovernment",
          "claimsonotherfinstitute"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpitobacco(tobacco, alcohol, and supplies year-on-year)",
          "qoqcpifamilyequipmentservice(household equipment and services month-on-month)",
          "cumcpihousing(accumulated average of residence)",
          "yoycpicloth(clothing year-on-year)",
          "qoqcpimedicare(healthcare and personal care products month-on-month)",
          "cumcpimedicare(cumulative average of healthcare and personal care products)",
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)"
        ],
        "column_names_original_en": [
          "yoycpitobacco",
          "qoqcpifamilyequipmentservice",
          "cumcpihousing",
          "yoycpicloth",
          "qoqcpimedicare",
          "cumcpimedicare",
          "yoycpifamilyequipmentservice"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "indexvalue(index)",
          "indextype(index category)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexname",
          "reportperiod",
          "id",
          "indexvalue",
          "indextype",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Since 2010, which records in the balance sheet of other depositary companies have a total liabilities of 50 million or more? List the time and total liabilities amount. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpitobacco(tobacco, alcohol, and supplies year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpifamilyequipmentservice(household equipment and services month-on-month) , ed_consumerpriceindex(consumer price index).cumcpihousing(accumulated average of residence) , ed_consumerpriceindex(consumer price index).yoycpicloth(clothing year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpimedicare(healthcare and personal care products month-on-month) , ed_consumerpriceindex(consumer price index).cumcpimedicare(cumulative average of healthcare and personal care products) , ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).enddate(deadline)",
    "output_sequence": "select _ from _ where strftime ( _ ) >= _ and _ | select enddate , totalliabilities from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) >= '2010' and totalliabilities > 50000000",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.foreignliabilities",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpitobacco",
      "ed_consumerpriceindex.qoqcpifamilyequipmentservice",
      "ed_consumerpriceindex.cumcpihousing",
      "ed_consumerpriceindex.yoycpicloth",
      "ed_consumerpriceindex.qoqcpimedicare",
      "ed_consumerpriceindex.cumcpimedicare",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.enddate"
    ]
  },
  {
    "question": "Wang Gong asked if the index type of the \"Metal Products Industry\" has changed since 2010 and what is the index value. Show the situation of the \"same month of the previous year\"",
    "sql": "select indextype, indexvalue from ed_producerpiformp where indexname ='Metal Products Industry' and reportperiod ='Same month of the previous year' and strftime('%Y', enddate)>='2010';",
    "norm_sql": "select indextype , indexvalue from ed_producerpiformp where indexname = 'Metal Products Industry' and reportperiod = 'Same month of the previous year' and strftime ( '%Y' , enddate ) >= '2010'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) >= _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "id"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "indexvalue(index value)",
          "indexcode(index code)",
          "reportperiod(data statistical period)",
          "reportarea(statistical region category)",
          "indextitle(index name)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "indexcode",
          "reportperiod",
          "reportarea",
          "indextitle",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "enddate(deadline)",
          "reportarea(statistical category of region)",
          "city(city)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "reportperiod(data statistical period)",
          "selfemployed(individual unit)",
          "jointventures(joint operating unit)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportarea",
          "city",
          "wholesaleretailtrade",
          "reportperiod",
          "selfemployed",
          "jointventures"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Wang Gong asked if the index type of the \"Metal Products Industry\" has changed since 2010 and what is the index value. Show the situation of the \"same month of the previous year\" | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).id(record identifier) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) >= _ | select indextype , indexvalue from ed_producerpiformp where indexname = 'Metal Products Industry' and reportperiod = 'Same month of the previous year' and strftime ( '%Y' , enddate ) >= '2010'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.id",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.jointventures"
    ]
  },
  {
    "question": "Hi, could you please display the index value of the \"Textile Industry\" in the \"National Economic Industry Index\" for the \"Same Month Last Year\"?",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod ='Same Month Last Year' and indextype ='National Economic Industry Index' and indexname ='Textile Industry';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'Same Month Last Year' and indextype = 'National Economic Industry Index' and indexname = 'Textile Industry'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "id",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "stateownedunits(state-owned unit)",
          "collectiveunits(collective unit)",
          "othersindustry(other industries)",
          "reportarea(statistical category of region)",
          "selfemployed(individual unit)",
          "county(county)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "stateownedunits",
          "collectiveunits",
          "othersindustry",
          "reportarea",
          "selfemployed",
          "county",
          "id"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "indexcode(index code)",
          "comparetolastmonth(index month-on-month change (points))",
          "indexvalue(index value)",
          "id(record identifier)",
          "enddate(deadline)",
          "reportarea(statistical region category)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indexcode",
          "comparetolastmonth",
          "indexvalue",
          "id",
          "enddate",
          "reportarea",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hi, could you please display the index value of the \"Textile Industry\" in the \"National Economic Industry Index\" for the \"Same Month Last Year\"? | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period)",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'Same Month Last Year' and indextype = 'National Economic Industry Index' and indexname = 'Textile Industry'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.id",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.reportperiod"
    ]
  },
  {
    "question": "Please help to check the total value of imported goods and the year-on-year growth rate of imports in China.",
    "sql": "select imvalueofgoods, gyoyofimvaluegoods from ed_exportimport;",
    "norm_sql": "select imvalueofgoods , gyoyofimvaluegoods from ed_exportimport",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "id(record identifier)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "reportperiod(data statistical period)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "gyoyofimvaluegoods",
          "id",
          "gyoyofexvaluegoods",
          "imvalueofgoods",
          "eximvalueofgoods",
          "reportperiod",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "enddate(deadline)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "gdp(gross domestic product (in million of rmb).)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "thirdindustrygdp",
          "enddate",
          "gdpgrowthyoy",
          "gdp",
          "gdppercapita",
          "primaryindustrygdp",
          "secondindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "otherassets(other assets)",
          "savingdeposits(resident savings deposits)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "totalassets(total assets)",
          "foreignassets(foreign net assets)"
        ],
        "column_names_original_en": [
          "liabilitiestocentralbank",
          "otherassets",
          "savingdeposits",
          "claimsonotherfinstitute",
          "liabtootherfinancialcorp",
          "totalassets",
          "foreignassets"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help to check the total value of imported goods and the year-on-year growth rate of imports in China. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).enddate(deadline) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets) , ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets)",
    "output_sequence": "select _ from _ | select imvalueofgoods , gyoyofimvaluegoods from ed_exportimport",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.id",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.reportperiod",
      "ed_exportimport.enddate",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.otherassets",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.foreignassets"
    ]
  },
  {
    "question": "Search for the \"annual\" retail data of social consumer goods for joint ventures and collective units in Beijing over the past three years.",
    "sql": "select jointventures , collectiveunits from ed_retailvalueofscgoods where province = 'Beijing' and reportperiod = 'annual' and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select jointventures , collectiveunits from ed_retailvalueofscgoods where province = 'Beijing' and reportperiod = 'annual' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "province(province and city)",
          "collectiveunits(collective unit)",
          "jointventures(joint operating unit)",
          "city(city)",
          "wholesaleretailtrade(wholesale and retail trade industry)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "province",
          "collectiveunits",
          "jointventures",
          "city",
          "wholesaleretailtrade"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "unitname(company name)",
          "accuavgprice(cumulative average price)",
          "enddate(deadline)",
          "eximvalue(amount)",
          "productname(product name)"
        ],
        "column_names_original_en": [
          "id",
          "reportperiod",
          "unitname",
          "accuavgprice",
          "enddate",
          "eximvalue",
          "productname"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "enterpriseincometax(enterprise income tax (in million of rmb))",
          "genterpriseincome(enterprise revenue growth rate)",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "commercialtax(business tax revenue (in million of rmb))",
          "gsocialsecurity(social security expenditure growth rate)",
          "enterpriseincome(enterprise income (in million of rmb))"
        ],
        "column_names_original_en": [
          "localgovexpenditure",
          "enterpriseincometax",
          "genterpriseincome",
          "operatingexpensescesh",
          "commercialtax",
          "gsocialsecurity",
          "enterpriseincome"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Search for the \"annual\" retail data of social consumer goods for joint ventures and collective units in Beijing over the past three years. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).id(record identifier) , ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).accuavgprice(cumulative average price) , ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).eximvalue(amount) , ed_productexportimport(product import and export volume).productname(product name) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).genterpriseincome(enterprise revenue growth rate) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gsocialsecurity(social security expenditure growth rate) , ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select jointventures , collectiveunits from ed_retailvalueofscgoods where province = 'Beijing' and reportperiod = 'annual' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_productexportimport.*",
      "ed_productexportimport.id",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.unitname",
      "ed_productexportimport.accuavgprice",
      "ed_productexportimport.enddate",
      "ed_productexportimport.eximvalue",
      "ed_productexportimport.productname",
      "ed_financialbalance.*",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.enterpriseincometax",
      "ed_financialbalance.genterpriseincome",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.gsocialsecurity",
      "ed_financialbalance.enterpriseincome"
    ]
  },
  {
    "question": "What is the cumulative value of \"total national\" retail sales of consumer goods in China in 2005?",
    "sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where reportarea = 'total national' and reportperiod = 'cumulative end' and strftime('%Y', enddate) = '2005';",
    "norm_sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where reportarea = 'total national' and reportperiod = 'cumulative end' and strftime ( '%Y' , enddate ) = '2005'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "reportarea(statistical category of region)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "stateownedunits(state-owned unit)",
          "province(province and city)",
          "othersindustry(other industries)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "reportarea",
          "retailvalueofscgoods",
          "stateownedunits",
          "province",
          "othersindustry"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "valueaddedtax(value added tax (in million of rmb))",
          "commercialtax(business tax revenue (in million of rmb))",
          "gsupportunderdevelopedarea(policy subsidy expenditure growth rate)",
          "enddate(deadline)",
          "genterpriseincome(enterprise revenue growth rate)",
          "gnationaldefense(defense expenditure growth rate)",
          "gsocialsecurity(social security expenditure growth rate)"
        ],
        "column_names_original_en": [
          "valueaddedtax",
          "commercialtax",
          "gsupportunderdevelopedarea",
          "enddate",
          "genterpriseincome",
          "gnationaldefense",
          "gsocialsecurity"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "minitypecomap(small-scale enterprise (light industry))",
          "mediumcomap(medium-sized enterprise (light industry))",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "hivalueap(heavy industry (in million of rmb))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "minitypecomap",
          "mediumcomap",
          "industrialvalueadded",
          "industrialoutputvalueap",
          "stateownedcontrolledcomap",
          "hivalueap",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the cumulative value of \"total national\" retail sales of consumer goods in China in 2005? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gsupportunderdevelopedarea(policy subsidy expenditure growth rate) , ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).genterpriseincome(enterprise revenue growth rate) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).gsocialsecurity(social security expenditure growth rate) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).enddate(deadline)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = _ | select retailvalueofscgoods from ed_retailvalueofscgoods where reportarea = 'total national' and reportperiod = 'cumulative end' and strftime ( '%Y' , enddate ) = '2005'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_financialbalance.*",
      "ed_financialbalance.valueaddedtax",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.gsupportunderdevelopedarea",
      "ed_financialbalance.enddate",
      "ed_financialbalance.genterpriseincome",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.gsocialsecurity",
      "ed_industryproduction.*",
      "ed_industryproduction.minitypecomap",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.enddate"
    ]
  },
  {
    "question": "In 2010, what are the records of the number of bond issuances by the central bank in China exceeding 10 million?",
    "sql": "select centralbankbonds from ed_chinamoneyandbanking  where strftime('%Y', enddate)='2010' and centralbankbonds > 10000000;",
    "norm_sql": "select centralbankbonds from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = '2010' and centralbankbonds > 10000000",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _ and _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "enddate(deadline)",
          "bonds(bonds)",
          "netabroadassets(foreign net assets)",
          "centralbankbonds(central bank bonds)"
        ],
        "column_names_original_en": [
          "claimstospecificsavingorg",
          "claimstootherinst",
          "claimstononfinancialinst",
          "enddate",
          "bonds",
          "netabroadassets",
          "centralbankbonds"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "province(province)",
          "largecomap(large-scale enterprise (light industry))",
          "id(record identifier)",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "hivalueap(heavy industry (in million of rmb))",
          "mediumcomap(medium-sized enterprise (light industry))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "province",
          "largecomap",
          "id",
          "stateownedcontrolledcomap",
          "hivalueap",
          "mediumcomap",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "commodity(product name)",
          "id(record identifier)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "reportarea(statistical category of the region)",
          "sovereigntycountry(the subject country)"
        ],
        "column_names_original_en": [
          "commodity",
          "id",
          "eximvalueofgoods",
          "gyoyofeximvaluegoods",
          "imvalueofgoods",
          "reportarea",
          "sovereigntycountry"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In 2010, what are the records of the number of bond issuances by the central bank in China exceeding 10 million? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).enddate(deadline) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).sovereigntycountry(the subject country)",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ and _ | select centralbankbonds from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) = '2010' and centralbankbonds > 10000000",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_industryproduction.*",
      "ed_industryproduction.province",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.id",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.enddate",
      "ed_exportimport.*",
      "ed_exportimport.commodity",
      "ed_exportimport.id",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.reportarea",
      "ed_exportimport.sovereigntycountry"
    ]
  },
  {
    "question": "In general, what is the calculation basis for \"Transaction Fee\" for \"National Treasury Bond New Pledged Repurchase\" and what is the repurchase term?",
    "sql": "select basiscode, maturity from ed_taxrate where typename ='National Treasury Bond New Pledged Repurchase' and itemname = 'Transaction Fee';",
    "norm_sql": "select basiscode , maturity from ed_taxrate where typename = 'National Treasury Bond New Pledged Repurchase' and itemname = 'Transaction Fee'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "maturity(repurchase period)",
          "basiscode(billing baseline)",
          "valuefloor(minimum value/starting point (rmb))",
          "secumarket(securities market)",
          "valueceiling(maximum value (rmb))"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "maturity",
          "basiscode",
          "valuefloor",
          "secumarket",
          "valueceiling"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "indexvalue(index)",
          "indexname(index name)",
          "indextype(index category)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "indexvalue",
          "indexname",
          "indextype",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "enddate(deadline)",
          "id(record identifier)",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "rmbloans(rmb loans (in 100 million rmb))",
          "reportperiod(data statistics interval)",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "socialfinancing",
          "enddate",
          "id",
          "foreigncurrencyloans",
          "rmbloans",
          "reportperiod",
          "undiscountedbacceptances"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In general, what is the calculation basis for \"Transaction Fee\" for \"National Treasury Bond New Pledged Repurchase\" and what is the repurchase term? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
    "output_sequence": "select _ from _ where _ | select basiscode , maturity from ed_taxrate where typename = 'National Treasury Bond New Pledged Repurchase' and itemname = 'Transaction Fee'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.maturity",
      "ed_taxrate.basiscode",
      "ed_taxrate.valuefloor",
      "ed_taxrate.secumarket",
      "ed_taxrate.valueceiling",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.reportperiod",
      "ed_socialfinancing.*",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.id",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.undiscountedbacceptances"
    ]
  },
  {
    "question": "What is the amount of trust deposits in the financial institution's balance sheet over the years?",
    "sql": "select trustedandcreditdeposits from ed_chinafibalancesheetrmb;",
    "norm_sql": "select trustedandcreditdeposits from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "othersavings(other deposits)",
          "financialbonds(financial bonds)",
          "domesticloans((one) domestic loan)",
          "sharesandotherinvestments(equity and other investments)",
          "shorttermloans(short-term loan)",
          "mediumlongtermloans(medium-to-long term loans)"
        ],
        "column_names_original_en": [
          "trustedandcreditdeposits",
          "othersavings",
          "financialbonds",
          "domesticloans",
          "sharesandotherinvestments",
          "shorttermloans",
          "mediumlongtermloans"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "reportarea(statistical region category)",
          "id(record identifier)",
          "indexcode(index code)",
          "reportperiod(data statistical period)",
          "indexvalue(index value)",
          "indextitle(index name)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportarea",
          "id",
          "indexcode",
          "reportperiod",
          "indexvalue",
          "indextitle",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "bondissue(bond issuance)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "claimsoncentralbank(claims on central bank)",
          "depositsexcludedfromm2(deposits not included in broad money)"
        ],
        "column_names_original_en": [
          "bondissue",
          "liabtootherfinancialcorp",
          "claimsonothernfinstitute",
          "liabilitiestocentralbank",
          "liabilitiestonfinst",
          "claimsoncentralbank",
          "depositsexcludedfromm2"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the amount of trust deposits in the financial institution's balance sheet over the years? | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).enddate(deadline) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money)",
    "output_sequence": "select _ from _ | select trustedandcreditdeposits from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.enddate",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2"
    ]
  },
  {
    "question": "Please take a look, in the balance sheet of other depositary corporates, when our total assets amount to 40 million, how much do we have in claims on other financial institutions and claims on non-financial institutions, remembering to preserve the time.",
    "sql": "select enddate, claimsonotherfinstitute, claimsonothernfinstitute from ed_otherdepositorycorpbs where totalassets > 40000000;",
    "norm_sql": "select enddate , claimsonotherfinstitute , claimsonothernfinstitute from ed_otherdepositorycorpbs where totalassets > 40000000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "totalassets(total assets)",
          "depositsexcludedfromm2(deposits not included in broad money)",
          "bondissue(bond issuance)",
          "paidincapital(paid-up capital)"
        ],
        "column_names_original_en": [
          "enddate",
          "claimsonotherfinstitute",
          "claimsonothernfinstitute",
          "totalassets",
          "depositsexcludedfromm2",
          "bondissue",
          "paidincapital"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month)",
          "yoycpicloth(clothing year-on-year)",
          "yoycpitobacco(tobacco, alcohol, and supplies year-on-year)",
          "cumcpimedicare(cumulative average of healthcare and personal care products)",
          "yoycpifood(food year-on-year)",
          "cumcpitrafficcommunication(cumulative average of transportation and communication)",
          "cumcpi(cumulative average of resident consumer price index)"
        ],
        "column_names_original_en": [
          "qoqcpientertainmentservice",
          "yoycpicloth",
          "yoycpitobacco",
          "cumcpimedicare",
          "yoycpifood",
          "cumcpitrafficcommunication",
          "cumcpi"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "othersunits(other units)",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "county(county)",
          "stateownedunits(state-owned unit)",
          "selfemployed(individual unit)",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "othersunits",
          "enddate",
          "reportperiod",
          "county",
          "stateownedunits",
          "selfemployed",
          "province"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please take a look, in the balance sheet of other depositary corporates, when our total assets amount to 40 million, how much do we have in claims on other financial institutions and claims on non-financial institutions, remembering to preserve the time. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month) , ed_consumerpriceindex(consumer price index).yoycpicloth(clothing year-on-year) , ed_consumerpriceindex(consumer price index).yoycpitobacco(tobacco, alcohol, and supplies year-on-year) , ed_consumerpriceindex(consumer price index).cumcpimedicare(cumulative average of healthcare and personal care products) , ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) , ed_consumerpriceindex(consumer price index).cumcpitrafficcommunication(cumulative average of transportation and communication) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city)",
    "output_sequence": "select _ from _ where _ | select enddate , claimsonotherfinstitute , claimsonothernfinstitute from ed_otherdepositorycorpbs where totalassets > 40000000",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.qoqcpientertainmentservice",
      "ed_consumerpriceindex.yoycpicloth",
      "ed_consumerpriceindex.yoycpitobacco",
      "ed_consumerpriceindex.cumcpimedicare",
      "ed_consumerpriceindex.yoycpifood",
      "ed_consumerpriceindex.cumcpitrafficcommunication",
      "ed_consumerpriceindex.cumcpi",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.province"
    ]
  },
  {
    "question": "Please help me check the index value of \"General daily necessities\" in our \"Industrial Structure Classification Index\" for the \"same month last year.\"",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod ='same month last year' and indextype ='Industrial Structure Classification Index' and indexname ='General daily necessities';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'same month last year' and indextype = 'Industrial Structure Classification Index' and indexname = 'General daily necessities'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "drrtype(reserve requirement ratio category)",
          "id(record identifier)",
          "effectivedate(effective date)",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "drrtype",
          "id",
          "effectivedate",
          "ratiofloor"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indexname(index name)",
          "indexvalue(index)",
          "indextype(index category)",
          "reportperiod(data statistical period)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexname",
          "indexvalue",
          "indextype",
          "reportperiod",
          "id"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "indexname(index name)",
          "indexvalue(index value (points))",
          "enddate(deadline)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "id",
          "indexname",
          "indexvalue",
          "enddate",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me check the index value of \"General daily necessities\" in our \"Industrial Structure Classification Index\" for the \"same month last year.\" | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).id(record identifier) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period)",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'same month last year' and indextype = 'Industrial Structure Classification Index' and indexname = 'General daily necessities'",
    "tc_original": [
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratiofloor",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.id",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.reportperiod"
    ]
  },
  {
    "question": "Show Engineer Li the index value of \"Total Industrial Products\" in 2008.",
    "sql": "select indexvalue from ed_producerpiformp where indexname = 'Total Industrial Products' and strftime('%Y', enddate) = '2008';",
    "norm_sql": "select indexvalue from ed_producerpiformp where indexname = 'Total Industrial Products' and strftime ( '%Y' , enddate ) = '2008'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "id(record identifier)",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indexvalue(index)",
          "indextype(index category)"
        ],
        "column_names_original_en": [
          "id",
          "enddate",
          "reportperiod",
          "indexname",
          "indexvalue",
          "indextype"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "province(province and city)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "commodity(product name)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "exvalueofgoods(total export amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "gyoyofexvaluegoods",
          "province",
          "eximvalueofgoods",
          "commodity",
          "imvalueofgoods",
          "gyoyofeximvaluegoods",
          "exvalueofgoods"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "individualincometax(personal income tax (in million of rmb))",
          "reportarea(statistical area category)",
          "enterpriseincometax(enterprise income tax (in million of rmb))",
          "reportperiod(data statistical period)",
          "gnationaldefense(defense expenditure growth rate)",
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "agriculturetax(agricultural tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "individualincometax",
          "reportarea",
          "enterpriseincometax",
          "reportperiod",
          "gnationaldefense",
          "gfinancialexpenditure",
          "agriculturetax"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Show Engineer Li the index value of \"Total Industrial Products\" in 2008. | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indextype(index category) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = _ | select indexvalue from ed_producerpiformp where indexname = 'Total Industrial Products' and strftime ( '%Y' , enddate ) = '2008'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indextype",
      "ed_exportimport.*",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.province",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.commodity",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.exvalueofgoods",
      "ed_financialbalance.*",
      "ed_financialbalance.individualincometax",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.enterpriseincometax",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.agriculturetax"
    ]
  },
  {
    "question": "Calculate the records of imports with a value lower than 20 million in 2005, and list the export value and import value.",
    "sql": "select imvalueofgoods, exvalueofgoods from ed_exportimport where imvalueofgoods < 20 and strftime('%Y', enddate)='2005' ;",
    "norm_sql": "select imvalueofgoods , exvalueofgoods from ed_exportimport where imvalueofgoods < 20 and strftime ( '%Y' , enddate ) = '2005'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "enddate(deadline)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "sovereigntycountry(the subject country)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "enddate",
          "exvalueofgoods",
          "imvalueofgoods",
          "sovereigntycountry",
          "eximvalueofgoods",
          "gyoyofeximvaluegoods",
          "province"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "enddate(deadline)",
          "selfownedmoney(own funds (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))"
        ],
        "column_names_original_en": [
          "claimtononfinancialinst",
          "enddate",
          "selfownedmoney",
          "governmentsavings",
          "claimtosavingsbanks",
          "moneyissuance",
          "abroadliability"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enterpriseincome(enterprise income (in million of rmb))",
          "gsocialsecurity(social security expenditure growth rate)",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "province(province and city)",
          "supportunderdevelopedarea(policy subsidy expenditure (in million of rmb))",
          "gnationaldefense(defense expenditure growth rate)",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "enterpriseincome",
          "gsocialsecurity",
          "gfinancialrevenue",
          "province",
          "supportunderdevelopedarea",
          "gnationaldefense",
          "centralgovexpenditure"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Calculate the records of imports with a value lower than 20 million in 2005, and list the export value and import value. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).province(province and city) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gsocialsecurity(social security expenditure growth rate) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).supportunderdevelopedarea(policy subsidy expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = _ | select imvalueofgoods , exvalueofgoods from ed_exportimport where imvalueofgoods < 20 and strftime ( '%Y' , enddate ) = '2005'",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.enddate",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.province",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.abroadliability",
      "ed_financialbalance.*",
      "ed_financialbalance.enterpriseincome",
      "ed_financialbalance.gsocialsecurity",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.province",
      "ed_financialbalance.supportunderdevelopedarea",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.centralgovexpenditure"
    ]
  },
  {
    "question": "Can you help me retrieve the data when our total assets amount exceeds 10 million but the total liabilities are less than 5 million, including the time, total assets amount, and total liabilities amount?",
    "sql": "select enddate, totalassets, totalliability from ed_moneyauthoritybs where totalassets>10 and totalliability<5;",
    "norm_sql": "select enddate , totalassets , totalliability from ed_moneyauthoritybs where totalassets > 10 and totalliability < 5",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "totalassets(total assets (in million of rmb).)",
          "totalliability(total liabilities (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "totalassets",
          "totalliability",
          "claimtogovernment",
          "moneyreserves",
          "claimtootherfinnonfininst",
          "governmentsavings"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "reportperiod(data statistics interval)",
          "entrustedloans(trust loan (in 100 million of rmb))",
          "province(province and city)",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "id(record identifier)",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "corporatebonds(corporate bonds (in hundred million rmb))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "entrustedloans",
          "province",
          "definancingofnonfe",
          "id",
          "socialfinancing",
          "corporatebonds"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "enddate(deadline)",
          "reportarea(statistical category of the region)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "sovereigntycountry(the subject country)",
          "imvalueofgoods(total import amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "gyoyofimvaluegoods",
          "enddate",
          "reportarea",
          "gyoyofeximvaluegoods",
          "exvalueofgoods",
          "sovereigntycountry",
          "imvalueofgoods"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you help me retrieve the data when our total assets amount exceeds 10 million but the total liabilities are less than 5 million, including the time, total assets amount, and total liabilities amount? | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars))",
    "output_sequence": "select _ from _ where _ | select enddate , totalassets , totalliability from ed_moneyauthoritybs where totalassets > 10 and totalliability < 5",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_socialfinancing.*",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.province",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.id",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.corporatebonds",
      "ed_exportimport.*",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.enddate",
      "ed_exportimport.reportarea",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.imvalueofgoods"
    ]
  },
  {
    "question": "Please query the record of our country's Gross Domestic Product (GDP).",
    "sql": "select gdp from ed_grossdomesticproduct;",
    "norm_sql": "select gdp from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdp(gross domestic product (in million of rmb).)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "province(province and city)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "gdp",
          "thirdindustrygdp",
          "province",
          "gdpgrowthyoy",
          "gdppercapita",
          "secondindustrygdp",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "reportperiod(data statistics interval)",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "rmbloans(rmb loans (in 100 million rmb))",
          "province(province and city)",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "definancingofnonfe",
          "reportperiod",
          "foreigncurrencyloans",
          "rmbloans",
          "province",
          "corporatebonds",
          "id"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "claimstononfinancialinst(claims on the non-financial sector)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "quasimoney(quasi-currency)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "capitalreceived(paid-up capital)",
          "centralbankbonds(central bank bonds)",
          "money1(currency (narrow money m1))"
        ],
        "column_names_original_en": [
          "claimstononfinancialinst",
          "claimstospecificsavingorg",
          "quasimoney",
          "claimstootherinst",
          "capitalreceived",
          "centralbankbonds",
          "money1"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please query the record of our country's Gross Domestic Product (GDP). | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1))",
    "output_sequence": "select _ from _ | select gdp from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.enddate",
      "ed_socialfinancing.*",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.province",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.id",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.money1"
    ]
  },
  {
    "question": "Are you there, please help me check which tax rate items we have?",
    "sql": "select itemname from ed_taxrate;",
    "norm_sql": "select itemname from ed_taxrate",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "secumarket(securities market)",
          "valuefloor(minimum value/starting point (rmb))",
          "ratiofloor(minimum ratio (%))",
          "id(record identifier)",
          "effectivedate(effective date)",
          "typename(tax rate type)"
        ],
        "column_names_original_en": [
          "itemname",
          "secumarket",
          "valuefloor",
          "ratiofloor",
          "id",
          "effectivedate",
          "typename"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "savingdeposits(resident savings deposits)",
          "otherliabilities(other liabilities)",
          "bondissue(bond issuance)",
          "enddate(deadline)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)"
        ],
        "column_names_original_en": [
          "savingdeposits",
          "otherliabilities",
          "bondissue",
          "enddate",
          "liabtootherdepositcorp",
          "claimsonotherfinstitute",
          "liabilitiestonfinst"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "enddate(deadline)",
          "indexvalue(index value (points))"
        ],
        "column_names_original_en": [
          "id",
          "reportperiod",
          "indexname",
          "enddate",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Are you there, please help me check which tax rate items we have? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).typename(tax rate type) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points))",
    "output_sequence": "select _ from _ | select itemname from ed_taxrate",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.secumarket",
      "ed_taxrate.valuefloor",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.id",
      "ed_taxrate.effectivedate",
      "ed_taxrate.typename",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexvalue"
    ]
  },
  {
    "question": "I want to know the year-on-year data size of China's Gross Domestic Product (GDP).",
    "sql": "select gdpgrowthyoy from ed_grossdomesticproduct;",
    "norm_sql": "select gdpgrowthyoy from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "gdp(gross domestic product (in million of rmb).)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "id(record identifier)",
          "enddate(deadline)",
          "gdppercapita(per capita gross domestic product (cny/person))"
        ],
        "column_names_original_en": [
          "gdpgrowthyoy",
          "gdp",
          "secondindustrygdp",
          "thirdindustrygdp",
          "id",
          "enddate",
          "gdppercapita"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "reportarea(statistical area category)",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "gsocialsecurity(social security expenditure growth rate)",
          "province(province and city)",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "gnationaldefense(defense expenditure growth rate)"
        ],
        "column_names_original_en": [
          "reportarea",
          "gfinancialrevenue",
          "gsocialsecurity",
          "province",
          "expenditurecitymc",
          "operatingexpensescesh",
          "gnationaldefense"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "moneyandgold(currency gold (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "totalliability(total liabilities (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "moneyandgold",
          "moneyreserves",
          "bondissuance",
          "claimtogovernment",
          "totalliability",
          "governmentsavings"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the year-on-year data size of China's Gross Domestic Product (GDP). | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).gsocialsecurity(social security expenditure growth rate) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb))",
    "output_sequence": "select _ from _ | select gdpgrowthyoy from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_financialbalance.*",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.gsocialsecurity",
      "ed_financialbalance.province",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.gnationaldefense",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.governmentsavings"
    ]
  },
  {
    "question": "Please help me check the amount of our foreign currency deposits and currency balance.",
    "sql": "select fcdeposits, money1 from ed_chinamoneyandbanking;",
    "norm_sql": "select fcdeposits , money1 from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "money1(currency (narrow money m1))",
          "domesticloans(domestic credit)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "fcdeposits(foreign currency deposit.)",
          "bonds(bonds)",
          "id(record identifier)",
          "centralbankbonds(central bank bonds)"
        ],
        "column_names_original_en": [
          "money1",
          "domesticloans",
          "claimstospecificsavingorg",
          "fcdeposits",
          "bonds",
          "id",
          "centralbankbonds"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "accuquantity(accumulated quantity)",
          "avgprice(average price)",
          "accuavgprice(cumulative average price)",
          "eximvalue(amount)",
          "accueximvalue(accumulated amount)",
          "enddate(deadline)",
          "unitname(company name)"
        ],
        "column_names_original_en": [
          "accuquantity",
          "avgprice",
          "accuavgprice",
          "eximvalue",
          "accueximvalue",
          "enddate",
          "unitname"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "valueceiling(maximum value (rmb))",
          "basiscode(billing baseline)",
          "secumarket(securities market)",
          "ratiofloor(minimum ratio (%))",
          "itemname(tax rate items)",
          "id(record identifier)",
          "maturity(repurchase period)"
        ],
        "column_names_original_en": [
          "valueceiling",
          "basiscode",
          "secumarket",
          "ratiofloor",
          "itemname",
          "id",
          "maturity"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me check the amount of our foreign currency deposits and currency balance. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).avgprice(average price) , ed_productexportimport(product import and export volume).accuavgprice(cumulative average price) , ed_productexportimport(product import and export volume).eximvalue(amount) , ed_productexportimport(product import and export volume).accueximvalue(accumulated amount) , ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).unitname(company name) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).maturity(repurchase period)",
    "output_sequence": "select _ from _ | select fcdeposits , money1 from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_productexportimport.*",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.avgprice",
      "ed_productexportimport.accuavgprice",
      "ed_productexportimport.eximvalue",
      "ed_productexportimport.accueximvalue",
      "ed_productexportimport.enddate",
      "ed_productexportimport.unitname",
      "ed_taxrate.*",
      "ed_taxrate.valueceiling",
      "ed_taxrate.basiscode",
      "ed_taxrate.secumarket",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.itemname",
      "ed_taxrate.id",
      "ed_taxrate.maturity"
    ]
  },
  {
    "question": "Statistics on detailed records of government debt claims and non-financial institution debt claims in China in the past three years",
    "sql": "select claimstogov, claimstononfinancialinst from ed_chinamoneyandbanking where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select claimstogov , claimstononfinancialinst from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "fcdeposits(foreign currency deposit.)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "id(record identifier)",
          "quasimoney(quasi-currency)"
        ],
        "column_names_original_en": [
          "enddate",
          "claimstogov",
          "claimstononfinancialinst",
          "fcdeposits",
          "claimstospecificsavingorg",
          "id",
          "quasimoney"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "genterpriseincome(enterprise revenue growth rate)",
          "reportarea(statistical area category)",
          "gsocialsecurity(social security expenditure growth rate)",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "commercialtax(business tax revenue (in million of rmb))",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "nationaldefense(defense expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "genterpriseincome",
          "reportarea",
          "gsocialsecurity",
          "localgovrevenue",
          "commercialtax",
          "expenditurecitymc",
          "nationaldefense"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "indexvalue(index value)",
          "reportperiod(data statistical period)",
          "indextitle(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "indexvalue",
          "reportperiod",
          "indextitle"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Statistics on detailed records of government debt claims and non-financial institution debt claims in China in the past three years | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).genterpriseincome(enterprise revenue growth rate) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).gsocialsecurity(social security expenditure growth rate) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name)",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select claimstogov , claimstononfinancialinst from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_financialbalance.*",
      "ed_financialbalance.genterpriseincome",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.gsocialsecurity",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.nationaldefense",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle"
    ]
  },
  {
    "question": "Search for the trading exchanges where \"Corporate Bond Pledge Repurchase\" is available, and what are the minimum and maximum rates for \"Transaction Fees\" payment?",
    "sql": "select secumarket, ratiofloor, ratioceiling from ed_taxrate where typename='Corporate Bond Pledge Repurchase' and itemname='Transaction Fees';",
    "norm_sql": "select secumarket , ratiofloor , ratioceiling from ed_taxrate where typename = 'Corporate Bond Pledge Repurchase' and itemname = 'Transaction Fees'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "secumarket(securities market)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "valueceiling(maximum value (rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "secumarket",
          "ratiofloor",
          "ratioceiling",
          "valueceiling",
          "id"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "qoqcpihousing(residential month-to-month)",
          "qoqcpimedicare(healthcare and personal care products month-on-month)",
          "cumcpientertainmentservice(accumulated average of entertainment, education, cultural goods and services)",
          "cumcpihousing(accumulated average of residence)",
          "cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services)",
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)",
          "qoqcpi(resident consumer price index (month-on-month))"
        ],
        "column_names_original_en": [
          "qoqcpihousing",
          "qoqcpimedicare",
          "cumcpientertainmentservice",
          "cumcpihousing",
          "cumcpifamilyequipmentservice",
          "yoycpifamilyequipmentservice",
          "qoqcpi"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "province(province and city)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "id(record identifier)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "gdpgrowthyoy",
          "province",
          "thirdindustrygdp",
          "gdppercapita",
          "id",
          "secondindustrygdp",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Search for the trading exchanges where \"Corporate Bond Pledge Repurchase\" is available, and what are the minimum and maximum rates for \"Transaction Fees\" payment? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).id(record identifier) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).qoqcpihousing(residential month-to-month) , ed_consumerpriceindex(consumer price index).qoqcpimedicare(healthcare and personal care products month-on-month) , ed_consumerpriceindex(consumer price index).cumcpientertainmentservice(accumulated average of entertainment, education, cultural goods and services) , ed_consumerpriceindex(consumer price index).cumcpihousing(accumulated average of residence) , ed_consumerpriceindex(consumer price index).cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services) , ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpi(resident consumer price index (month-on-month)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline)",
    "output_sequence": "select _ from _ where _ | select secumarket , ratiofloor , ratioceiling from ed_taxrate where typename = 'Corporate Bond Pledge Repurchase' and itemname = 'Transaction Fees'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valueceiling",
      "ed_taxrate.id",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.qoqcpihousing",
      "ed_consumerpriceindex.qoqcpimedicare",
      "ed_consumerpriceindex.cumcpientertainmentservice",
      "ed_consumerpriceindex.cumcpihousing",
      "ed_consumerpriceindex.cumcpifamilyequipmentservice",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice",
      "ed_consumerpriceindex.qoqcpi",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.enddate"
    ]
  },
  {
    "question": "What were the amounts of securities and investments, and equity and other investments in the credit and debit of financial institutions in China last year?",
    "sql": "select equityandotherinvestment, sharesandotherinvestments from ed_chinafibalancesheetrmb where strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year'));",
    "norm_sql": "select equityandotherinvestment , sharesandotherinvestments from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "equityandotherinvestment(securities and investments)",
          "sharesandotherinvestments(equity and other investments)",
          "totalsavings(all deposit accounts)",
          "datatype(data type code)",
          "corporatesavings(unit deposit/corporate deposit)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)"
        ],
        "column_names_original_en": [
          "enddate",
          "equityandotherinvestment",
          "sharesandotherinvestments",
          "totalsavings",
          "datatype",
          "corporatesavings",
          "trustedandcreditdeposits"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "claimstogov(claims on the government (net))",
          "id(record identifier)",
          "capitalreceived(paid-up capital)",
          "quasimoney(quasi-currency)",
          "centralbankbonds(central bank bonds)"
        ],
        "column_names_original_en": [
          "enddate",
          "moneyandquasimoney",
          "claimstogov",
          "id",
          "capitalreceived",
          "quasimoney",
          "centralbankbonds"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "drrtype(reserve requirement ratio category)",
          "id(record identifier)",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "drrtype",
          "id",
          "ratiofloor",
          "effectivedate",
          "ratioceiling"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What were the amounts of securities and investments, and equity and other investments in the credit and debit of financial institutions in China last year? | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%))",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( _ ) ) | select equityandotherinvestment , sharesandotherinvestments from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.centralbankbonds",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratioceiling"
    ]
  },
  {
    "question": "What is the \"end-of-period cumulative\" value of the total retail sales of consumer goods nationwide in the past three years, and include the time field?",
    "sql": "select enddate, retailvalueofscgoods from ed_retailvalueofscgoods where reportarea='National' and reportperiod='End-of-Period Cumulative' and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select enddate , retailvalueofscgoods from ed_retailvalueofscgoods where reportarea = 'National' and reportperiod = 'End-of-Period Cumulative' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "reportarea(statistical category of region)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "belowcounty(county and below)",
          "jointventures(joint operating unit)",
          "stateownedunits(state-owned unit)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "reportarea",
          "retailvalueofscgoods",
          "belowcounty",
          "jointventures",
          "stateownedunits"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "money1(currency (narrow money m1))",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "fcdeposits(foreign currency deposit.)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "bonds(bonds)",
          "quasimoney(quasi-currency)"
        ],
        "column_names_original_en": [
          "money1",
          "claimstootherinst",
          "fcdeposits",
          "claimstononfinancialinst",
          "moneyandquasimoney",
          "bonds",
          "quasimoney"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "enddate(deadline)",
          "indexcode(index code)",
          "id(record identifier)",
          "comparetolastmonth(index month-on-month change (points))",
          "indexvalue(index value)",
          "reportarea(statistical region category)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexcode",
          "id",
          "comparetolastmonth",
          "indexvalue",
          "reportarea",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the \"end-of-period cumulative\" value of the total retail sales of consumer goods nationwide in the past three years, and include the time field? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , retailvalueofscgoods from ed_retailvalueofscgoods where reportarea = 'National' and reportperiod = 'End-of-Period Cumulative' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.quasimoney",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.reportperiod"
    ]
  },
  {
    "question": "Can you show the per capita GDP and the GDP of the tertiary industry for each year since 2000 in Hainan Special Economic Zone?",
    "sql": "select enddate, gdppercapita, thirdindustrygdp from ed_grossdomesticproduct where province ='Hainan' and strftime('%Y', enddate)>='2000';",
    "norm_sql": "select enddate , gdppercapita , thirdindustrygdp from ed_grossdomesticproduct where province = 'Hainan' and strftime ( '%Y' , enddate ) >= '2000'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) >= _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "enddate(deadline)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "province(province and city)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "gdp(gross domestic product (in million of rmb).)"
        ],
        "column_names_original_en": [
          "gdpgrowthyoy",
          "primaryindustrygdp",
          "enddate",
          "thirdindustrygdp",
          "province",
          "gdppercapita",
          "gdp"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "totalliability(total liabilities (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "totalassets(total assets (in million of rmb).)"
        ],
        "column_names_original_en": [
          "totalliability",
          "claimtogovernment",
          "moneyissuance",
          "nonfinancialorgdeposits",
          "forex",
          "claimtootherfinnonfininst",
          "totalassets"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "gtaxs(various tax revenues growth rate)",
          "province(province and city)",
          "centralgovrevenue(central fiscal revenue (in million of yuan))",
          "valueaddedtax(value added tax (in million of rmb))",
          "reportperiod(data statistical period)",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "individualincometax(personal income tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "gtaxs",
          "province",
          "centralgovrevenue",
          "valueaddedtax",
          "reportperiod",
          "localgovexpenditure",
          "individualincometax"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you show the per capita GDP and the GDP of the tertiary industry for each year since 2000 in Hainan Special Economic Zone? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).gtaxs(various tax revenues growth rate) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).centralgovrevenue(central fiscal revenue (in million of yuan)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) >= _ | select enddate , gdppercapita , thirdindustrygdp from ed_grossdomesticproduct where province = 'Hainan' and strftime ( '%Y' , enddate ) >= '2000'",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.gdp",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.totalassets",
      "ed_financialbalance.*",
      "ed_financialbalance.gtaxs",
      "ed_financialbalance.province",
      "ed_financialbalance.centralgovrevenue",
      "ed_financialbalance.valueaddedtax",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.individualincometax"
    ]
  },
  {
    "question": "What is the total retail value of consumer goods in China?",
    "sql": "select retailvalueofscgoods from ed_retailvalueofscgoods;",
    "norm_sql": "select retailvalueofscgoods from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "city(city)",
          "county(county)",
          "jointventures(joint operating unit)",
          "reportperiod(data statistical period)",
          "othersunits(other units)",
          "selfemployed(individual unit)"
        ],
        "column_names_original_en": [
          "retailvalueofscgoods",
          "city",
          "county",
          "jointventures",
          "reportperiod",
          "othersunits",
          "selfemployed"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "hivalueap(heavy industry (in million of rmb))",
          "reportperiod(data statistics interval)",
          "enddate(deadline)",
          "province(province)",
          "largecomap(large-scale enterprise (light industry))",
          "livalueap(light industry (in million of rmb))",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))"
        ],
        "column_names_original_en": [
          "hivalueap",
          "reportperiod",
          "enddate",
          "province",
          "largecomap",
          "livalueap",
          "stateownedcontrolledcomap"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "productname(product name)",
          "enddate(deadline)",
          "category(product category)",
          "eximvalue(amount)",
          "accueximvalue(accumulated amount)",
          "accuquantity(accumulated quantity)",
          "quantity(quantity)"
        ],
        "column_names_original_en": [
          "productname",
          "enddate",
          "category",
          "eximvalue",
          "accueximvalue",
          "accuquantity",
          "quantity"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the total retail value of consumer goods in China? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).productname(product name) , ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).category(product category) , ed_productexportimport(product import and export volume).eximvalue(amount) , ed_productexportimport(product import and export volume).accueximvalue(accumulated amount) , ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).quantity(quantity)",
    "output_sequence": "select _ from _ | select retailvalueofscgoods from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_industryproduction.*",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_productexportimport.*",
      "ed_productexportimport.productname",
      "ed_productexportimport.enddate",
      "ed_productexportimport.category",
      "ed_productexportimport.eximvalue",
      "ed_productexportimport.accueximvalue",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.quantity"
    ]
  },
  {
    "question": "I heard that our library of indices is very comprehensive, so please check the index value of \"Chemical Fiber Manufacturing Industry\" in the \"National Economic Industry Index\" for \"the same month last year\".",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod ='the same month last year' and indextype ='National Economic Industry Index' and indexname ='Chemical Fiber Manufacturing Industry';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'the same month last year' and indextype = 'National Economic Industry Index' and indexname = 'Chemical Fiber Manufacturing Industry'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "salestax(business tax (in million of rmb))",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "reportarea(statistical area category)",
          "gsocialsecurity(social security expenditure growth rate)",
          "commercialtax(business tax revenue (in million of rmb))",
          "supportunderdevelopedarea(policy subsidy expenditure (in million of rmb))",
          "enterpriseincometax(enterprise income tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "salestax",
          "expenditurecitymc",
          "reportarea",
          "gsocialsecurity",
          "commercialtax",
          "supportunderdevelopedarea",
          "enterpriseincometax"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "bondissuance(bond issuance (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "selfownedmoney(own funds (in million of rmb))"
        ],
        "column_names_original_en": [
          "bondissuance",
          "moneyandgold",
          "abroadliability",
          "moneyreserves",
          "claimtononfinancialinst",
          "claimtootherfinnonfininst",
          "selfownedmoney"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I heard that our library of indices is very comprehensive, so please check the index value of \"Chemical Fiber Manufacturing Industry\" in the \"National Economic Industry Index\" for \"the same month last year\". | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).gsocialsecurity(social security expenditure growth rate) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).supportunderdevelopedarea(policy subsidy expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'the same month last year' and indextype = 'National Economic Industry Index' and indexname = 'Chemical Fiber Manufacturing Industry'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_financialbalance.*",
      "ed_financialbalance.salestax",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.gsocialsecurity",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.supportunderdevelopedarea",
      "ed_financialbalance.enterpriseincometax",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.selfownedmoney"
    ]
  },
  {
    "question": "What are the provinces and cities in China where the growth rate of fiscal revenue has exceeded 5% since 2000?",
    "sql": "select province from ed_financialbalance where gfinancialrevenue > 5 and strftime('%Y', enddate) > '2000';",
    "norm_sql": "select province from ed_financialbalance where gfinancialrevenue > 5 and strftime ( '%Y' , enddate ) > '2000'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "province(province and city)",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "gsupportunderdevelopedarea(policy subsidy expenditure growth rate)",
          "socialsecurity(social security expenditure (in million of rmb))",
          "salestax(business tax (in million of rmb))",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "gfinancialrevenue",
          "gsupportunderdevelopedarea",
          "socialsecurity",
          "salestax",
          "operatingexpensescesh"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "quasimoney(quasi-currency)",
          "bonds(bonds)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "centralbankbonds(central bank bonds)",
          "money1(currency (narrow money m1))",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)"
        ],
        "column_names_original_en": [
          "quasimoney",
          "bonds",
          "moneyandquasimoney",
          "centralbankbonds",
          "money1",
          "claimstospecificsavingorg",
          "claimstootherinst"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "province(province)",
          "id(record identifier)",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "livalueap(light industry (in million of rmb))",
          "reportarea(statistical area category)",
          "largecomap(large-scale enterprise (light industry))",
          "hivalueap(heavy industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "id",
          "stateownedcontrolledcomap",
          "livalueap",
          "reportarea",
          "largecomap",
          "hivalueap"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the provinces and cities in China where the growth rate of fiscal revenue has exceeded 5% since 2000? | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).gsupportunderdevelopedarea(policy subsidy expenditure growth rate) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > _ | select province from ed_financialbalance where gfinancialrevenue > 5 and strftime ( '%Y' , enddate ) > '2000'",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.province",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.gsupportunderdevelopedarea",
      "ed_financialbalance.socialsecurity",
      "ed_financialbalance.salestax",
      "ed_financialbalance.operatingexpensescesh",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_industryproduction.*",
      "ed_industryproduction.province",
      "ed_industryproduction.id",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.hivalueap"
    ]
  },
  {
    "question": "Please list the amount of reserve deposits and cash in vault in the balance sheet of other depository corporations, as well as the total value of reserve assets.",
    "sql": "select depositswithcentralbank, cashinvault, reserveassets from ed_otherdepositorycorpbs;",
    "norm_sql": "select depositswithcentralbank , cashinvault , reserveassets from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "reserveassets(reserve assets)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "bondissue(bond issuance)",
          "otherliabilities(other liabilities)"
        ],
        "column_names_original_en": [
          "reserveassets",
          "depositswithcentralbank",
          "cashinvault",
          "liabtootherfinancialcorp",
          "liabilitiestonfinst",
          "bondissue",
          "otherliabilities"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "reportperiod(statistical period)",
          "enddate(deadline)",
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))",
          "subjectname(indicator name)",
          "subjectsum(amount (in million of rmb))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "enddate",
          "id",
          "yoy",
          "subjectname",
          "subjectsum"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "bonds(bonds)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "claimstogov(claims on the government (net))",
          "fcdeposits(foreign currency deposit.)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "capitalreceived(paid-up capital)"
        ],
        "column_names_original_en": [
          "bonds",
          "claimstootherinst",
          "moneyandquasimoney",
          "claimstogov",
          "fcdeposits",
          "claimstospecificsavingorg",
          "capitalreceived"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the amount of reserve deposits and cash in vault in the balance sheet of other depository corporations, as well as the total value of reserve assets. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital)",
    "output_sequence": "select _ from _ | select depositswithcentralbank , cashinvault , reserveassets from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.subjectsum",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.capitalreceived"
    ]
  },
  {
    "question": "Please query the highest and lowest payment ratios of \"Securities Trading Stamp Tax\" for \"B shares\" in \"Shenzhen Stock Exchange.\"",
    "sql": "select ratioceiling, ratiofloor from ed_taxrate where typename ='B shares' and itemname = 'Securities Trading Stamp Tax' and secumarket ='Shenzhen Stock Exchange';",
    "norm_sql": "select ratioceiling , ratiofloor from ed_taxrate where typename = 'B shares' and itemname = 'Securities Trading Stamp Tax' and secumarket = 'Shenzhen Stock Exchange'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "secumarket(securities market)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)",
          "maturity(repurchase period)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "secumarket",
          "ratiofloor",
          "ratioceiling",
          "id",
          "maturity"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "totalassets(total assets (in million of rmb).)",
          "forex(foreign exchange (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))",
          "selfownedmoney(own funds (in million of rmb))",
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))"
        ],
        "column_names_original_en": [
          "totalassets",
          "forex",
          "otherliability",
          "selfownedmoney",
          "claimtosavingsinst",
          "governmentsavings",
          "bondissuance"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "foreignassets(foreign net assets)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "timedeposits(fixed deposit for enterprises)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "id(record identifier)",
          "totalassets(total assets)"
        ],
        "column_names_original_en": [
          "foreignassets",
          "liabtootherfinancialcorp",
          "claimsonotherfinstitute",
          "timedeposits",
          "depositsincludedinm2",
          "id",
          "totalassets"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please query the highest and lowest payment ratios of \"Securities Trading Stamp Tax\" for \"B shares\" in \"Shenzhen Stock Exchange.\" | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).maturity(repurchase period) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets)",
    "output_sequence": "select _ from _ where _ | select ratioceiling , ratiofloor from ed_taxrate where typename = 'B shares' and itemname = 'Securities Trading Stamp Tax' and secumarket = 'Shenzhen Stock Exchange'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.id",
      "ed_taxrate.maturity",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.bondissuance",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.totalassets"
    ]
  },
  {
    "question": "Please help me query how many types of indexes are there in our Industrial Product Producer Price Index table.",
    "sql": "select count(*) from ed_producerpiformp;",
    "norm_sql": "select count ( * ) from ed_producerpiformp",
    "sql_skeleton": "select count ( _ ) from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "enddate(deadline)",
          "id(record identifier)",
          "indexname(index name)",
          "indexvalue(index)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "enddate",
          "id",
          "indexname",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "gnationaldefense(defense expenditure growth rate)",
          "genterpriseincome(enterprise revenue growth rate)",
          "id(record identifier)",
          "gtaxs(various tax revenues growth rate)",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "centralgovrevenue(central fiscal revenue (in million of yuan))"
        ],
        "column_names_original_en": [
          "gnationaldefense",
          "genterpriseincome",
          "id",
          "gtaxs",
          "operatingexpensescesh",
          "gfinancialexpenditure",
          "centralgovrevenue"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indextitle(index name)",
          "indexvalue(index value)",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indextitle",
          "indexvalue",
          "reportperiod",
          "id",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me query how many types of indexes are there in our Industrial Product Producer Price Index table. | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).genterpriseincome(enterprise revenue growth rate) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).gtaxs(various tax revenues growth rate) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).centralgovrevenue(central fiscal revenue (in million of yuan)) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline)",
    "output_sequence": "select count ( _ ) from _ | select count ( * ) from ed_producerpiformp",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_financialbalance.*",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.genterpriseincome",
      "ed_financialbalance.id",
      "ed_financialbalance.gtaxs",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.centralgovrevenue",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.enddate"
    ]
  },
  {
    "question": "Hi, please list the amount of liabilities to non-financial institutions and households in our other deposit-taking company's balance sheet.",
    "sql": "select liabilitiestonfinst from ed_otherdepositorycorpbs;",
    "norm_sql": "select liabilitiestonfinst from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "abroadliability(abroad liabilities (in million of rmb))",
          "moneyreserves(reserve currency (in million of rmb))",
          "enddate(deadline)",
          "reservedeposits(reserve deposit (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "forex(foreign exchange (in million of rmb))"
        ],
        "column_names_original_en": [
          "abroadliability",
          "moneyreserves",
          "enddate",
          "reservedeposits",
          "bondissuance",
          "moneyissuance",
          "forex"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "reserveassets(reserve assets)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "claimsoncentralbank(claims on central bank)",
          "savingdeposits(resident savings deposits)",
          "totalliabilities(total liabilities)"
        ],
        "column_names_original_en": [
          "liabilitiestonfinst",
          "reserveassets",
          "claimsonothernfinstitute",
          "liabtootherdepositcorp",
          "claimsoncentralbank",
          "savingdeposits",
          "totalliabilities"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "comparetolastmonth(index month-on-month change (points))",
          "reportperiod(data statistical period)",
          "indexvalue(index value)",
          "enddate(deadline)",
          "id(record identifier)",
          "indexcode(index code)",
          "indextitle(index name)"
        ],
        "column_names_original_en": [
          "comparetolastmonth",
          "reportperiod",
          "indexvalue",
          "enddate",
          "id",
          "indexcode",
          "indextitle"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hi, please list the amount of liabilities to non-financial institutions and households in our other deposit-taking company's balance sheet. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyreserves(reserve currency (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).indextitle(index name)",
    "output_sequence": "select _ from _ | select liabilitiestonfinst from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.moneyreserves",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.forex",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.totalliabilities",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.indextitle"
    ]
  },
  {
    "question": "Can I see the data of our other liabilities amount in the balance sheets of other depositary companies?",
    "sql": "select otherliabilities from ed_otherdepositorycorpbs;",
    "norm_sql": "select otherliabilities from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "claimsonotherresidentsec(claims on other resident sectors)",
          "otherliabilities(other liabilities)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "totalliabilities(total liabilities)",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "depositsexcludedfromm2(deposits not included in broad money)"
        ],
        "column_names_original_en": [
          "enddate",
          "claimsonotherresidentsec",
          "otherliabilities",
          "depositsincludedinm2",
          "totalliabilities",
          "liabilitiestonfinst",
          "depositsexcludedfromm2"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexvalue(index)",
          "id(record identifier)",
          "indexname(index name)",
          "indextype(index category)",
          "enddate(deadline)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "id",
          "indexname",
          "indextype",
          "enddate",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "comparetolastmonth(index month-on-month change (points))",
          "enddate(deadline)",
          "id(record identifier)",
          "indextitle(index name)",
          "indexvalue(index value)",
          "reportarea(statistical region category)",
          "indexcode(index code)"
        ],
        "column_names_original_en": [
          "comparetolastmonth",
          "enddate",
          "id",
          "indextitle",
          "indexvalue",
          "reportarea",
          "indexcode"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can I see the data of our other liabilities amount in the balance sheets of other depositary companies? | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).indexcode(index code)",
    "output_sequence": "select _ from _ | select otherliabilities from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.indexcode"
    ]
  },
  {
    "question": "Xiaowang, help me check and show the data of loan amounts recorded by \"month\" that have exceeded 100,000 in the past ten years, and only show the time and amount when the year-on-year change is less than 0.",
    "sql": "select enddate, subjectsum from ed_newincreasingloan where reportperiod = 'month' and subjectsum > 100000 and yoy < 0 and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-10 year'));",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'month' and subjectsum > 100000 and yoy < 0 and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "subjectsum",
          "yoy",
          "id",
          "subjectname"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "financialbonds(financial bonds)",
          "agriculturaldeposits(agricultural deposit)",
          "orgdeposits(government and institutional deposits)",
          "assetsatifo(asset in international financial institutions)",
          "moneyincirculation(currency in circulation)",
          "corporatesavings(unit deposit/corporate deposit)",
          "mediumlongtermloans(medium-to-long term loans)"
        ],
        "column_names_original_en": [
          "financialbonds",
          "agriculturaldeposits",
          "orgdeposits",
          "assetsatifo",
          "moneyincirculation",
          "corporatesavings",
          "mediumlongtermloans"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "reportarea(statistical area category)",
          "socialsecurity(social security expenditure (in million of rmb))",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "gnationaldefense(defense expenditure growth rate)",
          "commercialtax(business tax revenue (in million of rmb))",
          "province(province and city)",
          "enterpriseincome(enterprise income (in million of rmb))"
        ],
        "column_names_original_en": [
          "reportarea",
          "socialsecurity",
          "gfinancialrevenue",
          "gnationaldefense",
          "commercialtax",
          "province",
          "enterpriseincome"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Xiaowang, help me check and show the data of loan amounts recorded by \"month\" that have exceeded 100,000 in the past ten years, and only show the time and amount when the year-on-year change is less than 0. | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).orgdeposits(government and institutional deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'month' and subjectsum > 100000 and yoy < 0 and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectname",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.orgdeposits",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_financialbalance.*",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.socialsecurity",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.province",
      "ed_financialbalance.enterpriseincome"
    ]
  },
  {
    "question": "Before 2000, Liaoning province used to be a major heavy industrial province. Please check the per capita GDP and the total production value of the primary industry there before 2000.",
    "sql": "select gdppercapita, primaryindustrygdp from ed_grossdomesticproduct where province ='Liaoning' and strftime('%Y', enddate)<'2000';",
    "norm_sql": "select gdppercapita , primaryindustrygdp from ed_grossdomesticproduct where province = 'Liaoning' and strftime ( '%Y' , enddate ) < '2000'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) < _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "enddate(deadline)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "gdp(gross domestic product (in million of rmb).)",
          "id(record identifier)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "enddate",
          "primaryindustrygdp",
          "gdppercapita",
          "gdp",
          "id",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "totalsavings(all deposit accounts)",
          "financialbonds(financial bonds)",
          "moneyincirculation(currency in circulation)",
          "savingsdeposits(savings deposits)",
          "datatype(data type code)",
          "corporatesavings(unit deposit/corporate deposit)",
          "financedeposits(financial deposit)"
        ],
        "column_names_original_en": [
          "totalsavings",
          "financialbonds",
          "moneyincirculation",
          "savingsdeposits",
          "datatype",
          "corporatesavings",
          "financedeposits"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "belowcounty(county and below)",
          "reportarea(statistical category of region)",
          "city(city)",
          "county(county)",
          "othersunits(other units)",
          "collectiveunits(collective unit)",
          "foodbeverage(catering industry)"
        ],
        "column_names_original_en": [
          "belowcounty",
          "reportarea",
          "city",
          "county",
          "othersunits",
          "collectiveunits",
          "foodbeverage"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Before 2000, Liaoning province used to be a major heavy industrial province. Please check the per capita GDP and the total production value of the primary industry there before 2000. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) < _ | select gdppercapita , primaryindustrygdp from ed_grossdomesticproduct where province = 'Liaoning' and strftime ( '%Y' , enddate ) < '2000'",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.foodbeverage"
    ]
  },
  {
    "question": "What is the index value of the \"Nonferrous Metal Ore Mining and Dressing Industry\" in the \"National Economic Sector Index\" for the \"Same Period Last Year\"?",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod ='Same Period Last Year' and indextype ='National Economic Sector Index' and indexname ='Nonferrous Metal Ore Mining and Dressing Industry';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'Same Period Last Year' and indextype = 'National Economic Sector Index' and indexname = 'Nonferrous Metal Ore Mining and Dressing Industry'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)",
          "indextype(index category)",
          "enddate(deadline)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indexname",
          "indexvalue",
          "id",
          "indextype",
          "enddate",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "currencycode(currency unit)",
          "id(record identifier)",
          "accuquantity(accumulated quantity)",
          "eximvalue(amount)",
          "statecode(primary country)",
          "accueximvalue(accumulated amount)",
          "category(product category)"
        ],
        "column_names_original_en": [
          "currencycode",
          "id",
          "accuquantity",
          "eximvalue",
          "statecode",
          "accueximvalue",
          "category"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "entrustedloans(trust loan (in 100 million of rmb))",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "id(record identifier)",
          "rmbloans(rmb loans (in 100 million rmb))",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "province(province and city)",
          "reportperiod(data statistics interval)"
        ],
        "column_names_original_en": [
          "entrustedloans",
          "corporatebonds",
          "id",
          "rmbloans",
          "foreigncurrencyloans",
          "province",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the index value of the \"Nonferrous Metal Ore Mining and Dressing Industry\" in the \"National Economic Sector Index\" for the \"Same Period Last Year\"? | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).currencycode(currency unit) , ed_productexportimport(product import and export volume).id(record identifier) , ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).eximvalue(amount) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).accueximvalue(accumulated amount) , ed_productexportimport(product import and export volume).category(product category) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval)",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'Same Period Last Year' and indextype = 'National Economic Sector Index' and indexname = 'Nonferrous Metal Ore Mining and Dressing Industry'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "ed_productexportimport.*",
      "ed_productexportimport.currencycode",
      "ed_productexportimport.id",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.eximvalue",
      "ed_productexportimport.statecode",
      "ed_productexportimport.accueximvalue",
      "ed_productexportimport.category",
      "ed_socialfinancing.*",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.id",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.province",
      "ed_socialfinancing.reportperiod"
    ]
  },
  {
    "question": "List the total amount of import and export of goods in China over the years.",
    "sql": "select eximvalueofgoods from ed_exportimport ;",
    "norm_sql": "select eximvalueofgoods from ed_exportimport",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "sovereigntycountry(the subject country)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "reportperiod(data statistical period)",
          "commodity(product name)",
          "reportarea(statistical category of the region)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "exvalueofgoods",
          "sovereigntycountry",
          "eximvalueofgoods",
          "reportperiod",
          "commodity",
          "reportarea",
          "gyoyofeximvaluegoods"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "effectivedate(effective date)",
          "ratioceiling(maximum ratio (%))",
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "basiscode(billing baseline)",
          "secumarket(securities market)",
          "valueceiling(maximum value (rmb))"
        ],
        "column_names_original_en": [
          "effectivedate",
          "ratioceiling",
          "itemname",
          "typename",
          "basiscode",
          "secumarket",
          "valueceiling"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)",
          "subjectname(indicator name)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "subjectsum",
          "yoy",
          "id",
          "subjectname",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "List the total amount of import and export of goods in China over the years. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).enddate(deadline)",
    "output_sequence": "select _ from _ | select eximvalueofgoods from ed_exportimport",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.reportperiod",
      "ed_exportimport.commodity",
      "ed_exportimport.reportarea",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_taxrate.*",
      "ed_taxrate.effectivedate",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.basiscode",
      "ed_taxrate.secumarket",
      "ed_taxrate.valueceiling",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.enddate"
    ]
  },
  {
    "question": "Please display the year-end balance of short-term loans and medium-to-long-term loans in the record of credit receipts and payments by financial institutions in China in 2005.",
    "sql": "select shorttermloans, mediumlongtermloans from ed_chinafibalancesheetrmb where strftime('%Y', enddate)='2005';",
    "norm_sql": "select shorttermloans , mediumlongtermloans from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) = '2005'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "shorttermloans(short-term loan)",
          "mediumlongtermloans(medium-to-long term loans)",
          "currencyname(currency unit code)",
          "datatype(data type code)",
          "moneyincirculation(currency in circulation)",
          "totalloans(various loans)"
        ],
        "column_names_original_en": [
          "enddate",
          "shorttermloans",
          "mediumlongtermloans",
          "currencyname",
          "datatype",
          "moneyincirculation",
          "totalloans"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "valueceiling(maximum value (rmb))",
          "typename(tax rate type)",
          "valuefloor(minimum value/starting point (rmb))",
          "maturity(repurchase period)",
          "ratioceiling(maximum ratio (%))",
          "basiscode(billing baseline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "valueceiling",
          "typename",
          "valuefloor",
          "maturity",
          "ratioceiling",
          "basiscode",
          "id"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "quasimoney(quasi-currency)",
          "id(record identifier)",
          "claimstogov(claims on the government (net))",
          "enddate(deadline)",
          "bonds(bonds)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "capitalreceived(paid-up capital)"
        ],
        "column_names_original_en": [
          "quasimoney",
          "id",
          "claimstogov",
          "enddate",
          "bonds",
          "claimstononfinancialinst",
          "capitalreceived"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please display the year-end balance of short-term loans and medium-to-long-term loans in the record of credit receipts and payments by financial institutions in China in 2005. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).id(record identifier) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital)",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select shorttermloans , mediumlongtermloans from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) = '2005'",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_taxrate.*",
      "ed_taxrate.valueceiling",
      "ed_taxrate.typename",
      "ed_taxrate.valuefloor",
      "ed_taxrate.maturity",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.basiscode",
      "ed_taxrate.id",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.capitalreceived"
    ]
  },
  {
    "question": "What is the total amount of Gross Domestic Product of the secondary industry in China over the years?",
    "sql": "select secondindustrygdp from ed_grossdomesticproduct;",
    "norm_sql": "select secondindustrygdp from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "secondindustrygdp(the second industry (in million of rmb))",
          "id(record identifier)",
          "province(province and city)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "secondindustrygdp",
          "id",
          "province",
          "gdpgrowthyoy",
          "thirdindustrygdp",
          "primaryindustrygdp",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "secumarket(securities market)",
          "ratiofloor(minimum ratio (%))",
          "valuefloor(minimum value/starting point (rmb))",
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)",
          "valueceiling(maximum value (rmb))"
        ],
        "column_names_original_en": [
          "typename",
          "secumarket",
          "ratiofloor",
          "valuefloor",
          "ratioceiling",
          "id",
          "valueceiling"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)",
          "enddate(deadline)",
          "subjectsum(amount (in million of rmb))",
          "reportperiod(statistical period)",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "yoy",
          "id",
          "enddate",
          "subjectsum",
          "reportperiod",
          "subjectname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the total amount of Gross Domestic Product of the secondary industry in China over the years? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name)",
    "output_sequence": "select _ from _ | select secondindustrygdp from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.enddate",
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.valuefloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.id",
      "ed_taxrate.valueceiling",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectname"
    ]
  },
  {
    "question": "Help Engineer Li to query the records of social consumer goods retail data for individual units.",
    "sql": "select selfemployed from ed_retailvalueofscgoods;",
    "norm_sql": "select selfemployed from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "selfemployed(individual unit)",
          "othersindustry(other industries)",
          "othersunits(other units)",
          "stateownedunits(state-owned unit)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "belowcounty(county and below)",
          "collectiveunits(collective unit)"
        ],
        "column_names_original_en": [
          "selfemployed",
          "othersindustry",
          "othersunits",
          "stateownedunits",
          "wholesaleretailtrade",
          "belowcounty",
          "collectiveunits"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "sharesandotherinvestments(equity and other investments)",
          "othersavings(other deposits)",
          "financedeposits(financial deposit)",
          "overseasloans((two) overseas loans)",
          "financialbonds(financial bonds)",
          "currencyname(currency unit code)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "sharesandotherinvestments",
          "othersavings",
          "financedeposits",
          "overseasloans",
          "financialbonds",
          "currencyname",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "genterpriseincome(enterprise revenue growth rate)",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))",
          "reportarea(statistical area category)",
          "enddate(deadline)",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "genterpriseincome",
          "centralgovexpenditure",
          "reportarea",
          "enddate",
          "localgovrevenue",
          "localgovexpenditure",
          "valueaddedtax"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help Engineer Li to query the records of social consumer goods retail data for individual units. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).genterpriseincome(enterprise revenue growth rate) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb))",
    "output_sequence": "select _ from _ | select selfemployed from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_financialbalance.*",
      "ed_financialbalance.genterpriseincome",
      "ed_financialbalance.centralgovexpenditure",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.enddate",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.valueaddedtax"
    ]
  },
  {
    "question": "Search for the records of the amount of savings deposits and agricultural deposits in the balance sheet of financial institutions in China for the year 2010.",
    "sql": "select savingsdeposits, agriculturaldeposits from ed_chinafibalancesheetrmb where strftime('%Y', enddate)='2010';",
    "norm_sql": "select savingsdeposits , agriculturaldeposits from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) = '2010'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "savingsdeposits(savings deposits)",
          "agriculturaldeposits(agricultural deposit)",
          "financialbonds(financial bonds)",
          "overseasloans((two) overseas loans)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "sharesandotherinvestments(equity and other investments)"
        ],
        "column_names_original_en": [
          "enddate",
          "savingsdeposits",
          "agriculturaldeposits",
          "financialbonds",
          "overseasloans",
          "trustedandcreditdeposits",
          "sharesandotherinvestments"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "drrtype(reserve requirement ratio category)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "effectivedate(effective date)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "drrtype",
          "ratiofloor",
          "ratioceiling",
          "effectivedate",
          "id"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "individualincometax(personal income tax (in million of rmb))",
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "centralgovrevenue(central fiscal revenue (in million of yuan))",
          "enterpriseincome(enterprise income (in million of rmb))",
          "gnationaldefense(defense expenditure growth rate)",
          "socialsecurity(social security expenditure (in million of rmb))",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "individualincometax",
          "gfinancialexpenditure",
          "centralgovrevenue",
          "enterpriseincome",
          "gnationaldefense",
          "socialsecurity",
          "localgovexpenditure"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Search for the records of the amount of savings deposits and agricultural deposits in the balance sheet of financial institutions in China for the year 2010. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).centralgovrevenue(central fiscal revenue (in million of yuan)) , ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select savingsdeposits , agriculturaldeposits from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) = '2010'",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.id",
      "ed_financialbalance.*",
      "ed_financialbalance.individualincometax",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.centralgovrevenue",
      "ed_financialbalance.enterpriseincome",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.socialsecurity",
      "ed_financialbalance.localgovexpenditure"
    ]
  },
  {
    "question": "Can you show the index value changes for the \"furniture manufacturing industry\" in the past two years? Please display the value for \"the same month of the previous year.\"",
    "sql": "select indexvalue from ed_producerpiformp where indexname ='furniture manufacturing industry' and reportperiod ='the same month of the previous year' and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select indexvalue from ed_producerpiformp where indexname = 'furniture manufacturing industry' and reportperiod = 'the same month of the previous year' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indextype(index category)",
          "indexvalue(index)",
          "enddate(deadline)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "indextype",
          "indexvalue",
          "enddate",
          "id",
          "reportperiod",
          "indexname"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "basiscode(billing baseline)",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)",
          "ratioceiling(maximum ratio (%))",
          "valueceiling(maximum value (rmb))",
          "secumarket(securities market)"
        ],
        "column_names_original_en": [
          "typename",
          "basiscode",
          "ratiofloor",
          "effectivedate",
          "ratioceiling",
          "valueceiling",
          "secumarket"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year)",
          "yoycpicloth(clothing year-on-year)",
          "yoycpihousing(residential year-on-year)",
          "cumcpimedicare(cumulative average of healthcare and personal care products)",
          "qoqcpitobacco(tobacco, alcohol, and supplies month-on-month)",
          "yoycpifood(food year-on-year)",
          "qoqcpifood(food price month-on-month)"
        ],
        "column_names_original_en": [
          "yoycpientertainmentservice",
          "yoycpicloth",
          "yoycpihousing",
          "cumcpimedicare",
          "qoqcpitobacco",
          "yoycpifood",
          "qoqcpifood"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you show the index value changes for the \"furniture manufacturing industry\" in the past two years? Please display the value for \"the same month of the previous year.\" | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexname(index name) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).secumarket(securities market) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year) , ed_consumerpriceindex(consumer price index).yoycpicloth(clothing year-on-year) , ed_consumerpriceindex(consumer price index).yoycpihousing(residential year-on-year) , ed_consumerpriceindex(consumer price index).cumcpimedicare(cumulative average of healthcare and personal care products) , ed_consumerpriceindex(consumer price index).qoqcpitobacco(tobacco, alcohol, and supplies month-on-month) , ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpifood(food price month-on-month)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select indexvalue from ed_producerpiformp where indexname = 'furniture manufacturing industry' and reportperiod = 'the same month of the previous year' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexname",
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.basiscode",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.effectivedate",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valueceiling",
      "ed_taxrate.secumarket",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpientertainmentservice",
      "ed_consumerpriceindex.yoycpicloth",
      "ed_consumerpriceindex.yoycpihousing",
      "ed_consumerpriceindex.cumcpimedicare",
      "ed_consumerpriceindex.qoqcpitobacco",
      "ed_consumerpriceindex.yoycpifood",
      "ed_consumerpriceindex.qoqcpifood"
    ]
  },
  {
    "question": "Help me check, what is the highest ratio of \"reserve deposit ratio\" in our \"deposit-type financial institutions (large)\"?",
    "sql": "select ratioceiling from ed_taxrate where typename = 'deposit-type financial institutions (large)' and itemname = 'reserve deposit ratio';",
    "norm_sql": "select ratioceiling from ed_taxrate where typename = 'deposit-type financial institutions (large)' and itemname = 'reserve deposit ratio'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "ratioceiling(maximum ratio (%))",
          "valueceiling(maximum value (rmb))",
          "basiscode(billing baseline)",
          "ratiofloor(minimum ratio (%))",
          "valuefloor(minimum value/starting point (rmb))"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "ratioceiling",
          "valueceiling",
          "basiscode",
          "ratiofloor",
          "valuefloor"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "mediumcomap(medium-sized enterprise (light industry))",
          "reportperiod(data statistics interval)",
          "province(province)",
          "collectivecomap(collective enterprise (light industry))",
          "largecomap(large-scale enterprise (light industry))",
          "livalueap(light industry (in million of rmb))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "mediumcomap",
          "reportperiod",
          "province",
          "collectivecomap",
          "largecomap",
          "livalueap",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "datatype(data type code)",
          "mediumlongtermloans(medium-to-long term loans)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "orgdeposits(government and institutional deposits)",
          "loantogov(financial borrowing)",
          "totalsavings(all deposit accounts)",
          "othersavings(other deposits)"
        ],
        "column_names_original_en": [
          "datatype",
          "mediumlongtermloans",
          "trustedandcreditdeposits",
          "orgdeposits",
          "loantogov",
          "totalsavings",
          "othersavings"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Help me check, what is the highest ratio of \"reserve deposit ratio\" in our \"deposit-type financial institutions (large)\"? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).enddate(deadline) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).orgdeposits(government and institutional deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits)",
    "output_sequence": "select _ from _ where _ | select ratioceiling from ed_taxrate where typename = 'deposit-type financial institutions (large)' and itemname = 'reserve deposit ratio'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valueceiling",
      "ed_taxrate.basiscode",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.valuefloor",
      "ed_industryproduction.*",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.province",
      "ed_industryproduction.collectivecomap",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.enddate",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.orgdeposits",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.othersavings"
    ]
  },
  {
    "question": "Xiaoli, please check the billing basis for \"B shares\" and the highest and lowest tax rates for \"securities transaction stamp duty\" for us.",
    "sql": "select basiscode, ratiofloor, ratioceiling from ed_taxrate where typename ='B shares' and itemname = 'securities transaction stamp duty';",
    "norm_sql": "select basiscode , ratiofloor , ratioceiling from ed_taxrate where typename = 'B shares' and itemname = 'securities transaction stamp duty'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "basiscode(billing baseline)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "effectivedate(effective date)",
          "valueceiling(maximum value (rmb))"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "basiscode",
          "ratiofloor",
          "ratioceiling",
          "effectivedate",
          "valueceiling"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "subjectname(indicator name)",
          "yoy(year-on-year increase or decrease (%))",
          "enddate(deadline)",
          "subjectsum(amount (in million of rmb))",
          "reportperiod(statistical period)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "subjectname",
          "yoy",
          "enddate",
          "subjectsum",
          "reportperiod",
          "id"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "capitalreceived(paid-up capital)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "claimstogov(claims on the government (net))",
          "fcdeposits(foreign currency deposit.)",
          "netabroadassets(foreign net assets)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "bonds(bonds)"
        ],
        "column_names_original_en": [
          "capitalreceived",
          "moneyandquasimoney",
          "claimstogov",
          "fcdeposits",
          "netabroadassets",
          "claimstospecificsavingorg",
          "bonds"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Xiaoli, please check the billing basis for \"B shares\" and the highest and lowest tax rates for \"securities transaction stamp duty\" for us. | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).id(record identifier) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds)",
    "output_sequence": "select _ from _ where _ | select basiscode , ratiofloor , ratioceiling from ed_taxrate where typename = 'B shares' and itemname = 'securities transaction stamp duty'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.basiscode",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.effectivedate",
      "ed_taxrate.valueceiling",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.id",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.bonds"
    ]
  },
  {
    "question": "I want to know the records in the balance sheet of other deposit-taking corporate entities where the total liabilities exceed 50 million. List the date, total assets amount, and total liabilities amount.",
    "sql": "select enddate, totalassets, totalliabilities from ed_otherdepositorycorpbs where totalliabilities > 50000000;",
    "norm_sql": "select enddate , totalassets , totalliabilities from ed_otherdepositorycorpbs where totalliabilities > 50000000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "totalassets(total assets)",
          "totalliabilities(total liabilities)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "bondissue(bond issuance)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "totalassets",
          "totalliabilities",
          "claimsonotherdepositcorp",
          "bondissue",
          "claimsonotherfinstitute",
          "claimsongovernment"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "id(record identifier)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "quasimoney(quasi-currency)",
          "money1(currency (narrow money m1))",
          "enddate(deadline)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "claimstogov(claims on the government (net))"
        ],
        "column_names_original_en": [
          "id",
          "moneyandquasimoney",
          "quasimoney",
          "money1",
          "enddate",
          "claimstospecificsavingorg",
          "claimstogov"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "sharesandotherinvestments(equity and other investments)",
          "equityandotherinvestment(securities and investments)",
          "mediumlongtermloans(medium-to-long term loans)",
          "financedeposits(financial deposit)",
          "totalloans(various loans)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "savingsdeposits(savings deposits)"
        ],
        "column_names_original_en": [
          "sharesandotherinvestments",
          "equityandotherinvestment",
          "mediumlongtermloans",
          "financedeposits",
          "totalloans",
          "trustedandcreditdeposits",
          "savingsdeposits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the records in the balance sheet of other deposit-taking corporate entities where the total liabilities exceed 50 million. List the date, total assets amount, and total liabilities amount. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits)",
    "output_sequence": "select _ from _ where _ | select enddate , totalassets , totalliabilities from ed_otherdepositorycorpbs where totalliabilities > 50000000",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.savingsdeposits"
    ]
  },
  {
    "question": "What was the total value of import and export goods in China in 2010?",
    "sql": "select eximvalueofgoods from ed_exportimport where strftime('%Y', enddate)='2010';",
    "norm_sql": "select eximvalueofgoods from ed_exportimport where strftime ( '%Y' , enddate ) = '2010'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "enddate(deadline)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "sovereigntycountry(the subject country)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "eximvalueofgoods",
          "imvalueofgoods",
          "exvalueofgoods",
          "sovereigntycountry",
          "gyoyofeximvaluegoods",
          "id"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "reportperiod(data statistics interval)",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "reportarea(statistical region category)",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "socialfinancing(total social financing scale (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "foreigncurrencyloans",
          "reportperiod",
          "corporatebonds",
          "reportarea",
          "definancingofnonfe",
          "undiscountedbacceptances",
          "socialfinancing"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "enddate(deadline)",
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "primaryindustrygdp",
          "enddate",
          "province",
          "gdp",
          "gdpgrowthyoy",
          "thirdindustrygdp",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What was the total value of import and export goods in China in 2010? | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).id(record identifier) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier)",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select eximvalueofgoods from ed_exportimport where strftime ( '%Y' , enddate ) = '2010'",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.enddate",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.id",
      "ed_socialfinancing.*",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.socialfinancing",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.id"
    ]
  },
  {
    "question": "I want to see the total retail sales of consumer goods in Jiangsu Province based on \"year-end cumulative\" statistics.",
    "sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province ='Jiangsu' and reportperiod ='year-end cumulative';",
    "norm_sql": "select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Jiangsu' and reportperiod = 'year-end cumulative'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "collectiveunits(collective unit)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "province(province and city)",
          "enddate(deadline)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "reportperiod(data statistical period)",
          "othersindustry(other industries)"
        ],
        "column_names_original_en": [
          "collectiveunits",
          "retailvalueofscgoods",
          "province",
          "enddate",
          "wholesaleretailtrade",
          "reportperiod",
          "othersindustry"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "id(record identifier)",
          "effectivedate(effective date)",
          "valueceiling(maximum value (rmb))",
          "ratioceiling(maximum ratio (%))",
          "valuefloor(minimum value/starting point (rmb))",
          "basiscode(billing baseline)",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "id",
          "effectivedate",
          "valueceiling",
          "ratioceiling",
          "valuefloor",
          "basiscode",
          "ratiofloor"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "totalliability(total liabilities (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))",
          "id(record identifier)",
          "selfownedmoney(own funds (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "reservedeposits(reserve deposit (in million of rmb))"
        ],
        "column_names_original_en": [
          "totalliability",
          "otherliability",
          "id",
          "selfownedmoney",
          "moneyandgold",
          "totalassets",
          "reservedeposits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to see the total retail sales of consumer goods in Jiangsu Province based on \"year-end cumulative\" statistics. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select retailvalueofscgoods from ed_retailvalueofscgoods where province = 'Jiangsu' and reportperiod = 'year-end cumulative'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_taxrate.*",
      "ed_taxrate.id",
      "ed_taxrate.effectivedate",
      "ed_taxrate.valueceiling",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valuefloor",
      "ed_taxrate.basiscode",
      "ed_taxrate.ratiofloor",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.reservedeposits"
    ]
  },
  {
    "question": "Please help me check the total amount of Gross Domestic Product (GDP) in the primary industry of our country.",
    "sql": "select primaryindustrygdp from ed_grossdomesticproduct;",
    "norm_sql": "select primaryindustrygdp from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "province(province and city)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "enddate(deadline)",
          "primaryindustrygdp(the primary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "gdpgrowthyoy",
          "secondindustrygdp",
          "province",
          "thirdindustrygdp",
          "gdppercapita",
          "enddate",
          "primaryindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "moneyandgold(currency gold (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "totalliability(total liabilities (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))",
          "reservedeposits(reserve deposit (in million of rmb))",
          "forex(foreign exchange (in million of rmb))"
        ],
        "column_names_original_en": [
          "moneyandgold",
          "governmentsavings",
          "claimtononfinancialinst",
          "totalliability",
          "abroadliability",
          "reservedeposits",
          "forex"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "salestax(business tax (in million of rmb))",
          "id(record identifier)",
          "gsupportunderdevelopedarea(policy subsidy expenditure growth rate)",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "province(province and city)",
          "enterpriseincome(enterprise income (in million of rmb))"
        ],
        "column_names_original_en": [
          "salestax",
          "id",
          "gsupportunderdevelopedarea",
          "operatingexpensescesh",
          "expenditurecitymc",
          "province",
          "enterpriseincome"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me check the total amount of Gross Domestic Product (GDP) in the primary industry of our country. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).gsupportunderdevelopedarea(policy subsidy expenditure growth rate) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb))",
    "output_sequence": "select _ from _ | select primaryindustrygdp from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.forex",
      "ed_financialbalance.*",
      "ed_financialbalance.salestax",
      "ed_financialbalance.id",
      "ed_financialbalance.gsupportunderdevelopedarea",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.province",
      "ed_financialbalance.enterpriseincome"
    ]
  },
  {
    "question": "Please look at the record of money gold in the central bank's balance sheet.",
    "sql": "select moneyandgold from ed_moneyauthoritybs;",
    "norm_sql": "select moneyandgold from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "totalliability(total liabilities (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "moneyandgold",
          "otherforeignassets",
          "abroadliability",
          "claimtosavingsbanks",
          "totalliability",
          "claimtootherfinnonfininst",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "subjectname(indicator name)",
          "enddate(deadline)",
          "subjectsum(amount (in million of rmb))",
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))",
          "reportperiod(statistical period)"
        ],
        "column_names_original_en": [
          "subjectname",
          "enddate",
          "subjectsum",
          "id",
          "yoy",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "entrustedloans(trust loan (in 100 million of rmb))",
          "reportperiod(data statistics interval)",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "rmbloans(rmb loans (in 100 million rmb))",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "entrustedloans",
          "reportperiod",
          "undiscountedbacceptances",
          "rmbloans",
          "province"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please look at the record of money gold in the central bank's balance sheet. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).province(province and city)",
    "output_sequence": "select _ from _ | select moneyandgold from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.enddate",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.reportperiod",
      "ed_socialfinancing.*",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.id",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.province"
    ]
  },
  {
    "question": "I am studying the trade deficit situation. Can you provide the total value of goods imported and exported in my country over the years, along with the year-on-year growth and decline data of the total import and export value?",
    "sql": "select eximvalueofgoods, gyoyofeximvaluegoods from ed_exportimport;",
    "norm_sql": "select eximvalueofgoods , gyoyofeximvaluegoods from ed_exportimport",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "reportarea(statistical category of the region)",
          "province(province and city)",
          "enddate(deadline)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "eximvalueofgoods",
          "gyoyofeximvaluegoods",
          "gyoyofimvaluegoods",
          "reportarea",
          "province",
          "enddate",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "statstandard(statistical caliber)",
          "province(province)",
          "collectivecomap(collective enterprise (light industry))",
          "enddate(deadline)",
          "id(record identifier)",
          "reportarea(statistical area category)"
        ],
        "column_names_original_en": [
          "stateownedcontrolledcomap",
          "statstandard",
          "province",
          "collectivecomap",
          "enddate",
          "id",
          "reportarea"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "maturity(repurchase period)",
          "valueceiling(maximum value (rmb))",
          "basiscode(billing baseline)",
          "typename(tax rate type)",
          "valuefloor(minimum value/starting point (rmb))",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "itemname",
          "maturity",
          "valueceiling",
          "basiscode",
          "typename",
          "valuefloor",
          "ratiofloor"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I am studying the trade deficit situation. Can you provide the total value of goods imported and exported in my country over the years, along with the year-on-year growth and decline data of the total import and export value? | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).reportperiod(data statistical period) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).reportarea(statistical area category) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%))",
    "output_sequence": "select _ from _ | select eximvalueofgoods , gyoyofeximvaluegoods from ed_exportimport",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.reportarea",
      "ed_exportimport.province",
      "ed_exportimport.enddate",
      "ed_exportimport.reportperiod",
      "ed_industryproduction.*",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.province",
      "ed_industryproduction.collectivecomap",
      "ed_industryproduction.enddate",
      "ed_industryproduction.id",
      "ed_industryproduction.reportarea",
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.maturity",
      "ed_taxrate.valueceiling",
      "ed_taxrate.basiscode",
      "ed_taxrate.typename",
      "ed_taxrate.valuefloor",
      "ed_taxrate.ratiofloor"
    ]
  },
  {
    "question": "Hi, can you show me the annual retail sales of social consumer goods for \"state-owned units\" and \"joint ventures\" in \"China\" over the past five years?",
    "sql": "select stateownedunits, jointventures from ed_retailvalueofscgoods where reportarea='nationwide' and reportperiod='annual' and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-5 year'));",
    "norm_sql": "select stateownedunits , jointventures from ed_retailvalueofscgoods where reportarea = 'nationwide' and reportperiod = 'annual' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-5 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "enddate(deadline)",
          "jointventures(joint operating unit)",
          "county(county)",
          "reportarea(statistical category of region)",
          "stateownedunits(state-owned unit)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "jointventures",
          "county",
          "reportarea",
          "stateownedunits",
          "retailvalueofscgoods",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "commodity(product name)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "province(province and city)",
          "reportperiod(data statistical period)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "eximvalueofgoods",
          "exvalueofgoods",
          "commodity",
          "gyoyofeximvaluegoods",
          "province",
          "reportperiod",
          "gyoyofexvaluegoods"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "typename(tax rate type)",
          "basiscode(billing baseline)",
          "valuefloor(minimum value/starting point (rmb))",
          "ratiofloor(minimum ratio (%))",
          "secumarket(securities market)",
          "ratioceiling(maximum ratio (%))",
          "valueceiling(maximum value (rmb))"
        ],
        "column_names_original_en": [
          "typename",
          "basiscode",
          "valuefloor",
          "ratiofloor",
          "secumarket",
          "ratioceiling",
          "valueceiling"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hi, can you show me the annual retail sales of social consumer goods for \"state-owned units\" and \"joint ventures\" in \"China\" over the past five years? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select stateownedunits , jointventures from ed_retailvalueofscgoods where reportarea = 'nationwide' and reportperiod = 'annual' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-5 year' ) )",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_exportimport.*",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.commodity",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.province",
      "ed_exportimport.reportperiod",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_taxrate.*",
      "ed_taxrate.typename",
      "ed_taxrate.basiscode",
      "ed_taxrate.valuefloor",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.secumarket",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valueceiling"
    ]
  },
  {
    "question": "Can you show the detailed records of foreign net assets and domestic credit in the past three years?",
    "sql": "select netabroadassets, domesticloans from ed_chinamoneyandbanking where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select netabroadassets , domesticloans from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "fcdeposits(foreign currency deposit.)",
          "bonds(bonds)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "claimstogov(claims on the government (net))"
        ],
        "column_names_original_en": [
          "enddate",
          "netabroadassets",
          "domesticloans",
          "fcdeposits",
          "bonds",
          "claimstospecificsavingorg",
          "claimstogov"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "subjectname(indicator name)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "subjectname",
          "reportperiod",
          "subjectsum",
          "yoy",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "reportperiod(data statistics interval)",
          "province(province and city)",
          "reportarea(statistical region category)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "socialfinancing",
          "undiscountedbacceptances",
          "reportperiod",
          "province",
          "reportarea"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you show the detailed records of foreign net assets and domestic credit in the past three years? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).id(record identifier) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category)",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select netabroadassets , domesticloans from ed_chinamoneyandbanking where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.id",
      "ed_socialfinancing.*",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.id",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.province",
      "ed_socialfinancing.reportarea"
    ]
  },
  {
    "question": "What was the amount of RMB new loans we accumulated at the end of last year?",
    "sql": "select enddate, subjectsum from ed_newincreasingloan where reportperiod = 'Year-end Accumulated' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year'));",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'Year-end Accumulated' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "subjectname(indicator name)",
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "subjectsum",
          "subjectname",
          "yoy",
          "id"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indexvalue(index value (points))",
          "indexname(index name)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indexvalue",
          "indexname",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "basiscode(billing baseline)",
          "maturity(repurchase period)",
          "id(record identifier)",
          "effectivedate(effective date)",
          "valuefloor(minimum value/starting point (rmb))",
          "secumarket(securities market)",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "basiscode",
          "maturity",
          "id",
          "effectivedate",
          "valuefloor",
          "secumarket",
          "ratioceiling"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What was the amount of RMB new loans we accumulated at the end of last year? | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'Year-end Accumulated' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.id",
      "ed_taxrate.*",
      "ed_taxrate.basiscode",
      "ed_taxrate.maturity",
      "ed_taxrate.id",
      "ed_taxrate.effectivedate",
      "ed_taxrate.valuefloor",
      "ed_taxrate.secumarket",
      "ed_taxrate.ratioceiling"
    ]
  },
  {
    "question": "Please help me see which provinces had a per capita gross domestic product (GDP) amount exceeding 1 billion in the year 2000, and what is their per capita GDP?",
    "sql": "select province, gdppercapita from ed_grossdomesticproduct where strftime('%Y', enddate)='2000' and gdp > 1000;",
    "norm_sql": "select province , gdppercapita from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = '2000' and gdp > 1000",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _ and _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "reportperiod(data statistics interval)",
          "enddate(deadline)",
          "id(record identifier)",
          "hivalueap(heavy industry (in million of rmb))",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "reportarea(statistical area category)",
          "collectivecomap(collective enterprise (light industry))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "enddate",
          "id",
          "hivalueap",
          "industrialvalueadded",
          "reportarea",
          "collectivecomap"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "totalsavings(all deposit accounts)",
          "shorttermloans(short-term loan)",
          "orgdeposits(government and institutional deposits)",
          "domesticloans((one) domestic loan)",
          "moneyincirculation(currency in circulation)",
          "savingsdeposits(savings deposits)",
          "totalloans(various loans)"
        ],
        "column_names_original_en": [
          "totalsavings",
          "shorttermloans",
          "orgdeposits",
          "domesticloans",
          "moneyincirculation",
          "savingsdeposits",
          "totalloans"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdppercapita(per capita gross domestic product (cny/person))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "gdp(gross domestic product (in million of rmb).)",
          "enddate(deadline)",
          "id(record identifier)",
          "province(province and city)",
          "secondindustrygdp(the second industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "gdppercapita",
          "gdpgrowthyoy",
          "gdp",
          "enddate",
          "id",
          "province",
          "secondindustrygdp"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me see which provinces had a per capita gross domestic product (GDP) amount exceeding 1 billion in the year 2000, and what is their per capita GDP? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).orgdeposits(government and institutional deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb))",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ and _ | select province , gdppercapita from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = '2000' and gdp > 1000",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.enddate",
      "ed_industryproduction.id",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.collectivecomap",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.orgdeposits",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.secondindustrygdp"
    ]
  },
  {
    "question": "Has China achieved a trade surplus? Please search for the total value of our exports and imports.",
    "sql": "select exvalueofgoods, imvalueofgoods from ed_exportimport;",
    "norm_sql": "select exvalueofgoods , imvalueofgoods from ed_exportimport",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "commodity(product name)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "reportarea(statistical category of the region)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "exvalueofgoods",
          "imvalueofgoods",
          "commodity",
          "gyoyofeximvaluegoods",
          "gyoyofexvaluegoods",
          "reportarea",
          "gyoyofimvaluegoods"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "assetsatifo(asset in international financial institutions)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "moneyincirculation(currency in circulation)",
          "corporatesavings(unit deposit/corporate deposit)",
          "othersavings(other deposits)",
          "currencyname(currency unit code)",
          "shorttermloans(short-term loan)"
        ],
        "column_names_original_en": [
          "assetsatifo",
          "trustedandcreditdeposits",
          "moneyincirculation",
          "corporatesavings",
          "othersavings",
          "currencyname",
          "shorttermloans"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "reportperiod(data statistics interval)",
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "reportarea(statistical region category)",
          "rmbloans(rmb loans (in 100 million rmb))",
          "id(record identifier)",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "corporatebonds",
          "reportarea",
          "rmbloans",
          "id",
          "undiscountedbacceptances",
          "foreigncurrencyloans"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Has China achieved a trade surplus? Please search for the total value of our exports and imports. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
    "output_sequence": "select _ from _ | select exvalueofgoods , imvalueofgoods from ed_exportimport",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.commodity",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.reportarea",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_socialfinancing.*",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.id",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.foreigncurrencyloans"
    ]
  },
  {
    "question": "How much are the amounts of government deposits and self-owned funds in the central bank's balance sheet?",
    "sql": "select governmentsavings, selfownedmoney from ed_moneyauthoritybs;",
    "norm_sql": "select governmentsavings , selfownedmoney from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "governmentsavings(government deposits (in million of rmb))",
          "selfownedmoney(own funds (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "bondissuance(bond issuance (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "moneyissuance(currency issuance (in million of rmb))",
          "reservedeposits(reserve deposit (in million of rmb))"
        ],
        "column_names_original_en": [
          "governmentsavings",
          "selfownedmoney",
          "nonfinancialorgdeposits",
          "bondissuance",
          "totalassets",
          "moneyissuance",
          "reservedeposits"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "enddate(deadline)",
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "enddate",
          "indexname",
          "reportperiod",
          "id"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpi(resident consumer price index (year-on-year))",
          "cumcpihousing(accumulated average of residence)",
          "qoqcpi(resident consumer price index (month-on-month))",
          "qoqcpicloth(clothing month-on-month)",
          "cumcpimedicare(cumulative average of healthcare and personal care products)",
          "cumcpitobacco(cumulative average of tobacco, alcohol, and supplies)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "yoycpi",
          "cumcpihousing",
          "qoqcpi",
          "qoqcpicloth",
          "cumcpimedicare",
          "cumcpitobacco",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How much are the amounts of government deposits and self-owned funds in the central bank's balance sheet? | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpi(resident consumer price index (year-on-year)) , ed_consumerpriceindex(consumer price index).cumcpihousing(accumulated average of residence) , ed_consumerpriceindex(consumer price index).qoqcpi(resident consumer price index (month-on-month)) , ed_consumerpriceindex(consumer price index).qoqcpicloth(clothing month-on-month) , ed_consumerpriceindex(consumer price index).cumcpimedicare(cumulative average of healthcare and personal care products) , ed_consumerpriceindex(consumer price index).cumcpitobacco(cumulative average of tobacco, alcohol, and supplies) , ed_consumerpriceindex(consumer price index).id(record identifier)",
    "output_sequence": "select _ from _ | select governmentsavings , selfownedmoney from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.reservedeposits",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.id",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpi",
      "ed_consumerpriceindex.cumcpihousing",
      "ed_consumerpriceindex.qoqcpi",
      "ed_consumerpriceindex.qoqcpicloth",
      "ed_consumerpriceindex.cumcpimedicare",
      "ed_consumerpriceindex.cumcpitobacco",
      "ed_consumerpriceindex.id"
    ]
  },
  {
    "question": "In the monetary authority balance sheet, what were the total assets and total liabilities in the year 2000?",
    "sql": "select totalassets, totalliability from ed_moneyauthoritybs where strftime('%Y', enddate)='2000';",
    "norm_sql": "select totalassets , totalliability from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) = '2000'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "gdp(gross domestic product (in million of rmb).)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "province(province and city)",
          "id(record identifier)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))"
        ],
        "column_names_original_en": [
          "primaryindustrygdp",
          "gdp",
          "gdpgrowthyoy",
          "province",
          "id",
          "secondindustrygdp",
          "gdppercapita"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "totalassets(total assets (in million of rmb).)",
          "totalliability(total liabilities (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "totalassets",
          "totalliability",
          "forex",
          "governmentsavings",
          "otherliability",
          "id"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "reportarea(statistical category of the region)",
          "id(record identifier)",
          "province(province and city)",
          "commodity(product name)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "sovereigntycountry(the subject country)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "reportarea",
          "id",
          "province",
          "commodity",
          "eximvalueofgoods",
          "sovereigntycountry",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In the monetary authority balance sheet, what were the total assets and total liabilities in the year 2000? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).reportperiod(data statistical period)",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select totalassets , totalliability from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) = '2000'",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.id",
      "ed_exportimport.*",
      "ed_exportimport.reportarea",
      "ed_exportimport.id",
      "ed_exportimport.province",
      "ed_exportimport.commodity",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.reportperiod"
    ]
  },
  {
    "question": "What is the highest index value in the statistical period of \"previous year same period\" in the \"Industrial Structure Classification Index\"? What is its index name?",
    "sql": "select indexname, indexvalue from ed_producerpiformp where indextype ='Industrial Structure Classification Index' and reportperiod ='Previous Year Same Period' order by indexvalue desc limit 1;",
    "norm_sql": "select indexname , indexvalue from ed_producerpiformp where indextype = 'Industrial Structure Classification Index' and reportperiod = 'Previous Year Same Period' order by indexvalue desc limit 1",
    "sql_skeleton": "select _ from _ where _ order by _ desc limit _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "othersunits(other units)",
          "reportarea(statistical category of region)",
          "belowcounty(county and below)",
          "stateownedunits(state-owned unit)",
          "collectiveunits(collective unit)",
          "reportperiod(data statistical period)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "othersunits",
          "reportarea",
          "belowcounty",
          "stateownedunits",
          "collectiveunits",
          "reportperiod",
          "id"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "nationaldefense(defense expenditure (in million of rmb))",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "enddate(deadline)",
          "enterpriseincometax(enterprise income tax (in million of rmb))",
          "commercialtax(business tax revenue (in million of rmb))",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "expenditurecitymc",
          "nationaldefense",
          "localgovrevenue",
          "enddate",
          "enterpriseincometax",
          "commercialtax",
          "province"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the highest index value in the statistical period of \"previous year same period\" in the \"Industrial Structure Classification Index\"? What is its index name? | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).province(province and city)",
    "output_sequence": "select _ from _ where _ order by _ desc limit _ | select indexname , indexvalue from ed_producerpiformp where indextype = 'Industrial Structure Classification Index' and reportperiod = 'Previous Year Same Period' order by indexvalue desc limit 1",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.id",
      "ed_financialbalance.*",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.nationaldefense",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.enddate",
      "ed_financialbalance.enterpriseincometax",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.province"
    ]
  },
  {
    "question": "What is the highest ratio of \"Excess Deposit Reserve Ratio\" in \"Deposit-type Financial Institutions\"?",
    "sql": "select ratioceiling from ed_taxrate where typename ='Deposit-type Financial Institutions' and itemname ='Excess Deposit Reserve Ratio';",
    "norm_sql": "select ratioceiling from ed_taxrate where typename = 'Deposit-type Financial Institutions' and itemname = 'Excess Deposit Reserve Ratio'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "ratioceiling(maximum ratio (%))",
          "maturity(repurchase period)",
          "effectivedate(effective date)",
          "ratiofloor(minimum ratio (%))",
          "valuefloor(minimum value/starting point (rmb))"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "ratioceiling",
          "maturity",
          "effectivedate",
          "ratiofloor",
          "valuefloor"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "qoqcpifood(food price month-on-month)",
          "cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services)",
          "yoycpihousing(residential year-on-year)",
          "qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month)",
          "cumcpimedicare(cumulative average of healthcare and personal care products)",
          "qoqcpitrafficcommunication(transportation and communication month-on-month)",
          "qoqcpihousing(residential month-to-month)"
        ],
        "column_names_original_en": [
          "qoqcpifood",
          "cumcpifamilyequipmentservice",
          "yoycpihousing",
          "qoqcpientertainmentservice",
          "cumcpimedicare",
          "qoqcpitrafficcommunication",
          "qoqcpihousing"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "enddate(deadline)",
          "id(record identifier)",
          "indexname(index name)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "enddate",
          "id",
          "indexname",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the highest ratio of \"Excess Deposit Reserve Ratio\" in \"Deposit-type Financial Institutions\"? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).qoqcpifood(food price month-on-month) , ed_consumerpriceindex(consumer price index).cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services) , ed_consumerpriceindex(consumer price index).yoycpihousing(residential year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month) , ed_consumerpriceindex(consumer price index).cumcpimedicare(cumulative average of healthcare and personal care products) , ed_consumerpriceindex(consumer price index).qoqcpitrafficcommunication(transportation and communication month-on-month) , ed_consumerpriceindex(consumer price index).qoqcpihousing(residential month-to-month) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period)",
    "output_sequence": "select _ from _ where _ | select ratioceiling from ed_taxrate where typename = 'Deposit-type Financial Institutions' and itemname = 'Excess Deposit Reserve Ratio'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.maturity",
      "ed_taxrate.effectivedate",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.valuefloor",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.qoqcpifood",
      "ed_consumerpriceindex.cumcpifamilyequipmentservice",
      "ed_consumerpriceindex.yoycpihousing",
      "ed_consumerpriceindex.qoqcpientertainmentservice",
      "ed_consumerpriceindex.cumcpimedicare",
      "ed_consumerpriceindex.qoqcpitrafficcommunication",
      "ed_consumerpriceindex.qoqcpihousing",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.reportperiod"
    ]
  },
  {
    "question": "What is the highest threshold for \"Securities Trading Stamp Duty\" for \"B Shares\"?",
    "sql": "select valueceiling from ed_taxrate where typename = 'B Shares' and itemname = 'Securities Trading Stamp Duty';",
    "norm_sql": "select valueceiling from ed_taxrate where typename = 'B Shares' and itemname = 'Securities Trading Stamp Duty'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "valueceiling(maximum value (rmb))",
          "ratioceiling(maximum ratio (%))",
          "effectivedate(effective date)",
          "valuefloor(minimum value/starting point (rmb))",
          "basiscode(billing baseline)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "valueceiling",
          "ratioceiling",
          "effectivedate",
          "valuefloor",
          "basiscode"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "reportperiod(data statistics interval)",
          "entrustedloans(trust loan (in 100 million of rmb))",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "enddate(deadline)",
          "id(record identifier)",
          "creditloans(trust loan (in 100 million rmb))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "entrustedloans",
          "undiscountedbacceptances",
          "foreigncurrencyloans",
          "enddate",
          "id",
          "creditloans"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "claimstogov(claims on the government (net))",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "bonds(bonds)",
          "enddate(deadline)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "fcdeposits(foreign currency deposit.)",
          "quasimoney(quasi-currency)"
        ],
        "column_names_original_en": [
          "claimstogov",
          "moneyandquasimoney",
          "bonds",
          "enddate",
          "claimstootherinst",
          "fcdeposits",
          "quasimoney"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the highest threshold for \"Securities Trading Stamp Duty\" for \"B Shares\"? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).basiscode(billing baseline) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency)",
    "output_sequence": "select _ from _ where _ | select valueceiling from ed_taxrate where typename = 'B Shares' and itemname = 'Securities Trading Stamp Duty'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.valueceiling",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.effectivedate",
      "ed_taxrate.valuefloor",
      "ed_taxrate.basiscode",
      "ed_socialfinancing.*",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.id",
      "ed_socialfinancing.creditloans",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.quasimoney"
    ]
  },
  {
    "question": "What is the revenue of commercial tax and sales tax in each province and city of our country over the years?",
    "sql": "select commercialtax, salestax from ed_financialbalance;",
    "norm_sql": "select commercialtax , salestax from ed_financialbalance",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "commercialtax(business tax revenue (in million of rmb))",
          "salestax(business tax (in million of rmb))",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "reportperiod(data statistical period)",
          "valueaddedtax(value added tax (in million of rmb))",
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "gnationaldefense(defense expenditure growth rate)"
        ],
        "column_names_original_en": [
          "commercialtax",
          "salestax",
          "operatingexpensescesh",
          "reportperiod",
          "valueaddedtax",
          "gfinancialexpenditure",
          "gnationaldefense"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "indexname(index name)",
          "indexvalue(index)",
          "reportperiod(data statistical period)",
          "indextype(index category)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "indexname",
          "indexvalue",
          "reportperiod",
          "indextype"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "hivalueap(heavy industry (in million of rmb))",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "id(record identifier)",
          "statstandard(statistical caliber)",
          "province(province)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "minitypecomap(small-scale enterprise (light industry))"
        ],
        "column_names_original_en": [
          "hivalueap",
          "industrialoutputvalueap",
          "id",
          "statstandard",
          "province",
          "industrialvalueadded",
          "minitypecomap"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the revenue of commercial tax and sales tax in each province and city of our country over the years? | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry))",
    "output_sequence": "select _ from _ | select commercialtax , salestax from ed_financialbalance",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.salestax",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.valueaddedtax",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.gnationaldefense",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_industryproduction.*",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.id",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.province",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.minitypecomap"
    ]
  },
  {
    "question": "What was the retail sales of social consumer goods in each \"province/city\" in the previous year?",
    "sql": "select province, retailvalueofscgoods from ed_retailvalueofscgoods where reportarea ='province/city' and reportperiod ='annual' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year'));",
    "norm_sql": "select province , retailvalueofscgoods from ed_retailvalueofscgoods where reportarea = 'province/city' and reportperiod = 'annual' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "reportarea(statistical category of region)",
          "province(province and city)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "jointventures(joint operating unit)",
          "foodbeverage(catering industry)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "reportarea",
          "province",
          "retailvalueofscgoods",
          "jointventures",
          "foodbeverage"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "gfinancialrevenue(fiscal revenue growth rate)",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "supportunderdevelopedarea(policy subsidy expenditure (in million of rmb))",
          "socialsecurity(social security expenditure (in million of rmb))",
          "individualincometax(personal income tax (in million of rmb))",
          "gsupportunderdevelopedarea(policy subsidy expenditure growth rate)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "gfinancialrevenue",
          "operatingexpensescesh",
          "supportunderdevelopedarea",
          "socialsecurity",
          "individualincometax",
          "gsupportunderdevelopedarea",
          "enddate"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "drrtype(reserve requirement ratio category)",
          "effectivedate(effective date)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "ratiofloor",
          "ratioceiling",
          "drrtype",
          "effectivedate",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What was the retail sales of social consumer goods in each \"province/city\" in the previous year? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).supportunderdevelopedarea(policy subsidy expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gsupportunderdevelopedarea(policy subsidy expenditure growth rate) , ed_financialbalance(government revenue and expenditure).enddate(deadline) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).id(record identifier)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select province , retailvalueofscgoods from ed_retailvalueofscgoods where reportarea = 'province/city' and reportperiod = 'annual' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_financialbalance.*",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.supportunderdevelopedarea",
      "ed_financialbalance.socialsecurity",
      "ed_financialbalance.individualincometax",
      "ed_financialbalance.gsupportunderdevelopedarea",
      "ed_financialbalance.enddate",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.id"
    ]
  },
  {
    "question": "Please show the amount of industrial added value for \"month\" for national state-owned and above-scale industrial enterprises over the years, remember to include time differentiation.",
    "sql": "select enddate, industrialvalueadded from ed_industryproduction where reportarea ='National' and statstandard ='State-owned and above-scale industrial enterprises' and reportperiod ='month';",
    "norm_sql": "select enddate , industrialvalueadded from ed_industryproduction where reportarea = 'National' and statstandard = 'State-owned and above-scale industrial enterprises' and reportperiod = 'month'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "minitypecomap(small-scale enterprise (light industry))",
          "collectivecomap(collective enterprise (light industry))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialvalueadded",
          "minitypecomap",
          "collectivecomap"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "sovereigntycountry(the subject country)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "enddate(deadline)",
          "province(province and city)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "commodity(product name)"
        ],
        "column_names_original_en": [
          "sovereigntycountry",
          "eximvalueofgoods",
          "exvalueofgoods",
          "enddate",
          "province",
          "gyoyofexvaluegoods",
          "commodity"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indexvalue(index)",
          "indexname(index name)",
          "id(record identifier)",
          "indextype(index category)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "indexvalue",
          "indexname",
          "id",
          "indextype"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please show the amount of industrial added value for \"month\" for national state-owned and above-scale industrial enterprises over the years, remember to include time differentiation. | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).commodity(product name) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indextype(index category)",
    "output_sequence": "select _ from _ where _ | select enddate , industrialvalueadded from ed_industryproduction where reportarea = 'National' and statstandard = 'State-owned and above-scale industrial enterprises' and reportperiod = 'month'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.minitypecomap",
      "ed_industryproduction.collectivecomap",
      "ed_exportimport.*",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.enddate",
      "ed_exportimport.province",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.commodity",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indextype"
    ]
  },
  {
    "question": "I want to see the index value records of \"Gas Production and Supply Industry\" in our country in the past three years.",
    "sql": "select indexvalue from ed_producerpiformp where indexname ='Gas Production and Supply Industry' and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select indexvalue from ed_producerpiformp where indexname = 'Gas Production and Supply Industry' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "maturity(repurchase period)",
          "valueceiling(maximum value (rmb))",
          "ratiofloor(minimum ratio (%))",
          "typename(tax rate type)",
          "valuefloor(minimum value/starting point (rmb))",
          "basiscode(billing baseline)",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "maturity",
          "valueceiling",
          "ratiofloor",
          "typename",
          "valuefloor",
          "basiscode",
          "ratioceiling"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "indexname(index name)",
          "indexvalue(index)",
          "indextype(index category)",
          "id(record identifier)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexname",
          "indexvalue",
          "indextype",
          "id",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
          "reportperiod(data statistics interval)",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "reportarea(statistical region category)",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "id(record identifier)",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "foreigncurrencyloans",
          "reportperiod",
          "undiscountedbacceptances",
          "reportarea",
          "socialfinancing",
          "id",
          "province"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to see the index value records of \"Gas Production and Supply Industry\" in our country in the past three years. | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).province(province and city)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select indexvalue from ed_producerpiformp where indexname = 'Gas Production and Supply Industry' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.maturity",
      "ed_taxrate.valueceiling",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.typename",
      "ed_taxrate.valuefloor",
      "ed_taxrate.basiscode",
      "ed_taxrate.ratioceiling",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.id",
      "ed_producerpiformp.reportperiod",
      "ed_socialfinancing.*",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.id",
      "ed_socialfinancing.province"
    ]
  },
  {
    "question": "Search for the values of the minimum and maximum payment ratios of \"Securities Transaction Stamp Duty\" for \"A-shares\" on the \"Shanghai Stock Exchange\"",
    "sql": "select ratiofloor, ratioceiling from ed_taxrate where typename ='A-shares' and itemname = 'Securities Transaction Stamp Duty' and secumarket ='Shanghai Stock Exchange';",
    "norm_sql": "select ratiofloor , ratioceiling from ed_taxrate where typename = 'A-shares' and itemname = 'Securities Transaction Stamp Duty' and secumarket = 'Shanghai Stock Exchange'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "basiscode(billing baseline)",
          "typename(tax rate type)",
          "secumarket(securities market)",
          "ratiofloor(minimum ratio (%))",
          "itemname(tax rate items)",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "basiscode",
          "typename",
          "secumarket",
          "ratiofloor",
          "itemname",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "netabroadassets(foreign net assets)",
          "capitalreceived(paid-up capital)",
          "claimstogov(claims on the government (net))",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "bonds(bonds)",
          "fcdeposits(foreign currency deposit.)"
        ],
        "column_names_original_en": [
          "enddate",
          "netabroadassets",
          "capitalreceived",
          "claimstogov",
          "claimstospecificsavingorg",
          "bonds",
          "fcdeposits"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "unitname(company name)",
          "accueximvalue(accumulated amount)",
          "productname(product name)",
          "currencycode(currency unit)",
          "statecode(primary country)",
          "operatetype(import and export categories)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "unitname",
          "accueximvalue",
          "productname",
          "currencycode",
          "statecode",
          "operatetype",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Search for the values of the minimum and maximum payment ratios of \"Securities Transaction Stamp Duty\" for \"A-shares\" on the \"Shanghai Stock Exchange\" | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).effectivedate(effective date) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).accueximvalue(accumulated amount) , ed_productexportimport(product import and export volume).productname(product name) , ed_productexportimport(product import and export volume).currencycode(currency unit) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).operatetype(import and export categories) , ed_productexportimport(product import and export volume).reportperiod(data statistical period)",
    "output_sequence": "select _ from _ where _ | select ratiofloor , ratioceiling from ed_taxrate where typename = 'A-shares' and itemname = 'Securities Transaction Stamp Duty' and secumarket = 'Shanghai Stock Exchange'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.basiscode",
      "ed_taxrate.typename",
      "ed_taxrate.secumarket",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.itemname",
      "ed_taxrate.effectivedate",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_productexportimport.*",
      "ed_productexportimport.unitname",
      "ed_productexportimport.accueximvalue",
      "ed_productexportimport.productname",
      "ed_productexportimport.currencycode",
      "ed_productexportimport.statecode",
      "ed_productexportimport.operatetype",
      "ed_productexportimport.reportperiod"
    ]
  },
  {
    "question": "Please help me check the maximum payment ratio of \"Securities Trading Stamp Tax\" for \"B-shares\" on the \"Shenzhen Stock Exchange\".",
    "sql": "select ratioceiling from ed_taxrate where typename ='B-shares' and itemname = 'Securities Trading Stamp Tax' and secumarket ='Shenzhen Stock Exchange';",
    "norm_sql": "select ratioceiling from ed_taxrate where typename = 'B-shares' and itemname = 'Securities Trading Stamp Tax' and secumarket = 'Shenzhen Stock Exchange'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "valueceiling(maximum value (rmb))",
          "secumarket(securities market)",
          "typename(tax rate type)",
          "maturity(repurchase period)",
          "effectivedate(effective date)",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "itemname",
          "valueceiling",
          "secumarket",
          "typename",
          "maturity",
          "effectivedate",
          "ratioceiling"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "qoqcpicloth(clothing month-on-month)",
          "cumcpitrafficcommunication(cumulative average of transportation and communication)",
          "yoycpimedicare(medical care and personal care products year-on-year)",
          "yoycpicloth(clothing year-on-year)",
          "id(record identifier)",
          "qoqcpimedicare(healthcare and personal care products month-on-month)",
          "cumcpimedicare(cumulative average of healthcare and personal care products)"
        ],
        "column_names_original_en": [
          "qoqcpicloth",
          "cumcpitrafficcommunication",
          "yoycpimedicare",
          "yoycpicloth",
          "id",
          "qoqcpimedicare",
          "cumcpimedicare"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "corporatebonds(corporate bonds (in hundred million rmb))",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "entrustedloans(trust loan (in 100 million of rmb))",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "reportperiod(data statistics interval)",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "corporatebonds",
          "undiscountedbacceptances",
          "entrustedloans",
          "definancingofnonfe",
          "reportperiod",
          "socialfinancing",
          "foreigncurrencyloans"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me check the maximum payment ratio of \"Securities Trading Stamp Tax\" for \"B-shares\" on the \"Shenzhen Stock Exchange\". | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).qoqcpicloth(clothing month-on-month) , ed_consumerpriceindex(consumer price index).cumcpitrafficcommunication(cumulative average of transportation and communication) , ed_consumerpriceindex(consumer price index).yoycpimedicare(medical care and personal care products year-on-year) , ed_consumerpriceindex(consumer price index).yoycpicloth(clothing year-on-year) , ed_consumerpriceindex(consumer price index).id(record identifier) , ed_consumerpriceindex(consumer price index).qoqcpimedicare(healthcare and personal care products month-on-month) , ed_consumerpriceindex(consumer price index).cumcpimedicare(cumulative average of healthcare and personal care products) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))",
    "output_sequence": "select _ from _ where _ | select ratioceiling from ed_taxrate where typename = 'B-shares' and itemname = 'Securities Trading Stamp Tax' and secumarket = 'Shenzhen Stock Exchange'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.valueceiling",
      "ed_taxrate.secumarket",
      "ed_taxrate.typename",
      "ed_taxrate.maturity",
      "ed_taxrate.effectivedate",
      "ed_taxrate.ratioceiling",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.qoqcpicloth",
      "ed_consumerpriceindex.cumcpitrafficcommunication",
      "ed_consumerpriceindex.yoycpimedicare",
      "ed_consumerpriceindex.yoycpicloth",
      "ed_consumerpriceindex.id",
      "ed_consumerpriceindex.qoqcpimedicare",
      "ed_consumerpriceindex.cumcpimedicare",
      "ed_socialfinancing.*",
      "ed_socialfinancing.corporatebonds",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.foreigncurrencyloans"
    ]
  },
  {
    "question": "Please help me see what is the trading market and repurchase deadline for \"Corporate Bonds\"",
    "sql": "select secumarket, maturity from ed_taxrate where typename ='Corporate Bonds';",
    "norm_sql": "select secumarket , maturity from ed_taxrate where typename = 'Corporate Bonds'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "domesticloans((one) domestic loan)",
          "savingsdeposits(savings deposits)",
          "enddate(deadline)",
          "moneyincirculation(currency in circulation)",
          "othersavings(other deposits)",
          "shorttermloans(short-term loan)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "domesticloans",
          "savingsdeposits",
          "enddate",
          "moneyincirculation",
          "othersavings",
          "shorttermloans",
          "id"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "typename(tax rate type)",
          "maturity(repurchase period)",
          "itemname(tax rate items)",
          "ratiofloor(minimum ratio (%))",
          "basiscode(billing baseline)",
          "secumarket(securities market)"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "typename",
          "maturity",
          "itemname",
          "ratiofloor",
          "basiscode",
          "secumarket"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "indexvalue(index)",
          "enddate(deadline)",
          "indextype(index category)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "id",
          "indexvalue",
          "enddate",
          "indextype",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me see what is the trading market and repurchase deadline for \"Corporate Bonds\" | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).secumarket(securities market) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name)",
    "output_sequence": "select _ from _ where _ | select secumarket , maturity from ed_taxrate where typename = 'Corporate Bonds'",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.id",
      "ed_taxrate.*",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.typename",
      "ed_taxrate.maturity",
      "ed_taxrate.itemname",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.basiscode",
      "ed_taxrate.secumarket",
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname"
    ]
  },
  {
    "question": "How much money is the social security expenditure in Jiangsu Province over the years?",
    "sql": "select socialsecurity from ed_financialbalance where province ='Jiangsu';",
    "norm_sql": "select socialsecurity from ed_financialbalance where province = 'Jiangsu'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "province(province and city)",
          "socialsecurity(social security expenditure (in million of rmb))",
          "id(record identifier)",
          "agriculturetax(agricultural tax (in million of rmb))",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "reportarea(statistical area category)",
          "gfinancialexpenditure(fiscal expenditure growth rate)"
        ],
        "column_names_original_en": [
          "province",
          "socialsecurity",
          "id",
          "agriculturetax",
          "localgovrevenue",
          "reportarea",
          "gfinancialexpenditure"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "totalloans(various loans)",
          "moneyincirculation(currency in circulation)",
          "assetsatifo(asset in international financial institutions)",
          "agriculturaldeposits(agricultural deposit)",
          "sharesandotherinvestments(equity and other investments)",
          "mediumlongtermloans(medium-to-long term loans)",
          "reservedeposits(deposit of reserve funds)"
        ],
        "column_names_original_en": [
          "totalloans",
          "moneyincirculation",
          "assetsatifo",
          "agriculturaldeposits",
          "sharesandotherinvestments",
          "mediumlongtermloans",
          "reservedeposits"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "foodbeverage(catering industry)",
          "reportarea(statistical category of region)",
          "jointventures(joint operating unit)",
          "reportperiod(data statistical period)",
          "county(county)",
          "city(city)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))"
        ],
        "column_names_original_en": [
          "foodbeverage",
          "reportarea",
          "jointventures",
          "reportperiod",
          "county",
          "city",
          "retailvalueofscgoods"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How much money is the social security expenditure in Jiangsu Province over the years? | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
    "output_sequence": "select _ from _ where _ | select socialsecurity from ed_financialbalance where province = 'Jiangsu'",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.province",
      "ed_financialbalance.socialsecurity",
      "ed_financialbalance.id",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.retailvalueofscgoods"
    ]
  },
  {
    "question": "Please help me check the index value of \"Metallurgical Industry\" for the previous year and list its corresponding index type and statistical period.",
    "sql": "select reportperiod, indextype, indexvalue from ed_producerpiformp where indexname = 'Metallurgical Industry' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select reportperiod , indextype , indexvalue from ed_producerpiformp where indexname = 'Metallurgical Industry' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "id"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "id(record identifier)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "gdp(gross domestic product (in million of rmb).)"
        ],
        "column_names_original_en": [
          "thirdindustrygdp",
          "primaryindustrygdp",
          "secondindustrygdp",
          "gdppercapita",
          "id",
          "gdpgrowthyoy",
          "gdp"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "id(record identifier)",
          "valuefloor(minimum value/starting point (rmb))",
          "basiscode(billing baseline)",
          "effectivedate(effective date)",
          "typename(tax rate type)",
          "maturity(repurchase period)",
          "secumarket(securities market)"
        ],
        "column_names_original_en": [
          "id",
          "valuefloor",
          "basiscode",
          "effectivedate",
          "typename",
          "maturity",
          "secumarket"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help me check the index value of \"Metallurgical Industry\" for the previous year and list its corresponding index type and statistical period. | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).secumarket(securities market)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select reportperiod , indextype , indexvalue from ed_producerpiformp where indexname = 'Metallurgical Industry' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.gdp",
      "ed_taxrate.*",
      "ed_taxrate.id",
      "ed_taxrate.valuefloor",
      "ed_taxrate.basiscode",
      "ed_taxrate.effectivedate",
      "ed_taxrate.typename",
      "ed_taxrate.maturity",
      "ed_taxrate.secumarket"
    ]
  },
  {
    "question": "In the year 2008, which provinces had a GDP exceeding 20 billion but a per capita GDP of less than 10000?",
    "sql": "select province from ed_grossdomesticproduct where strftime('%Y', enddate)='2008' and gdp > 20000 and gdppercapita < 10000;",
    "norm_sql": "select province from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = '2008' and gdp > 20000 and gdppercapita < 10000",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _ and _ and _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "enddate(deadline)",
          "gdp(gross domestic product (in million of rmb).)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "id(record identifier)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "primaryindustrygdp(the primary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "enddate",
          "gdp",
          "gdppercapita",
          "id",
          "secondindustrygdp",
          "primaryindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "commodity(product name)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "enddate(deadline)",
          "sovereigntycountry(the subject country)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "commodity",
          "exvalueofgoods",
          "imvalueofgoods",
          "eximvalueofgoods",
          "enddate",
          "sovereigntycountry",
          "gyoyofeximvaluegoods"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)",
          "drrtype(reserve requirement ratio category)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "ratiofloor",
          "effectivedate",
          "drrtype",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In the year 2008, which provinces had a GDP exceeding 20 billion but a per capita GDP of less than 10000? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).id(record identifier)",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ and _ and _ | select province from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = '2008' and gdp > 20000 and gdppercapita < 10000",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_exportimport.*",
      "ed_exportimport.commodity",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.enddate",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.gyoyofeximvaluegoods",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.id"
    ]
  },
  {
    "question": "Calculate the government claims amount when domestic loans in China exceed 100 million yuan.",
    "sql": "select claimstogov from ed_chinamoneyandbanking where domesticloans > 100000000;",
    "norm_sql": "select claimstogov from ed_chinamoneyandbanking where domesticloans > 100000000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "domesticloans(domestic credit)",
          "claimstogov(claims on the government (net))",
          "capitalreceived(paid-up capital)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "quasimoney(quasi-currency)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "fcdeposits(foreign currency deposit.)"
        ],
        "column_names_original_en": [
          "domesticloans",
          "claimstogov",
          "capitalreceived",
          "claimstononfinancialinst",
          "quasimoney",
          "claimstospecificsavingorg",
          "fcdeposits"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "province(province and city)",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "rmbloans(rmb loans (in 100 million rmb))",
          "reportarea(statistical region category)",
          "id(record identifier)",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "creditloans(trust loan (in 100 million rmb))"
        ],
        "column_names_original_en": [
          "province",
          "definancingofnonfe",
          "rmbloans",
          "reportarea",
          "id",
          "undiscountedbacceptances",
          "creditloans"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "totalsavings(all deposit accounts)",
          "agriculturaldeposits(agricultural deposit)",
          "shorttermloans(short-term loan)",
          "equityandotherinvestment(securities and investments)",
          "savingsdeposits(savings deposits)",
          "sharesandotherinvestments(equity and other investments)",
          "corporatesavings(unit deposit/corporate deposit)"
        ],
        "column_names_original_en": [
          "totalsavings",
          "agriculturaldeposits",
          "shorttermloans",
          "equityandotherinvestment",
          "savingsdeposits",
          "sharesandotherinvestments",
          "corporatesavings"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Calculate the government claims amount when domestic loans in China exceed 100 million yuan. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit)",
    "output_sequence": "select _ from _ where _ | select claimstogov from ed_chinamoneyandbanking where domesticloans > 100000000",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_socialfinancing.*",
      "ed_socialfinancing.province",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.id",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.creditloans",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.corporatesavings"
    ]
  },
  {
    "question": "What was the index value of the \"Metal Products Industry\" last year, and what index type does it belong to?",
    "sql": "select indextype, indexvalue from ed_producerpiformp where indexname = 'Metal Products Industry' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year'));",
    "norm_sql": "select indextype , indexvalue from ed_producerpiformp where indexname = 'Metal Products Industry' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "id(record identifier)",
          "indextype(index category)",
          "indexname(index name)",
          "enddate(deadline)",
          "indexvalue(index)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "id",
          "indextype",
          "indexname",
          "enddate",
          "indexvalue",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "basiscode(billing baseline)",
          "valueceiling(maximum value (rmb))",
          "valuefloor(minimum value/starting point (rmb))",
          "ratioceiling(maximum ratio (%))",
          "secumarket(securities market)",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "itemname",
          "basiscode",
          "valueceiling",
          "valuefloor",
          "ratioceiling",
          "secumarket",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "moneyandgold(currency gold (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))",
          "totalliability(total liabilities (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "reservedeposits(reserve deposit (in million of rmb))"
        ],
        "column_names_original_en": [
          "moneyandgold",
          "otherforeignassets",
          "abroadliability",
          "totalliability",
          "moneyissuance",
          "claimtootherfinnonfininst",
          "reservedeposits"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What was the index value of the \"Metal Products Industry\" last year, and what index type does it belong to? | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).effectivedate(effective date) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select indextype , indexvalue from ed_producerpiformp where indexname = 'Metal Products Industry' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) )",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.reportperiod",
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.basiscode",
      "ed_taxrate.valueceiling",
      "ed_taxrate.valuefloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.secumarket",
      "ed_taxrate.effectivedate",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.reservedeposits"
    ]
  },
  {
    "question": "Do you know the maximum and minimum values of the \"End-of-Year Accumulated\" total retail sales of consumer goods in Guangdong Province?",
    "sql": "select max(retailvalueofscgoods), min(retailvalueofscgoods) from ed_retailvalueofscgoods where province='Guangdong' and reportperiod ='End-of-Year Accumulated';",
    "norm_sql": "select max ( retailvalueofscgoods ) , min ( retailvalueofscgoods ) from ed_retailvalueofscgoods where province = 'Guangdong' and reportperiod = 'End-of-Year Accumulated'",
    "sql_skeleton": "select max ( _ ) , min ( _ ) from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "id(record identifier)",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "largecomap(large-scale enterprise (light industry))",
          "hivalueap(heavy industry (in million of rmb))",
          "reportarea(statistical area category)",
          "minitypecomap(small-scale enterprise (light industry))",
          "livalueap(light industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "id",
          "stateownedcontrolledcomap",
          "largecomap",
          "hivalueap",
          "reportarea",
          "minitypecomap",
          "livalueap"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indexvalue(index)",
          "indextype(index category)",
          "indexname(index name)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "indexvalue",
          "indextype",
          "indexname",
          "id"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "province(province and city)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "collectiveunits(collective unit)",
          "othersunits(other units)",
          "belowcounty(county and below)",
          "reportarea(statistical category of region)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "province",
          "retailvalueofscgoods",
          "collectiveunits",
          "othersunits",
          "belowcounty",
          "reportarea"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Do you know the maximum and minimum values of the \"End-of-Year Accumulated\" total retail sales of consumer goods in Guangdong Province? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).id(record identifier) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region)",
    "output_sequence": "select max ( _ ) , min ( _ ) from _ where _ | select max ( retailvalueofscgoods ) , min ( retailvalueofscgoods ) from ed_retailvalueofscgoods where province = 'Guangdong' and reportperiod = 'End-of-Year Accumulated'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.id",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.minitypecomap",
      "ed_industryproduction.livalueap",
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.id",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.reportarea"
    ]
  },
  {
    "question": "Please extract the \"end-of-period accumulated\" amount of social consumer goods retail for the \"provinces and cities\" wholesale retail trade and catering industry for Mr. Wang.",
    "sql": "select foodbeverage, wholesaleretailtrade from ed_retailvalueofscgoods where reportarea ='provinces and cities' and reportperiod ='end-of-period accumulated' ;",
    "norm_sql": "select foodbeverage , wholesaleretailtrade from ed_retailvalueofscgoods where reportarea = 'provinces and cities' and reportperiod = 'end-of-period accumulated'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "foreignliabilities(foreign liabilities)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "enddate(deadline)",
          "otherliabilities(other liabilities)",
          "foreignassets(foreign net assets)",
          "depositswithcentralbank(reserve deposit)"
        ],
        "column_names_original_en": [
          "foreignliabilities",
          "claimsonotherdepositcorp",
          "liabilitiestocentralbank",
          "enddate",
          "otherliabilities",
          "foreignassets",
          "depositswithcentralbank"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "totalliability(total liabilities (in million of rmb))",
          "selfownedmoney(own funds (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "totalliability",
          "selfownedmoney",
          "moneyandgold",
          "otherliability",
          "nonfinancialorgdeposits",
          "governmentsavings",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "province(province and city)",
          "city(city)",
          "reportperiod(data statistical period)",
          "foodbeverage(catering industry)",
          "reportarea(statistical category of region)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "province",
          "city",
          "reportperiod",
          "foodbeverage",
          "reportarea",
          "wholesaleretailtrade",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please extract the \"end-of-period accumulated\" amount of social consumer goods retail for the \"provinces and cities\" wholesale retail trade and catering industry for Mr. Wang. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).foreignliabilities(foreign liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline)",
    "output_sequence": "select _ from _ where _ | select foodbeverage , wholesaleretailtrade from ed_retailvalueofscgoods where reportarea = 'provinces and cities' and reportperiod = 'end-of-period accumulated'",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.foreignliabilities",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.enddate",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.enddate"
    ]
  },
  {
    "question": "Xiao Li, please help me find out the \"annual\" retail sales value of social consumer goods for joint ventures and self-employed individuals in Jiangsu province in 2002.",
    "sql": "select jointventures, selfemployed from ed_retailvalueofscgoods where province='Jiangsu' and reportperiod='annual' and strftime('%Y', enddate)='2002';",
    "norm_sql": "select jointventures , selfemployed from ed_retailvalueofscgoods where province = 'Jiangsu' and reportperiod = 'annual' and strftime ( '%Y' , enddate ) = '2002'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "financedeposits(financial deposit)",
          "reservedeposits(deposit of reserve funds)",
          "moneyincirculation(currency in circulation)",
          "financialbonds(financial bonds)",
          "savingsdeposits(savings deposits)",
          "totalloans(various loans)",
          "corporatesavings(unit deposit/corporate deposit)"
        ],
        "column_names_original_en": [
          "financedeposits",
          "reservedeposits",
          "moneyincirculation",
          "financialbonds",
          "savingsdeposits",
          "totalloans",
          "corporatesavings"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "province(province and city)",
          "jointventures(joint operating unit)",
          "selfemployed(individual unit)",
          "id(record identifier)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "province",
          "jointventures",
          "selfemployed",
          "id",
          "retailvalueofscgoods"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "valueceiling(maximum value (rmb))",
          "valuefloor(minimum value/starting point (rmb))",
          "id(record identifier)",
          "effectivedate(effective date)",
          "itemname(tax rate items)",
          "basiscode(billing baseline)",
          "typename(tax rate type)"
        ],
        "column_names_original_en": [
          "valueceiling",
          "valuefloor",
          "id",
          "effectivedate",
          "itemname",
          "basiscode",
          "typename"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Xiao Li, please help me find out the \"annual\" retail sales value of social consumer goods for joint ventures and self-employed individuals in Jiangsu province in 2002. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).typename(tax rate type)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = _ | select jointventures , selfemployed from ed_retailvalueofscgoods where province = 'Jiangsu' and reportperiod = 'annual' and strftime ( '%Y' , enddate ) = '2002'",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.id",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_taxrate.*",
      "ed_taxrate.valueceiling",
      "ed_taxrate.valuefloor",
      "ed_taxrate.id",
      "ed_taxrate.effectivedate",
      "ed_taxrate.itemname",
      "ed_taxrate.basiscode",
      "ed_taxrate.typename"
    ]
  },
  {
    "question": "Please help Li Gong to check, what are the names of the indices in our \"National Economic Industry Index\"?",
    "sql": "select indexname from ed_producerpiformp where indextype ='National Economic Industry Index';",
    "norm_sql": "select indexname from ed_producerpiformp where indextype = 'National Economic Industry Index'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indextype(index category)",
          "indexname(index name)",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indexvalue(index)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "indextype",
          "indexname",
          "enddate",
          "reportperiod",
          "indexvalue",
          "id"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "id(record identifier)",
          "enddate(deadline)",
          "indexvalue(index value (points))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indexname",
          "id",
          "enddate",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "financedeposits(financial deposit)",
          "id(record identifier)",
          "savingsdeposits(savings deposits)",
          "totalsavings(all deposit accounts)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "currencyname(currency unit code)",
          "sharesandotherinvestments(equity and other investments)"
        ],
        "column_names_original_en": [
          "financedeposits",
          "id",
          "savingsdeposits",
          "totalsavings",
          "trustedandcreditdeposits",
          "currencyname",
          "sharesandotherinvestments"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help Li Gong to check, what are the names of the indices in our \"National Economic Industry Index\"? | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments)",
    "output_sequence": "select _ from _ where _ | select indexname from ed_producerpiformp where indextype = 'National Economic Industry Index'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexvalue",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments"
    ]
  },
  {
    "question": "In the past three years, what are the amounts of industrial value added and total industrial output value in \"All Industrial Enterprises\" in Chongqing City for each \"Annual\" period?",
    "sql": "select industrialvalueadded, industrialoutputvalueap from ed_industryproduction where province = 'Chongqing' and statstandard = 'All Industrial Enterprises' and reportperiod = 'Annual' and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select industrialvalueadded , industrialoutputvalueap from ed_industryproduction where province = 'Chongqing' and statstandard = 'All Industrial Enterprises' and reportperiod = 'Annual' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistics interval)",
          "province(province)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "collectivecomap(collective enterprise (light industry))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "province",
          "statstandard",
          "industrialvalueadded",
          "industrialoutputvalueap",
          "collectivecomap"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "enddate(deadline)",
          "indexvalue(index value)",
          "indextitle(index name)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "id",
          "enddate",
          "indexvalue",
          "indextitle",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "moneyissuance(currency issuance (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))",
          "selfownedmoney(own funds (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))"
        ],
        "column_names_original_en": [
          "moneyissuance",
          "claimtosavingsbanks",
          "claimtootherfinnonfininst",
          "claimtogovernment",
          "otherliability",
          "selfownedmoney",
          "abroadliability"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In the past three years, what are the amounts of industrial value added and total industrial output value in \"All Industrial Enterprises\" in Chongqing City for each \"Annual\" period? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb))",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select industrialvalueadded , industrialoutputvalueap from ed_industryproduction where province = 'Chongqing' and statstandard = 'All Industrial Enterprises' and reportperiod = 'Annual' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.province",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.collectivecomap",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.reportperiod",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.abroadliability"
    ]
  },
  {
    "question": "Please provide the end-of-period balances of domestic loans, short-term loans, and medium-long-term loans in China's financial institutions' credit income and expenditure.",
    "sql": "select domesticloans, shorttermloans, mediumlongtermloans from ed_chinafibalancesheetrmb;",
    "norm_sql": "select domesticloans , shorttermloans , mediumlongtermloans from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "domesticloans((one) domestic loan)",
          "shorttermloans(short-term loan)",
          "mediumlongtermloans(medium-to-long term loans)",
          "overseasloans((two) overseas loans)",
          "moneyincirculation(currency in circulation)",
          "totalloans(various loans)",
          "assetsatifo(asset in international financial institutions)"
        ],
        "column_names_original_en": [
          "domesticloans",
          "shorttermloans",
          "mediumlongtermloans",
          "overseasloans",
          "moneyincirculation",
          "totalloans",
          "assetsatifo"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indextype(index category)",
          "enddate(deadline)",
          "indexname(index name)",
          "id(record identifier)",
          "indexvalue(index)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indextype",
          "enddate",
          "indexname",
          "id",
          "indexvalue",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "hivalueap(heavy industry (in million of rmb))",
          "statstandard(statistical caliber)",
          "mediumcomap(medium-sized enterprise (light industry))",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "enddate(deadline)",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "reportarea(statistical area category)"
        ],
        "column_names_original_en": [
          "hivalueap",
          "statstandard",
          "mediumcomap",
          "stateownedcontrolledcomap",
          "enddate",
          "industrialoutputvalueap",
          "reportarea"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please provide the end-of-period balances of domestic loans, short-term loans, and medium-long-term loans in China's financial institutions' credit income and expenditure. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).reportarea(statistical area category)",
    "output_sequence": "select _ from _ | select domesticloans , shorttermloans , mediumlongtermloans from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.reportperiod",
      "ed_industryproduction.*",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.enddate",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.reportarea"
    ]
  },
  {
    "question": "Do you know the amount data of total assets and total liabilities in the balance sheet of the monetary authority? Please help extract them.",
    "sql": "select totalliability, totalassets from ed_moneyauthoritybs;",
    "norm_sql": "select totalliability , totalassets from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "reservedeposits(reserve deposit (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "moneyissuance(currency issuance (in million of rmb))",
          "totalliability(total liabilities (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reservedeposits",
          "totalassets",
          "moneyissuance",
          "totalliability",
          "governmentsavings",
          "claimtononfinancialinst",
          "id"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "enddate(deadline)",
          "comparetolastmonth(index month-on-month change (points))",
          "indexcode(index code)",
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "id(record identifier)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "enddate",
          "comparetolastmonth",
          "indexcode",
          "reportperiod",
          "indextitle",
          "id",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsonothernfinstitute(claims on non-financial institution)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "id(record identifier)",
          "otherliabilities(other liabilities)",
          "totalliabilities(total liabilities)",
          "claimsongovernment(claims on government (net))",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)"
        ],
        "column_names_original_en": [
          "claimsonothernfinstitute",
          "liabtootherdepositcorp",
          "id",
          "otherliabilities",
          "totalliabilities",
          "claimsongovernment",
          "liabilitiestonfinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Do you know the amount data of total assets and total liabilities in the balance sheet of the monetary authority? Please help extract them. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).indexvalue(index value) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households)",
    "output_sequence": "select _ from _ | select totalliability , totalassets from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.id",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.indexvalue",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.liabilitiestonfinst"
    ]
  },
  {
    "question": "What is the annual local government revenue and local government expenditure in Tianjin?",
    "sql": "select localgovrevenue, localgovexpenditure from ed_financialbalance where province ='Tianjin';",
    "norm_sql": "select localgovrevenue , localgovexpenditure from ed_financialbalance where province = 'Tianjin'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "province(province and city)",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "agriculturetax(agricultural tax (in million of rmb))",
          "gtaxs(various tax revenues growth rate)",
          "salestax(business tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "localgovrevenue",
          "localgovexpenditure",
          "operatingexpensescesh",
          "agriculturetax",
          "gtaxs",
          "salestax"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "enddate(deadline)",
          "currencycode(currency unit)",
          "operatetype(import and export categories)",
          "avgprice(average price)",
          "quantity(quantity)",
          "accuavgprice(cumulative average price)",
          "productname(product name)"
        ],
        "column_names_original_en": [
          "enddate",
          "currencycode",
          "operatetype",
          "avgprice",
          "quantity",
          "accuavgprice",
          "productname"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)",
          "subjectsum(amount (in million of rmb))",
          "reportperiod(statistical period)",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "enddate",
          "yoy",
          "id",
          "subjectsum",
          "reportperiod",
          "subjectname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the annual local government revenue and local government expenditure in Tianjin? | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gtaxs(various tax revenues growth rate) , ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).currencycode(currency unit) , ed_productexportimport(product import and export volume).operatetype(import and export categories) , ed_productexportimport(product import and export volume).avgprice(average price) , ed_productexportimport(product import and export volume).quantity(quantity) , ed_productexportimport(product import and export volume).accuavgprice(cumulative average price) , ed_productexportimport(product import and export volume).productname(product name) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name)",
    "output_sequence": "select _ from _ where _ | select localgovrevenue , localgovexpenditure from ed_financialbalance where province = 'Tianjin'",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.province",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.localgovexpenditure",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.gtaxs",
      "ed_financialbalance.salestax",
      "ed_productexportimport.*",
      "ed_productexportimport.enddate",
      "ed_productexportimport.currencycode",
      "ed_productexportimport.operatetype",
      "ed_productexportimport.avgprice",
      "ed_productexportimport.quantity",
      "ed_productexportimport.accuavgprice",
      "ed_productexportimport.productname",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectname"
    ]
  },
  {
    "question": "I heard that the market has been active in recent years. Please list the quantity of RMB newly added loan amounts at the \"End of Year Accumulated\" as accumulated.",
    "sql": "select enddate, subjectsum from ed_newincreasingloan where reportperiod='End of Year Accumulated';",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'End of Year Accumulated'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "subjectname(indicator name)",
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "subjectsum",
          "subjectname",
          "yoy",
          "id"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "enddate(deadline)",
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "indexvalue(index value (points))"
        ],
        "column_names_original_en": [
          "id",
          "enddate",
          "indexname",
          "reportperiod",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "indextitle(index name)",
          "indexvalue(index value)",
          "reportperiod(data statistical period)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "indextitle",
          "indexvalue",
          "reportperiod",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I heard that the market has been active in recent years. Please list the quantity of RMB newly added loan amounts at the \"End of Year Accumulated\" as accumulated. | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier)",
    "output_sequence": "select _ from _ where _ | select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'End of Year Accumulated'",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexvalue",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.id"
    ]
  },
  {
    "question": "What is the amount of government savings and self-owned funds? Please check in the monetary authority's balance sheet.",
    "sql": "select governmentsavings, selfownedmoney from ed_moneyauthoritybs ;",
    "norm_sql": "select governmentsavings , selfownedmoney from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "governmentsavings(government deposits (in million of rmb))",
          "selfownedmoney(own funds (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "enddate(deadline)",
          "abroadliability(abroad liabilities (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))"
        ],
        "column_names_original_en": [
          "governmentsavings",
          "selfownedmoney",
          "moneyissuance",
          "enddate",
          "abroadliability",
          "otherliability",
          "claimtogovernment"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexvalue(index)",
          "indextype(index category)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "indexname",
          "reportperiod",
          "enddate",
          "indexvalue",
          "indextype",
          "id"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "enterpriseincome(enterprise income (in million of rmb))",
          "expenditurecitymc(urban maintenance and construction tax (in million of rmb))",
          "reportperiod(data statistical period)",
          "centralgovrevenue(central fiscal revenue (in million of yuan))",
          "agriculturetax(agricultural tax (in million of rmb))",
          "nationaldefense(defense expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "gfinancialexpenditure",
          "enterpriseincome",
          "expenditurecitymc",
          "reportperiod",
          "centralgovrevenue",
          "agriculturetax",
          "nationaldefense"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the amount of government savings and self-owned funds? Please check in the monetary authority's balance sheet. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).selfownedmoney(own funds (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).enterpriseincome(enterprise income (in million of rmb)) , ed_financialbalance(government revenue and expenditure).expenditurecitymc(urban maintenance and construction tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).centralgovrevenue(central fiscal revenue (in million of yuan)) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb))",
    "output_sequence": "select _ from _ | select governmentsavings , selfownedmoney from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.selfownedmoney",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.id",
      "ed_financialbalance.*",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.enterpriseincome",
      "ed_financialbalance.expenditurecitymc",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.centralgovrevenue",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.nationaldefense"
    ]
  },
  {
    "question": "Please show the amount of bond issuance and paid-in capital in China before the year 2000. These records can be extracted from the balance sheets of other depositary corporate assets. Please remember to include the time.",
    "sql": "select enddate, bondissue, paidincapital from ed_otherdepositorycorpbs where strftime('%Y', enddate)<'2000';",
    "norm_sql": "select enddate , bondissue , paidincapital from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) < '2000'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) < _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "bondissue(bond issuance)",
          "paidincapital(paid-up capital)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "demanddeposits(current deposits for enterprises)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "depositswithcentralbank(reserve deposit)"
        ],
        "column_names_original_en": [
          "enddate",
          "bondissue",
          "paidincapital",
          "depositsincludedinm2",
          "demanddeposits",
          "liabilitiestocentralbank",
          "depositswithcentralbank"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "entrustedloans(trust loan (in 100 million of rmb))",
          "enddate(deadline)",
          "id(record identifier)",
          "reportarea(statistical region category)",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))",
          "creditloans(trust loan (in 100 million rmb))",
          "corporatebonds(corporate bonds (in hundred million rmb))"
        ],
        "column_names_original_en": [
          "entrustedloans",
          "enddate",
          "id",
          "reportarea",
          "undiscountedbacceptances",
          "creditloans",
          "corporatebonds"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)",
          "enddate(deadline)",
          "indextype(index category)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indexname",
          "indexvalue",
          "id",
          "enddate",
          "indextype",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please show the amount of bond issuance and paid-in capital in China before the year 2000. These records can be extracted from the balance sheets of other depositary corporate assets. Please remember to include the time. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).entrustedloans(trust loan (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).reportarea(statistical region category) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).corporatebonds(corporate bonds (in hundred million rmb)) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period)",
    "output_sequence": "select _ from _ where strftime ( _ ) < _ | select enddate , bondissue , paidincapital from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) < '2000'",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_socialfinancing.*",
      "ed_socialfinancing.entrustedloans",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.id",
      "ed_socialfinancing.reportarea",
      "ed_socialfinancing.undiscountedbacceptances",
      "ed_socialfinancing.creditloans",
      "ed_socialfinancing.corporatebonds",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.reportperiod"
    ]
  },
  {
    "question": "Please list the maximum and minimum index values for the \"Pharmaceutical Manufacturing Industry\" in the \"same month last year\" statistical period of the previous year.",
    "sql": "select max(indexvalue), min(indexvalue) from ed_producerpiformp where indexname = 'Pharmaceutical Manufacturing Industry' and reportperiod = 'same month last year' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-2 year'));",
    "norm_sql": "select max ( indexvalue ) , min ( indexvalue ) from ed_producerpiformp where indexname = 'Pharmaceutical Manufacturing Industry' and reportperiod = 'same month last year' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "sql_skeleton": "select max ( _ ) , min ( _ ) from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indexname(index name)",
          "indexvalue(index)",
          "indextype(index category)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "indexname",
          "indexvalue",
          "indextype",
          "id"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "enddate(deadline)",
          "reportarea(statistical category of region)",
          "id(record identifier)",
          "province(province and city)",
          "othersunits(other units)",
          "collectiveunits(collective unit)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportarea",
          "id",
          "province",
          "othersunits",
          "collectiveunits",
          "retailvalueofscgoods"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "financialbonds(financial bonds)",
          "othersavings(other deposits)",
          "corporatesavings(unit deposit/corporate deposit)",
          "totalsavings(all deposit accounts)",
          "overseasloans((two) overseas loans)",
          "totalloans(various loans)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "financialbonds",
          "othersavings",
          "corporatesavings",
          "totalsavings",
          "overseasloans",
          "totalloans",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the maximum and minimum index values for the \"Pharmaceutical Manufacturing Industry\" in the \"same month last year\" statistical period of the previous year. | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).othersavings(other deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline)",
    "output_sequence": "select max ( _ ) , min ( _ ) from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) | select max ( indexvalue ) , min ( indexvalue ) from ed_producerpiformp where indexname = 'Pharmaceutical Manufacturing Industry' and reportperiod = 'same month last year' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-2 year' ) )",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.id",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.id",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.othersavings",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.enddate"
    ]
  },
  {
    "question": "Please help to find the maximum and minimum values of the \"annual\" total retail sales volume of consumer goods in Shanghai.",
    "sql": "select max(retailvalueofscgoods), min(retailvalueofscgoods) from ed_retailvalueofscgoods where province='Shanghai' and reportperiod ='annual';",
    "norm_sql": "select max ( retailvalueofscgoods ) , min ( retailvalueofscgoods ) from ed_retailvalueofscgoods where province = 'Shanghai' and reportperiod = 'annual'",
    "sql_skeleton": "select max ( _ ) , min ( _ ) from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "province(province and city)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "collectiveunits(collective unit)",
          "enddate(deadline)",
          "othersindustry(other industries)",
          "jointventures(joint operating unit)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "province",
          "retailvalueofscgoods",
          "collectiveunits",
          "enddate",
          "othersindustry",
          "jointventures"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "nationaldefense(defense expenditure (in million of rmb))",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "gsupportunderdevelopedarea(policy subsidy expenditure growth rate)",
          "individualincometax(personal income tax (in million of rmb))",
          "agriculturetax(agricultural tax (in million of rmb))",
          "gsocialsecurity(social security expenditure growth rate)",
          "salestax(business tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "nationaldefense",
          "gfinancialrevenue",
          "gsupportunderdevelopedarea",
          "individualincometax",
          "agriculturetax",
          "gsocialsecurity",
          "salestax"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "secumarket(securities market)",
          "effectivedate(effective date)",
          "maturity(repurchase period)",
          "typename(tax rate type)",
          "ratioceiling(maximum ratio (%))",
          "basiscode(billing baseline)",
          "valuefloor(minimum value/starting point (rmb))"
        ],
        "column_names_original_en": [
          "secumarket",
          "effectivedate",
          "maturity",
          "typename",
          "ratioceiling",
          "basiscode",
          "valuefloor"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help to find the maximum and minimum values of the \"annual\" total retail sales volume of consumer goods in Shanghai. | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).gsupportunderdevelopedarea(policy subsidy expenditure growth rate) , ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gsocialsecurity(social security expenditure growth rate) , ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb))",
    "output_sequence": "select max ( _ ) , min ( _ ) from _ where _ | select max ( retailvalueofscgoods ) , min ( retailvalueofscgoods ) from ed_retailvalueofscgoods where province = 'Shanghai' and reportperiod = 'annual'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.jointventures",
      "ed_financialbalance.*",
      "ed_financialbalance.nationaldefense",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.gsupportunderdevelopedarea",
      "ed_financialbalance.individualincometax",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.gsocialsecurity",
      "ed_financialbalance.salestax",
      "ed_taxrate.*",
      "ed_taxrate.secumarket",
      "ed_taxrate.effectivedate",
      "ed_taxrate.maturity",
      "ed_taxrate.typename",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.basiscode",
      "ed_taxrate.valuefloor"
    ]
  },
  {
    "question": "Since 2000, what are the records of our total assets exceeding 50 million in other depository company balance sheets? List the time and the total asset amount.",
    "sql": "select enddate, totalassets from ed_otherdepositorycorpbs where strftime('%Y', enddate) = '2000' and totalassets > 50000000;",
    "norm_sql": "select enddate , totalassets from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = '2000' and totalassets > 50000000",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _ and _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "qoqcpifamilyequipmentservice(household equipment and services month-on-month)",
          "qoqcpihousing(residential month-to-month)",
          "yoycpicloth(clothing year-on-year)",
          "yoycpifood(food year-on-year)",
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)",
          "yoycpi(resident consumer price index (year-on-year))",
          "cumcpitobacco(cumulative average of tobacco, alcohol, and supplies)"
        ],
        "column_names_original_en": [
          "qoqcpifamilyequipmentservice",
          "qoqcpihousing",
          "yoycpicloth",
          "yoycpifood",
          "yoycpifamilyequipmentservice",
          "yoycpi",
          "cumcpitobacco"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "id(record identifier)",
          "indextitle(index name)",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "id",
          "indextitle",
          "enddate",
          "reportperiod",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "enddate(deadline)",
          "totalassets(total assets)",
          "savingdeposits(resident savings deposits)",
          "depositswithcentralbank(reserve deposit)",
          "cashinvault(cash on hand)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "otherassets(other assets)"
        ],
        "column_names_original_en": [
          "enddate",
          "totalassets",
          "savingdeposits",
          "depositswithcentralbank",
          "cashinvault",
          "claimsonotherdepositcorp",
          "otherassets"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Since 2000, what are the records of our total assets exceeding 50 million in other depository company balance sheets? List the time and the total asset amount. | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).qoqcpifamilyequipmentservice(household equipment and services month-on-month) , ed_consumerpriceindex(consumer price index).qoqcpihousing(residential month-to-month) , ed_consumerpriceindex(consumer price index).yoycpicloth(clothing year-on-year) , ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) , ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year) , ed_consumerpriceindex(consumer price index).yoycpi(resident consumer price index (year-on-year)) , ed_consumerpriceindex(consumer price index).cumcpitobacco(cumulative average of tobacco, alcohol, and supplies) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).savingdeposits(resident savings deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets)",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ and _ | select enddate , totalassets from ed_otherdepositorycorpbs where strftime ( '%Y' , enddate ) = '2000' and totalassets > 50000000",
    "tc_original": [
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.qoqcpifamilyequipmentservice",
      "ed_consumerpriceindex.qoqcpihousing",
      "ed_consumerpriceindex.yoycpicloth",
      "ed_consumerpriceindex.yoycpifood",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice",
      "ed_consumerpriceindex.yoycpi",
      "ed_consumerpriceindex.cumcpitobacco",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indexvalue",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.savingdeposits",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.otherassets"
    ]
  },
  {
    "question": "What is the annual amount of \"end of period cumulative\" loan additions in the past three years?",
    "sql": "select enddate, subjectsum from ed_newincreasingloan where reportperiod ='end of period cumulative' and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-3 year'));",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'end of period cumulative' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "id(record identifier)",
          "enddate(deadline)",
          "subjectname(indicator name)",
          "subjectsum(amount (in million of rmb))",
          "reportperiod(statistical period)",
          "yoy(year-on-year increase or decrease (%))"
        ],
        "column_names_original_en": [
          "id",
          "enddate",
          "subjectname",
          "subjectsum",
          "reportperiod",
          "yoy"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "drrtype(reserve requirement ratio category)",
          "id(record identifier)",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "drrtype",
          "id",
          "ratiofloor",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "comparetolastmonth(index month-on-month change (points))",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "reportarea(statistical region category)",
          "indexcode(index code)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "comparetolastmonth",
          "enddate",
          "reportperiod",
          "id",
          "reportarea",
          "indexcode",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the annual amount of \"end of period cumulative\" loan additions in the past three years? | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).indexvalue(index value)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'end of period cumulative' and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-3 year' ) )",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.yoy",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.effectivedate",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.indexvalue"
    ]
  },
  {
    "question": "I heard that there is a lot of data in our central bank's balance sheet, so let's display the foreign liabilities and government deposits,",
    "sql": "select abroadliability, governmentsavings from ed_moneyauthoritybs;",
    "norm_sql": "select abroadliability , governmentsavings from ed_moneyauthoritybs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "abroadliability(abroad liabilities (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "otherforeignassets(other foreign assets (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "reservedeposits(reserve deposit (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))"
        ],
        "column_names_original_en": [
          "abroadliability",
          "governmentsavings",
          "claimtosavingsbanks",
          "otherforeignassets",
          "moneyissuance",
          "reservedeposits",
          "claimtootherfinnonfininst"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "reportarea(statistical category of the region)",
          "province(province and city)",
          "enddate(deadline)",
          "id(record identifier)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "exvalueofgoods",
          "reportarea",
          "province",
          "enddate",
          "id",
          "eximvalueofgoods",
          "gyoyofexvaluegoods"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpifood(food year-on-year)",
          "yoycpitobacco(tobacco, alcohol, and supplies year-on-year)",
          "cumcpihousing(accumulated average of residence)",
          "yoycpicloth(clothing year-on-year)",
          "qoqcpifood(food price month-on-month)",
          "cumcpimedicare(cumulative average of healthcare and personal care products)",
          "qoqcpitobacco(tobacco, alcohol, and supplies month-on-month)"
        ],
        "column_names_original_en": [
          "yoycpifood",
          "yoycpitobacco",
          "cumcpihousing",
          "yoycpicloth",
          "qoqcpifood",
          "cumcpimedicare",
          "qoqcpitobacco"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I heard that there is a lot of data in our central bank's balance sheet, so let's display the foreign liabilities and government deposits, | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherforeignassets(other foreign assets (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) , ed_consumerpriceindex(consumer price index).yoycpitobacco(tobacco, alcohol, and supplies year-on-year) , ed_consumerpriceindex(consumer price index).cumcpihousing(accumulated average of residence) , ed_consumerpriceindex(consumer price index).yoycpicloth(clothing year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpifood(food price month-on-month) , ed_consumerpriceindex(consumer price index).cumcpimedicare(cumulative average of healthcare and personal care products) , ed_consumerpriceindex(consumer price index).qoqcpitobacco(tobacco, alcohol, and supplies month-on-month)",
    "output_sequence": "select _ from _ | select abroadliability , governmentsavings from ed_moneyauthoritybs",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.otherforeignassets",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_exportimport.*",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.reportarea",
      "ed_exportimport.province",
      "ed_exportimport.enddate",
      "ed_exportimport.id",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpifood",
      "ed_consumerpriceindex.yoycpitobacco",
      "ed_consumerpriceindex.cumcpihousing",
      "ed_consumerpriceindex.yoycpicloth",
      "ed_consumerpriceindex.qoqcpifood",
      "ed_consumerpriceindex.cumcpimedicare",
      "ed_consumerpriceindex.qoqcpitobacco"
    ]
  },
  {
    "question": "Since 1978, what are the data on China's central government revenues exceeding 1 billion and central government expenditures exceeding 100 million, and list the time along with the amounts of central government revenues and central government expenditures?",
    "sql": "select enddate, centralgovrevenue, centralgovexpenditure from ed_financialbalance where centralgovrevenue > 1000 and centralgovexpenditure > 10 and strftime('%Y', enddate) >= '1978';",
    "norm_sql": "select enddate , centralgovrevenue , centralgovexpenditure from ed_financialbalance where centralgovrevenue > 1000 and centralgovexpenditure > 10 and strftime ( '%Y' , enddate ) >= '1978'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) >= _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "centralgovrevenue(central fiscal revenue (in million of yuan))",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))",
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "reportperiod(data statistical period)",
          "genterpriseincome(enterprise revenue growth rate)",
          "individualincometax(personal income tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "centralgovrevenue",
          "centralgovexpenditure",
          "gfinancialexpenditure",
          "reportperiod",
          "genterpriseincome",
          "individualincometax"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "indexvalue(index value)",
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "reportperiod",
          "indextitle",
          "id",
          "enddate"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "reportarea(statistical region category)",
          "id(record identifier)",
          "indextitle(index name)",
          "indexvalue(index value)",
          "reportperiod(data statistical period)",
          "indexcode(index code)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportarea",
          "id",
          "indextitle",
          "indexvalue",
          "reportperiod",
          "indexcode",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Since 1978, what are the data on China's central government revenues exceeding 1 billion and central government expenditures exceeding 100 million, and list the time along with the amounts of central government revenues and central government expenditures? | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).centralgovrevenue(central fiscal revenue (in million of yuan)) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).genterpriseincome(enterprise revenue growth rate) , ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).enddate(deadline)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) >= _ | select enddate , centralgovrevenue , centralgovexpenditure from ed_financialbalance where centralgovrevenue > 1000 and centralgovexpenditure > 10 and strftime ( '%Y' , enddate ) >= '1978'",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.centralgovrevenue",
      "ed_financialbalance.centralgovexpenditure",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.genterpriseincome",
      "ed_financialbalance.individualincometax",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.enddate",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.enddate"
    ]
  },
  {
    "question": "What is the average value of foreign currency deposits in China over the years?",
    "sql": "select avg(fcdeposits) from ed_chinamoneyandbanking;",
    "norm_sql": "select avg ( fcdeposits ) from ed_chinamoneyandbanking",
    "sql_skeleton": "select avg ( _ ) from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "fcdeposits(foreign currency deposit.)",
          "bonds(bonds)",
          "claimstogov(claims on the government (net))",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "domesticloans(domestic credit)",
          "netabroadassets(foreign net assets)",
          "quasimoney(quasi-currency)"
        ],
        "column_names_original_en": [
          "fcdeposits",
          "bonds",
          "claimstogov",
          "claimstootherinst",
          "domesticloans",
          "netabroadassets",
          "quasimoney"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enterpriseincometax(enterprise income tax (in million of rmb))",
          "gtaxs(various tax revenues growth rate)",
          "centralgovexpenditure(central fiscal expenditure (in million of rmb))",
          "gsupportunderdevelopedarea(policy subsidy expenditure growth rate)",
          "genterpriseincome(enterprise revenue growth rate)",
          "id(record identifier)",
          "reportarea(statistical area category)"
        ],
        "column_names_original_en": [
          "enterpriseincometax",
          "gtaxs",
          "centralgovexpenditure",
          "gsupportunderdevelopedarea",
          "genterpriseincome",
          "id",
          "reportarea"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "id(record identifier)",
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectname(indicator name)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))"
        ],
        "column_names_original_en": [
          "id",
          "enddate",
          "reportperiod",
          "subjectname",
          "subjectsum",
          "yoy"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the average value of foreign currency deposits in China over the years? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gtaxs(various tax revenues growth rate) , ed_financialbalance(government revenue and expenditure).centralgovexpenditure(central fiscal expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gsupportunderdevelopedarea(policy subsidy expenditure growth rate) , ed_financialbalance(government revenue and expenditure).genterpriseincome(enterprise revenue growth rate) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%))",
    "output_sequence": "select avg ( _ ) from _ | select avg ( fcdeposits ) from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_financialbalance.*",
      "ed_financialbalance.enterpriseincometax",
      "ed_financialbalance.gtaxs",
      "ed_financialbalance.centralgovexpenditure",
      "ed_financialbalance.gsupportunderdevelopedarea",
      "ed_financialbalance.genterpriseincome",
      "ed_financialbalance.id",
      "ed_financialbalance.reportarea",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy"
    ]
  },
  {
    "question": "Look up the records of cash inventory in our other depository company's balance sheet.",
    "sql": "select cashinvault from ed_otherdepositorycorpbs;",
    "norm_sql": "select cashinvault from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "cashinvault(cash on hand)",
          "foreignassets(foreign net assets)",
          "claimsongovernment(claims on government (net))",
          "otherliabilities(other liabilities)",
          "claimsonotherresidentsec(claims on other resident sectors)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "depositswithcentralbank(reserve deposit)"
        ],
        "column_names_original_en": [
          "cashinvault",
          "foreignassets",
          "claimsongovernment",
          "otherliabilities",
          "claimsonotherresidentsec",
          "depositsincludedinm2",
          "depositswithcentralbank"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "bondissuance(bond issuance (in million of rmb))",
          "reservedeposits(reserve deposit (in million of rmb))",
          "totalassets(total assets (in million of rmb).)",
          "id(record identifier)",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))"
        ],
        "column_names_original_en": [
          "bondissuance",
          "reservedeposits",
          "totalassets",
          "id",
          "claimtogovernment",
          "claimtootherfinnonfininst",
          "nonfinancialorgdeposits"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "id(record identifier)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "gdp(gross domestic product (in million of rmb).)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))"
        ],
        "column_names_original_en": [
          "id",
          "secondindustrygdp",
          "gdp",
          "primaryindustrygdp",
          "gdpgrowthyoy",
          "thirdindustrygdp",
          "gdppercapita"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Look up the records of cash inventory in our other depository company's balance sheet. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person))",
    "output_sequence": "select _ from _ | select cashinvault from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.gdppercapita"
    ]
  },
  {
    "question": "What is the total amount of import and export data in China in 2010?",
    "sql": "select eximvalueofgoods from ed_exportimport where strftime('%Y', enddate)='2010';",
    "norm_sql": "select eximvalueofgoods from ed_exportimport where strftime ( '%Y' , enddate ) = '2010'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "sovereigntycountry(the subject country)",
          "reportarea(statistical category of the region)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "province(province and city)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "sovereigntycountry",
          "reportarea",
          "eximvalueofgoods",
          "gyoyofexvaluegoods",
          "province",
          "imvalueofgoods",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "fcdeposits(foreign currency deposit.)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "claimstogov(claims on the government (net))",
          "quasimoney(quasi-currency)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "capitalreceived(paid-up capital)"
        ],
        "column_names_original_en": [
          "fcdeposits",
          "claimstononfinancialinst",
          "moneyandquasimoney",
          "claimstogov",
          "quasimoney",
          "claimstootherinst",
          "capitalreceived"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "id(record identifier)",
          "agriculturaldeposits(agricultural deposit)",
          "orgdeposits(government and institutional deposits)",
          "savingsdeposits(savings deposits)",
          "shorttermloans(short-term loan)",
          "domesticloans((one) domestic loan)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "id",
          "agriculturaldeposits",
          "orgdeposits",
          "savingsdeposits",
          "shorttermloans",
          "domesticloans",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the total amount of import and export data in China in 2010? | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).enddate(deadline) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).orgdeposits(government and institutional deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline)",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select eximvalueofgoods from ed_exportimport where strftime ( '%Y' , enddate ) = '2010'",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.reportarea",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.province",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.enddate",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.orgdeposits",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.enddate"
    ]
  },
  {
    "question": "List the annual \"End-of-period cumulative\" RMB new loan amount and its year-on-year change data.",
    "sql": "select enddate, subjectsum, yoy from ed_newincreasingloan where reportperiod = 'End-of-period cumulative';",
    "norm_sql": "select enddate , subjectsum , yoy from ed_newincreasingloan where reportperiod = 'End-of-period cumulative'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "reservedeposits(deposit of reserve funds)",
          "totalsavings(all deposit accounts)",
          "agriculturaldeposits(agricultural deposit)",
          "domesticloans((one) domestic loan)",
          "id(record identifier)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "moneyincirculation(currency in circulation)"
        ],
        "column_names_original_en": [
          "reservedeposits",
          "totalsavings",
          "agriculturaldeposits",
          "domesticloans",
          "id",
          "trustedandcreditdeposits",
          "moneyincirculation"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "subjectname(indicator name)",
          "reportperiod(statistical period)",
          "id(record identifier)",
          "subjectsum(amount (in million of rmb))",
          "enddate(deadline)",
          "yoy(year-on-year increase or decrease (%))"
        ],
        "column_names_original_en": [
          "subjectname",
          "reportperiod",
          "id",
          "subjectsum",
          "enddate",
          "yoy"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "comparetolastmonth(index month-on-month change (points))",
          "indexcode(index code)",
          "indexvalue(index value)",
          "indextitle(index name)",
          "enddate(deadline)",
          "reportarea(statistical region category)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "comparetolastmonth",
          "indexcode",
          "indexvalue",
          "indextitle",
          "enddate",
          "reportarea"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "List the annual \"End-of-period cumulative\" RMB new loan amount and its year-on-year change data. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category)",
    "output_sequence": "select _ from _ where _ | select enddate , subjectsum , yoy from ed_newincreasingloan where reportperiod = 'End-of-period cumulative'",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.yoy",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.reportarea"
    ]
  },
  {
    "question": "What is the amount of claims on other depositary corporations and the amount of liabilities to other depositary corporations respectively? Please refer to the balance sheet of other depositary corporations for the information.",
    "sql": "select claimsonotherdepositcorp, liabtootherdepositcorp from ed_otherdepositorycorpbs;",
    "norm_sql": "select claimsonotherdepositcorp , liabtootherdepositcorp from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "totalliabilities(total liabilities)",
          "transferabledeposits(transferable deposits)",
          "reserveassets(reserve assets)",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "otherliabilities(other liabilities)"
        ],
        "column_names_original_en": [
          "claimsonotherdepositcorp",
          "liabtootherdepositcorp",
          "totalliabilities",
          "transferabledeposits",
          "reserveassets",
          "liabilitiestonfinst",
          "otherliabilities"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "subjectsum(amount (in million of rmb))",
          "enddate(deadline)",
          "subjectname(indicator name)",
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))",
          "reportperiod(statistical period)"
        ],
        "column_names_original_en": [
          "subjectsum",
          "enddate",
          "subjectname",
          "id",
          "yoy",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "id(record identifier)",
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "indexvalue(index)",
          "indextype(index category)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "id",
          "indexname",
          "reportperiod",
          "indexvalue",
          "indextype",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the amount of claims on other depositary corporations and the amount of liabilities to other depositary corporations respectively? Please refer to the balance sheet of other depositary corporations for the information. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).enddate(deadline)",
    "output_sequence": "select _ from _ | select claimsonotherdepositcorp , liabtootherdepositcorp from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.reportperiod",
      "ed_producerpiformp.*",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.enddate"
    ]
  },
  {
    "question": "Xiao Li, what are the records of \"annual\" industrial value added exceeding 1 billion in the \"entire industrial enterprises\" in Beijing over the past 10 years? Show the time and industrial value added fields.",
    "sql": "select enddate, industrialvalueadded from ed_industryproduction where province = 'Beijing' and statstandard = 'entire industrial enterprises' and reportperiod = 'annual' and industrialvalueadded > 100 and strftime('%Y', enddate) > strftime('%Y', DATE('now', '-10 year'));",
    "norm_sql": "select enddate , industrialvalueadded from ed_industryproduction where province = 'Beijing' and statstandard = 'entire industrial enterprises' and reportperiod = 'annual' and industrialvalueadded > 100 and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "industrialvalueadded(industrial added value (in million of rmb))",
          "reportarea(statistical area category)",
          "statstandard(statistical caliber)",
          "hivalueap(heavy industry (in million of rmb))",
          "province(province)",
          "reportperiod(data statistics interval)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "industrialvalueadded",
          "reportarea",
          "statstandard",
          "hivalueap",
          "province",
          "reportperiod",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "id(record identifier)",
          "gdp(gross domestic product (in million of rmb).)",
          "enddate(deadline)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "primaryindustrygdp",
          "id",
          "gdp",
          "enddate",
          "gdppercapita",
          "gdpgrowthyoy",
          "province"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indexvalue(index)",
          "indextype(index category)",
          "id(record identifier)",
          "enddate(deadline)",
          "indexname(index name)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "indextype",
          "id",
          "enddate",
          "indexname",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Xiao Li, what are the records of \"annual\" industrial value added exceeding 1 billion in the \"entire industrial enterprises\" in Beijing over the past 10 years? Show the time and industrial value added fields. | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).enddate(deadline) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).province(province and city) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) > strftime ( _ , date ( _ ) ) | select enddate , industrialvalueadded from ed_industryproduction where province = 'Beijing' and statstandard = 'entire industrial enterprises' and reportperiod = 'annual' and industrialvalueadded > 100 and strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-10 year' ) )",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.province",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.enddate",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.province",
      "ed_producerpiformp.*",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.reportperiod"
    ]
  },
  {
    "question": "I want to know the data of liabilities to other depositary companies in the balance sheet of other depositary companies.",
    "sql": "select liabtootherdepositcorp from ed_otherdepositorycorpbs;",
    "norm_sql": "select liabtootherdepositcorp from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "foreignassets(foreign net assets)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "claimsoncentralbank(claims on central bank)",
          "enddate(deadline)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "claimsonotherresidentsec(claims on other resident sectors)"
        ],
        "column_names_original_en": [
          "liabtootherdepositcorp",
          "foreignassets",
          "claimsonotherfinstitute",
          "claimsoncentralbank",
          "enddate",
          "depositsincludedinm2",
          "claimsonotherresidentsec"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "minitypecomap(small-scale enterprise (light industry))",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "largecomap(large-scale enterprise (light industry))",
          "collectivecomap(collective enterprise (light industry))",
          "enddate(deadline)",
          "province(province)"
        ],
        "column_names_original_en": [
          "stateownedcontrolledcomap",
          "minitypecomap",
          "industrialvalueadded",
          "largecomap",
          "collectivecomap",
          "enddate",
          "province"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "valuefloor(minimum value/starting point (rmb))",
          "secumarket(securities market)",
          "itemname(tax rate items)",
          "basiscode(billing baseline)",
          "maturity(repurchase period)",
          "ratioceiling(maximum ratio (%))",
          "valueceiling(maximum value (rmb))"
        ],
        "column_names_original_en": [
          "valuefloor",
          "secumarket",
          "itemname",
          "basiscode",
          "maturity",
          "ratioceiling",
          "valueceiling"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the data of liabilities to other depositary companies in the balance sheet of other depositary companies. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).province(province) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb))",
    "output_sequence": "select _ from _ | select liabtootherdepositcorp from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_industryproduction.*",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.minitypecomap",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.collectivecomap",
      "ed_industryproduction.enddate",
      "ed_industryproduction.province",
      "ed_taxrate.*",
      "ed_taxrate.valuefloor",
      "ed_taxrate.secumarket",
      "ed_taxrate.itemname",
      "ed_taxrate.basiscode",
      "ed_taxrate.maturity",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valueceiling"
    ]
  },
  {
    "question": "How has the growth rate of fiscal revenue been over the years?",
    "sql": "select gfinancialrevenue from ed_financialbalance;",
    "norm_sql": "select gfinancialrevenue from ed_financialbalance",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb))",
          "totalliability(total liabilities (in million of rmb))",
          "forex(foreign exchange (in million of rmb))",
          "otherliability(other liabilities (in million of rmb))",
          "nonfinancialorgdeposits(non-financial institution deposits (in million of rmb))",
          "claimtogovernment(claims on the government (in million of rmb))",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))"
        ],
        "column_names_original_en": [
          "claimtononfinancialinst",
          "totalliability",
          "forex",
          "otherliability",
          "nonfinancialorgdeposits",
          "claimtogovernment",
          "claimtosavingsbanks"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "gfinancialrevenue(fiscal revenue growth rate)",
          "gsupportunderdevelopedarea(policy subsidy expenditure growth rate)",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "reportarea(statistical area category)",
          "province(province and city)",
          "supportunderdevelopedarea(policy subsidy expenditure (in million of rmb))",
          "socialsecurity(social security expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "gfinancialrevenue",
          "gsupportunderdevelopedarea",
          "operatingexpensescesh",
          "reportarea",
          "province",
          "supportunderdevelopedarea",
          "socialsecurity"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "demanddeposits(current deposits for enterprises)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "claimsonotherresidentsec(claims on other resident sectors)",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "bondissue(bond issuance)",
          "totalassets(total assets)"
        ],
        "column_names_original_en": [
          "demanddeposits",
          "liabilitiestocentralbank",
          "liabtootherdepositcorp",
          "claimsonotherresidentsec",
          "liabilitiestonfinst",
          "bondissue",
          "totalassets"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "How has the growth rate of fiscal revenue been over the years? | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).claimtononfinancialinst(claims on the non-financial sector creditor's rights (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).nonfinancialorgdeposits(non-financial institution deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtogovernment(claims on the government (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).gsupportunderdevelopedarea(policy subsidy expenditure growth rate) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).supportunderdevelopedarea(policy subsidy expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).demanddeposits(current deposits for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherresidentsec(claims on other resident sectors) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets)",
    "output_sequence": "select _ from _ | select gfinancialrevenue from ed_financialbalance",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.claimtononfinancialinst",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.forex",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.nonfinancialorgdeposits",
      "ed_moneyauthoritybs.claimtogovernment",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_financialbalance.*",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.gsupportunderdevelopedarea",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.province",
      "ed_financialbalance.supportunderdevelopedarea",
      "ed_financialbalance.socialsecurity",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.demanddeposits",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.claimsonotherresidentsec",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.totalassets"
    ]
  },
  {
    "question": "I want to know the \"end-of-period accumulated\" industrial output value of \"national\" \"state-owned and above-scale industrial enterprises\".",
    "sql": "select enddate, industrialoutputvalueap from ed_industryproduction where reportarea ='national' and statstandard ='state-owned and above-scale industrial enterprises' and reportperiod ='end-of-period accumulated';",
    "norm_sql": "select enddate , industrialoutputvalueap from ed_industryproduction where reportarea = 'national' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'end-of-period accumulated'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "basiscode(billing baseline)",
          "effectivedate(effective date)",
          "itemname(tax rate items)",
          "secumarket(securities market)",
          "valueceiling(maximum value (rmb))",
          "valuefloor(minimum value/starting point (rmb))",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "basiscode",
          "effectivedate",
          "itemname",
          "secumarket",
          "valueceiling",
          "valuefloor",
          "ratiofloor"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "statstandard(statistical caliber)",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "mediumcomap(medium-sized enterprise (light industry))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportarea",
          "reportperiod",
          "statstandard",
          "industrialoutputvalueap",
          "industrialvalueadded",
          "mediumcomap"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "ratioceiling(maximum ratio (%))",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)",
          "id(record identifier)",
          "drrtype(reserve requirement ratio category)"
        ],
        "column_names_original_en": [
          "ratioceiling",
          "ratiofloor",
          "effectivedate",
          "id",
          "drrtype"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the \"end-of-period accumulated\" industrial output value of \"national\" \"state-owned and above-scale industrial enterprises\". | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category)",
    "output_sequence": "select _ from _ where _ | select enddate , industrialoutputvalueap from ed_industryproduction where reportarea = 'national' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'end-of-period accumulated'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.basiscode",
      "ed_taxrate.effectivedate",
      "ed_taxrate.itemname",
      "ed_taxrate.secumarket",
      "ed_taxrate.valueceiling",
      "ed_taxrate.valuefloor",
      "ed_taxrate.ratiofloor",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.mediumcomap",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.drrtype"
    ]
  },
  {
    "question": "Search for the amounts of fiscal deposits, savings deposits, and agricultural deposits in the financial institution's balance sheet of China.",
    "sql": "select financedeposits, savingsdeposits, agriculturaldeposits from ed_chinafibalancesheetrmb;",
    "norm_sql": "select financedeposits , savingsdeposits , agriculturaldeposits from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "savingsdeposits(savings deposits)",
          "mediumlongtermloans(medium-to-long term loans)",
          "equityandotherinvestment(securities and investments)",
          "agriculturaldeposits(agricultural deposit)",
          "financedeposits(financial deposit)",
          "datatype(data type code)",
          "currencyname(currency unit code)"
        ],
        "column_names_original_en": [
          "savingsdeposits",
          "mediumlongtermloans",
          "equityandotherinvestment",
          "agriculturaldeposits",
          "financedeposits",
          "datatype",
          "currencyname"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "centralbankbonds(central bank bonds)",
          "claimstogov(claims on the government (net))",
          "money1(currency (narrow money m1))",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "centralbankbonds",
          "claimstogov",
          "money1",
          "claimstootherinst",
          "claimstononfinancialinst",
          "id",
          "enddate"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "effectivedate(effective date)",
          "ratiofloor(minimum ratio (%))",
          "drrtype(reserve requirement ratio category)",
          "id(record identifier)",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "effectivedate",
          "ratiofloor",
          "drrtype",
          "id",
          "ratioceiling"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Search for the amounts of fiscal deposits, savings deposits, and agricultural deposits in the financial institution's balance sheet of China. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).datatype(data type code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%))",
    "output_sequence": "select _ from _ | select financedeposits , savingsdeposits , agriculturaldeposits from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.datatype",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.enddate",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratioceiling"
    ]
  },
  {
    "question": "Please help Director Wang check the annual defense expenditure of Liaoning Province.",
    "sql": "select nationaldefense from ed_financialbalance where province = 'Liaoning';",
    "norm_sql": "select nationaldefense from ed_financialbalance where province = 'Liaoning'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "id(record identifier)",
          "indexname(index name)",
          "indexvalue(index value (points))",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "id",
          "indexname",
          "indexvalue",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "nationaldefense(defense expenditure (in million of rmb))",
          "gfinancialrevenue(fiscal revenue growth rate)",
          "gfinancialexpenditure(fiscal expenditure growth rate)",
          "reportarea(statistical area category)",
          "reportperiod(data statistical period)",
          "province(province and city)",
          "salestax(business tax (in million of rmb))"
        ],
        "column_names_original_en": [
          "nationaldefense",
          "gfinancialrevenue",
          "gfinancialexpenditure",
          "reportarea",
          "reportperiod",
          "province",
          "salestax"
        ]
      },
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexvalue(index value)",
          "indextitle(index name)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "enddate",
          "indexvalue",
          "indextitle",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help Director Wang check the annual defense expenditure of Liaoning Province. | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gfinancialrevenue(fiscal revenue growth rate) , ed_financialbalance(government revenue and expenditure).gfinancialexpenditure(fiscal expenditure growth rate) , ed_financialbalance(government revenue and expenditure).reportarea(statistical area category) , ed_financialbalance(government revenue and expenditure).reportperiod(data statistical period) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).salestax(business tax (in million of rmb)) | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier)",
    "output_sequence": "select _ from _ where _ | select nationaldefense from ed_financialbalance where province = 'Liaoning'",
    "tc_original": [
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.reportperiod",
      "ed_financialbalance.*",
      "ed_financialbalance.nationaldefense",
      "ed_financialbalance.gfinancialrevenue",
      "ed_financialbalance.gfinancialexpenditure",
      "ed_financialbalance.reportarea",
      "ed_financialbalance.reportperiod",
      "ed_financialbalance.province",
      "ed_financialbalance.salestax",
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indexvalue",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.id"
    ]
  },
  {
    "question": "What is the lowest ratio of \"Reserve Requirement Ratio\" for \"A shares\"?",
    "sql": "select ratiofloor from ed_taxrate where typename ='A shares' and itemname ='Reserve Requirement Ratio';",
    "norm_sql": "select ratiofloor from ed_taxrate where typename = 'A shares' and itemname = 'Reserve Requirement Ratio'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "ratiofloor(minimum ratio (%))",
          "secumarket(securities market)",
          "valuefloor(minimum value/starting point (rmb))",
          "effectivedate(effective date)",
          "basiscode(billing baseline)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "ratiofloor",
          "secumarket",
          "valuefloor",
          "effectivedate",
          "basiscode"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "commodity(product name)",
          "enddate(deadline)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "gyoyofeximvaluegoods",
          "gyoyofexvaluegoods",
          "exvalueofgoods",
          "commodity",
          "enddate",
          "eximvalueofgoods",
          "imvalueofgoods"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "cashinvault(cash on hand)",
          "depositswithcentralbank(reserve deposit)",
          "paidincapital(paid-up capital)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "claimsoncentralbank(claims on central bank)",
          "totalliabilities(total liabilities)"
        ],
        "column_names_original_en": [
          "cashinvault",
          "depositswithcentralbank",
          "paidincapital",
          "liabtootherfinancialcorp",
          "liabilitiestocentralbank",
          "claimsoncentralbank",
          "totalliabilities"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the lowest ratio of \"Reserve Requirement Ratio\" for \"A shares\"? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).basiscode(billing baseline) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities)",
    "output_sequence": "select _ from _ where _ | select ratiofloor from ed_taxrate where typename = 'A shares' and itemname = 'Reserve Requirement Ratio'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.secumarket",
      "ed_taxrate.valuefloor",
      "ed_taxrate.effectivedate",
      "ed_taxrate.basiscode",
      "ed_exportimport.*",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.commodity",
      "ed_exportimport.enddate",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.totalliabilities"
    ]
  },
  {
    "question": "Can you please check for me what is the index value of \"Metal Products Industry\" in the \"National Economic Industry Index\" for the \"previous year same period\"?",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod = 'previous year same period' and indextype = 'National Economic Industry Index' and indexname = 'Metal Products Industry';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'previous year same period' and indextype = 'National Economic Industry Index' and indexname = 'Metal Products Industry'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "id",
          "enddate"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexname(index name)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "reportperiod",
          "enddate",
          "indexname",
          "id"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "collectivecomap(collective enterprise (light industry))",
          "largecomap(large-scale enterprise (light industry))",
          "enddate(deadline)",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "reportarea(statistical area category)"
        ],
        "column_names_original_en": [
          "collectivecomap",
          "largecomap",
          "enddate",
          "industrialoutputvalueap",
          "industrialvalueadded",
          "stateownedcontrolledcomap",
          "reportarea"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you please check for me what is the index value of \"Metal Products Industry\" in the \"National Economic Industry Index\" for the \"previous year same period\"? | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry)) , ed_industryproduction(industrial production).largecomap(large-scale enterprise (light industry)) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).reportarea(statistical area category)",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'previous year same period' and indextype = 'National Economic Industry Index' and indexname = 'Metal Products Industry'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.id",
      "ed_industryproduction.*",
      "ed_industryproduction.collectivecomap",
      "ed_industryproduction.largecomap",
      "ed_industryproduction.enddate",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.reportarea"
    ]
  },
  {
    "question": "What is the minimum payment ratio for \"Securities Trading Stamp Tax\" on \"A-shares\" in \"Shanghai Stock Exchange\"?",
    "sql": "select ratiofloor from ed_taxrate where typename ='A-shares' and itemname = 'Securities Trading Stamp Tax' and secumarket ='Shanghai Stock Exchange';",
    "norm_sql": "select ratiofloor from ed_taxrate where typename = 'A-shares' and itemname = 'Securities Trading Stamp Tax' and secumarket = 'Shanghai Stock Exchange'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "secumarket(securities market)",
          "typename(tax rate type)",
          "itemname(tax rate items)",
          "ratiofloor(minimum ratio (%))",
          "id(record identifier)",
          "maturity(repurchase period)",
          "ratioceiling(maximum ratio (%))"
        ],
        "column_names_original_en": [
          "secumarket",
          "typename",
          "itemname",
          "ratiofloor",
          "id",
          "maturity",
          "ratioceiling"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "ratioceiling(maximum ratio (%))",
          "drrtype(reserve requirement ratio category)",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "id",
          "ratioceiling",
          "drrtype",
          "ratiofloor",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "province(province and city)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "sovereigntycountry(the subject country)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "exvalueofgoods(total export amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "province",
          "imvalueofgoods",
          "gyoyofexvaluegoods",
          "sovereigntycountry",
          "gyoyofimvaluegoods",
          "exvalueofgoods"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the minimum payment ratio for \"Securities Trading Stamp Tax\" on \"A-shares\" in \"Shanghai Stock Exchange\"? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars))",
    "output_sequence": "select _ from _ where _ | select ratiofloor from ed_taxrate where typename = 'A-shares' and itemname = 'Securities Trading Stamp Tax' and secumarket = 'Shanghai Stock Exchange'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.secumarket",
      "ed_taxrate.typename",
      "ed_taxrate.itemname",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.id",
      "ed_taxrate.maturity",
      "ed_taxrate.ratioceiling",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.effectivedate",
      "ed_exportimport.*",
      "ed_exportimport.reportperiod",
      "ed_exportimport.province",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.exvalueofgoods"
    ]
  },
  {
    "question": "Can you show the size of the \"Pharmaceutical Manufacturing Industry\" index in the \"National Economic Industry Index\" for the \"same month last year\"?",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod = 'same month last year' and indextype ='National Economic Industry Index' and indexname ='Pharmaceutical Manufacturing Industry';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'same month last year' and indextype = 'National Economic Industry Index' and indexname = 'Pharmaceutical Manufacturing Industry'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "qoqcpitrafficcommunication(transportation and communication month-on-month)",
          "qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month)",
          "yoycpimedicare(medical care and personal care products year-on-year)",
          "cumcpitobacco(cumulative average of tobacco, alcohol, and supplies)",
          "qoqcpifamilyequipmentservice(household equipment and services month-on-month)",
          "cumcpitrafficcommunication(cumulative average of transportation and communication)",
          "cumcpi(cumulative average of resident consumer price index)"
        ],
        "column_names_original_en": [
          "qoqcpitrafficcommunication",
          "qoqcpientertainmentservice",
          "yoycpimedicare",
          "cumcpitobacco",
          "qoqcpifamilyequipmentservice",
          "cumcpitrafficcommunication",
          "cumcpi"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "indextitle(index name)",
          "reportarea(statistical region category)",
          "id(record identifier)",
          "indexvalue(index value)",
          "comparetolastmonth(index month-on-month change (points))",
          "enddate(deadline)",
          "indexcode(index code)"
        ],
        "column_names_original_en": [
          "indextitle",
          "reportarea",
          "id",
          "indexvalue",
          "comparetolastmonth",
          "enddate",
          "indexcode"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexvalue(index)",
          "enddate(deadline)",
          "id(record identifier)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexvalue",
          "enddate",
          "id",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you show the size of the \"Pharmaceutical Manufacturing Industry\" index in the \"National Economic Industry Index\" for the \"same month last year\"? | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).qoqcpitrafficcommunication(transportation and communication month-on-month) , ed_consumerpriceindex(consumer price index).qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month) , ed_consumerpriceindex(consumer price index).yoycpimedicare(medical care and personal care products year-on-year) , ed_consumerpriceindex(consumer price index).cumcpitobacco(cumulative average of tobacco, alcohol, and supplies) , ed_consumerpriceindex(consumer price index).qoqcpifamilyequipmentservice(household equipment and services month-on-month) , ed_consumerpriceindex(consumer price index).cumcpitrafficcommunication(cumulative average of transportation and communication) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).indexcode(index code) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexname(index name)",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'same month last year' and indextype = 'National Economic Industry Index' and indexname = 'Pharmaceutical Manufacturing Industry'",
    "tc_original": [
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.qoqcpitrafficcommunication",
      "ed_consumerpriceindex.qoqcpientertainmentservice",
      "ed_consumerpriceindex.yoycpimedicare",
      "ed_consumerpriceindex.cumcpitobacco",
      "ed_consumerpriceindex.qoqcpifamilyequipmentservice",
      "ed_consumerpriceindex.cumcpitrafficcommunication",
      "ed_consumerpriceindex.cumcpi",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.indexcode",
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexname"
    ]
  },
  {
    "question": "Please show the value of total retail sales of consumer goods.",
    "sql": "select retailvalueofscgoods from ed_retailvalueofscgoods ;",
    "norm_sql": "select retailvalueofscgoods from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "cumcpifood(accumulated average of food)",
          "yoycpi(resident consumer price index (year-on-year))",
          "yoycpitrafficcommunication(transportation and communication year-over-year)",
          "yoycpihousing(residential year-on-year)",
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)",
          "qoqcpihousing(residential month-to-month)",
          "yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year)"
        ],
        "column_names_original_en": [
          "cumcpifood",
          "yoycpi",
          "yoycpitrafficcommunication",
          "yoycpihousing",
          "yoycpifamilyequipmentservice",
          "qoqcpihousing",
          "yoycpientertainmentservice"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "belowcounty(county and below)",
          "collectiveunits(collective unit)",
          "selfemployed(individual unit)",
          "stateownedunits(state-owned unit)",
          "reportarea(statistical category of region)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "retailvalueofscgoods",
          "belowcounty",
          "collectiveunits",
          "selfemployed",
          "stateownedunits",
          "reportarea",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "netabroadassets(foreign net assets)",
          "fcdeposits(foreign currency deposit.)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "bonds(bonds)",
          "enddate(deadline)",
          "id(record identifier)",
          "claimstogov(claims on the government (net))"
        ],
        "column_names_original_en": [
          "netabroadassets",
          "fcdeposits",
          "claimstospecificsavingorg",
          "bonds",
          "enddate",
          "id",
          "claimstogov"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please show the value of total retail sales of consumer goods. | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).cumcpifood(accumulated average of food) , ed_consumerpriceindex(consumer price index).yoycpi(resident consumer price index (year-on-year)) , ed_consumerpriceindex(consumer price index).yoycpitrafficcommunication(transportation and communication year-over-year) , ed_consumerpriceindex(consumer price index).yoycpihousing(residential year-on-year) , ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpihousing(residential month-to-month) , ed_consumerpriceindex(consumer price index).yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net))",
    "output_sequence": "select _ from _ | select retailvalueofscgoods from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.cumcpifood",
      "ed_consumerpriceindex.yoycpi",
      "ed_consumerpriceindex.yoycpitrafficcommunication",
      "ed_consumerpriceindex.yoycpihousing",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice",
      "ed_consumerpriceindex.qoqcpihousing",
      "ed_consumerpriceindex.yoycpientertainmentservice",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.enddate",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.claimstogov"
    ]
  },
  {
    "question": "What are the total assets and total liabilities in the first quarter of this year? Please query the balance sheet of the monetary authority.",
    "sql": "select totalassets, totalliability from ed_moneyauthoritybs where strftime('%Y', enddate) = strftime('%Y', date()) and round(strftime('%m', enddate)/3.0 + 0.495) = 1;",
    "norm_sql": "select totalassets , totalliability from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( ) ) and round ( strftime ( '%m' , enddate ) / 3.0 + 0.495 ) = 1",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( ) ) and round ( strftime ( _ ) / _ + _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "enddate(deadline)",
          "totalassets(total assets (in million of rmb).)",
          "totalliability(total liabilities (in million of rmb))",
          "id(record identifier)",
          "claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb))",
          "moneyissuance(currency issuance (in million of rmb))",
          "forex(foreign exchange (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "totalassets",
          "totalliability",
          "id",
          "claimtosavingsbanks",
          "moneyissuance",
          "forex"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpicloth(clothing year-on-year)",
          "cumcpi(cumulative average of resident consumer price index)",
          "qoqcpitrafficcommunication(transportation and communication month-on-month)",
          "yoycpimedicare(medical care and personal care products year-on-year)",
          "qoqcpimedicare(healthcare and personal care products month-on-month)",
          "yoycpifood(food year-on-year)",
          "qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month)"
        ],
        "column_names_original_en": [
          "yoycpicloth",
          "cumcpi",
          "qoqcpitrafficcommunication",
          "yoycpimedicare",
          "qoqcpimedicare",
          "yoycpifood",
          "qoqcpientertainmentservice"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "effectivedate(effective date)",
          "ratioceiling(maximum ratio (%))",
          "id(record identifier)",
          "drrtype(reserve requirement ratio category)",
          "ratiofloor(minimum ratio (%))"
        ],
        "column_names_original_en": [
          "effectivedate",
          "ratioceiling",
          "id",
          "drrtype",
          "ratiofloor"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the total assets and total liabilities in the first quarter of this year? Please query the balance sheet of the monetary authority. | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).) , ed_moneyauthoritybs(monetary authorities balance sheet).totalliability(total liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsbanks(claims on the deposits monetary bank (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyissuance(currency issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).forex(foreign exchange (in million of rmb)) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpicloth(clothing year-on-year) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).qoqcpitrafficcommunication(transportation and communication month-on-month) , ed_consumerpriceindex(consumer price index).yoycpimedicare(medical care and personal care products year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpimedicare(healthcare and personal care products month-on-month) , ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%))",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( ) ) and round ( strftime ( _ ) / _ + _ ) = _ | select totalassets , totalliability from ed_moneyauthoritybs where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( ) ) and round ( strftime ( '%m' , enddate ) / 3.0 + 0.495 ) = 1",
    "tc_original": [
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.totalassets",
      "ed_moneyauthoritybs.totalliability",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.claimtosavingsbanks",
      "ed_moneyauthoritybs.moneyissuance",
      "ed_moneyauthoritybs.forex",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpicloth",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.qoqcpitrafficcommunication",
      "ed_consumerpriceindex.yoycpimedicare",
      "ed_consumerpriceindex.qoqcpimedicare",
      "ed_consumerpriceindex.yoycpifood",
      "ed_consumerpriceindex.qoqcpientertainmentservice",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratiofloor"
    ]
  },
  {
    "question": "Xiao Li, please check the year-on-year data information of China's Gross Domestic Product.",
    "sql": "select gdpgrowthyoy from ed_grossdomesticproduct;",
    "norm_sql": "select gdpgrowthyoy from ed_grossdomesticproduct",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "gdppercapita(per capita gross domestic product (cny/person))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "id(record identifier)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "gdp(gross domestic product (in million of rmb).)"
        ],
        "column_names_original_en": [
          "gdppercapita",
          "secondindustrygdp",
          "thirdindustrygdp",
          "primaryindustrygdp",
          "id",
          "gdpgrowthyoy",
          "gdp"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "maturity(repurchase period)",
          "itemname(tax rate items)",
          "ratioceiling(maximum ratio (%))",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)",
          "basiscode(billing baseline)",
          "secumarket(securities market)"
        ],
        "column_names_original_en": [
          "maturity",
          "itemname",
          "ratioceiling",
          "ratiofloor",
          "effectivedate",
          "basiscode",
          "secumarket"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "indexcode(index code)",
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "comparetolastmonth(index month-on-month change (points))",
          "enddate(deadline)",
          "id(record identifier)",
          "reportarea(statistical region category)"
        ],
        "column_names_original_en": [
          "indexcode",
          "reportperiod",
          "indextitle",
          "comparetolastmonth",
          "enddate",
          "id",
          "reportarea"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Xiao Li, please check the year-on-year data information of China's Gross Domestic Product. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).secumarket(securities market) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category)",
    "output_sequence": "select _ from _ | select gdpgrowthyoy from ed_grossdomesticproduct",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.gdp",
      "ed_taxrate.*",
      "ed_taxrate.maturity",
      "ed_taxrate.itemname",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.effectivedate",
      "ed_taxrate.basiscode",
      "ed_taxrate.secumarket",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.reportarea"
    ]
  },
  {
    "question": "Find the records of China's defense expenditure exceeding 100 million yuan since 2000, including the fields of time, defense expenditure, and defense expenditure growth rate.",
    "sql": "select enddate, nationaldefense, gnationaldefense from ed_financialbalance where nationaldefense > 100 and strftime('%Y', enddate) >= '2000';",
    "norm_sql": "select enddate , nationaldefense , gnationaldefense from ed_financialbalance where nationaldefense > 100 and strftime ( '%Y' , enddate ) >= '2000'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) >= _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "province(province and city)",
          "commercialtax(business tax revenue (in million of rmb))",
          "agriculturetax(agricultural tax (in million of rmb))",
          "gnationaldefense(defense expenditure growth rate)",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "enddate(deadline)",
          "nationaldefense(defense expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "commercialtax",
          "agriculturetax",
          "gnationaldefense",
          "localgovrevenue",
          "enddate",
          "nationaldefense"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "province(province and city)",
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "rmbloans(rmb loans (in 100 million rmb))",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "enddate(deadline)",
          "reportperiod(data statistics interval)",
          "foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "definancingofnonfe",
          "rmbloans",
          "socialfinancing",
          "enddate",
          "reportperiod",
          "foreigncurrencyloans"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpimedicare(medical care and personal care products year-on-year)",
          "cumcpifood(accumulated average of food)",
          "cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services)",
          "cumcpimedicare(cumulative average of healthcare and personal care products)",
          "qoqcpihousing(residential month-to-month)",
          "yoycpitobacco(tobacco, alcohol, and supplies year-on-year)",
          "yoycpicloth(clothing year-on-year)"
        ],
        "column_names_original_en": [
          "yoycpimedicare",
          "cumcpifood",
          "cumcpifamilyequipmentservice",
          "cumcpimedicare",
          "qoqcpihousing",
          "yoycpitobacco",
          "yoycpicloth"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Find the records of China's defense expenditure exceeding 100 million yuan since 2000, including the fields of time, defense expenditure, and defense expenditure growth rate. | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).agriculturetax(agricultural tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).gnationaldefense(defense expenditure growth rate) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).nationaldefense(defense expenditure (in million of rmb)) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).enddate(deadline) , ed_socialfinancing(statistical figures of social financing size).reportperiod(data statistics interval) , ed_socialfinancing(statistical figures of social financing size).foreigncurrencyloans(foreign currency loans (converted to rmb) (in 100 million of rmb)) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpimedicare(medical care and personal care products year-on-year) , ed_consumerpriceindex(consumer price index).cumcpifood(accumulated average of food) , ed_consumerpriceindex(consumer price index).cumcpifamilyequipmentservice(cumulative average of family equipment supplies and services) , ed_consumerpriceindex(consumer price index).cumcpimedicare(cumulative average of healthcare and personal care products) , ed_consumerpriceindex(consumer price index).qoqcpihousing(residential month-to-month) , ed_consumerpriceindex(consumer price index).yoycpitobacco(tobacco, alcohol, and supplies year-on-year) , ed_consumerpriceindex(consumer price index).yoycpicloth(clothing year-on-year)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) >= _ | select enddate , nationaldefense , gnationaldefense from ed_financialbalance where nationaldefense > 100 and strftime ( '%Y' , enddate ) >= '2000'",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.province",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.agriculturetax",
      "ed_financialbalance.gnationaldefense",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.enddate",
      "ed_financialbalance.nationaldefense",
      "ed_socialfinancing.*",
      "ed_socialfinancing.province",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.enddate",
      "ed_socialfinancing.reportperiod",
      "ed_socialfinancing.foreigncurrencyloans",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpimedicare",
      "ed_consumerpriceindex.cumcpifood",
      "ed_consumerpriceindex.cumcpifamilyequipmentservice",
      "ed_consumerpriceindex.cumcpimedicare",
      "ed_consumerpriceindex.qoqcpihousing",
      "ed_consumerpriceindex.yoycpitobacco",
      "ed_consumerpriceindex.yoycpicloth"
    ]
  },
  {
    "question": "Can you help me check the year-on-year data for gross domestic product (GDP) and GDP growth rate in the past 5 years?",
    "sql": "select gdp, gdpgrowthyoy from ed_grossdomesticproduct where strftime('%Y', enddate) > strftime('%Y', DATE('now', '-5 year'));",
    "norm_sql": "select gdp , gdpgrowthyoy from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-5 year' ) )",
    "sql_skeleton": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) )",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "enddate(deadline)",
          "gdp(gross domestic product (in million of rmb).)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "id(record identifier)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "enddate",
          "gdp",
          "gdpgrowthyoy",
          "primaryindustrygdp",
          "id",
          "thirdindustrygdp",
          "province"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexvalue(index value (points))",
          "indexname(index name)",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexvalue",
          "indexname",
          "id",
          "reportperiod",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "province(province and city)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)",
          "id(record identifier)",
          "sovereigntycountry(the subject country)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "gyoyofimvaluegoods",
          "province",
          "gyoyofexvaluegoods",
          "id",
          "sovereigntycountry",
          "exvalueofgoods",
          "gyoyofeximvaluegoods"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you help me check the year-on-year data for gross domestic product (GDP) and GDP growth rate in the past 5 years? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
    "output_sequence": "select _ from _ where strftime ( _ ) > strftime ( _ , date ( _ ) ) | select gdp , gdpgrowthyoy from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) > strftime ( '%Y' , date ( 'now' , '-5 year' ) )",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.province",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.enddate",
      "ed_exportimport.*",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.province",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_exportimport.id",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.gyoyofeximvaluegoods"
    ]
  },
  {
    "question": "Can you help me find the index value of the \"Tobacco Product Industry\" in the \"National Economic Industry Index\" for the \"same period of the previous year\"?",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod = 'same period of the previous year' and indextype = 'National Economic Industry Index' and indexname = 'Tobacco Product Industry';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'same period of the previous year' and indextype = 'National Economic Industry Index' and indexname = 'Tobacco Product Industry'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "id",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "money1(currency (narrow money m1))",
          "enddate(deadline)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "netabroadassets(foreign net assets)",
          "claimstogov(claims on the government (net))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "money1",
          "enddate",
          "moneyandquasimoney",
          "claimstootherinst",
          "netabroadassets",
          "claimstogov",
          "id"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "selfemployed(individual unit)",
          "county(county)",
          "foodbeverage(catering industry)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "city(city)",
          "othersunits(other units)",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "selfemployed",
          "county",
          "foodbeverage",
          "retailvalueofscgoods",
          "city",
          "othersunits",
          "province"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you help me find the index value of the \"Tobacco Product Industry\" in the \"National Economic Industry Index\" for the \"same period of the previous year\"? | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city)",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'same period of the previous year' and indextype = 'National Economic Industry Index' and indexname = 'Tobacco Product Industry'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.id",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.province"
    ]
  },
  {
    "question": "Since 1999, it is said that China's social security expenditure has been increasing year by year, list the social security expenditure data of each province and city.",
    "sql": "select province, socialsecurity from ed_financialbalance where strftime('%Y', enddate)>='1999';",
    "norm_sql": "select province , socialsecurity from ed_financialbalance where strftime ( '%Y' , enddate ) >= '1999'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) >= _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enddate(deadline)",
          "province(province and city)",
          "socialsecurity(social security expenditure (in million of rmb))",
          "id(record identifier)",
          "gsupportunderdevelopedarea(policy subsidy expenditure growth rate)",
          "individualincometax(personal income tax (in million of rmb))",
          "localgovexpenditure(local fiscal expenditure (in million of rmb))"
        ],
        "column_names_original_en": [
          "enddate",
          "province",
          "socialsecurity",
          "id",
          "gsupportunderdevelopedarea",
          "individualincometax",
          "localgovexpenditure"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "reportperiod(statistical period)",
          "enddate(deadline)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)",
          "subjectname(indicator name)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "enddate",
          "subjectsum",
          "yoy",
          "id",
          "subjectname"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "assetsatifo(asset in international financial institutions)",
          "totalsavings(all deposit accounts)",
          "moneyincirculation(currency in circulation)",
          "reservedeposits(deposit of reserve funds)",
          "mediumlongtermloans(medium-to-long term loans)",
          "loantogov(financial borrowing)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "assetsatifo",
          "totalsavings",
          "moneyincirculation",
          "reservedeposits",
          "mediumlongtermloans",
          "loantogov",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Since 1999, it is said that China's social security expenditure has been increasing year by year, list the social security expenditure data of each province and city. | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enddate(deadline) , ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).id(record identifier) , ed_financialbalance(government revenue and expenditure).gsupportunderdevelopedarea(policy subsidy expenditure growth rate) , ed_financialbalance(government revenue and expenditure).individualincometax(personal income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovexpenditure(local fiscal expenditure (in million of rmb)) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline)",
    "output_sequence": "select _ from _ where strftime ( _ ) >= _ | select province , socialsecurity from ed_financialbalance where strftime ( '%Y' , enddate ) >= '1999'",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.enddate",
      "ed_financialbalance.province",
      "ed_financialbalance.socialsecurity",
      "ed_financialbalance.id",
      "ed_financialbalance.gsupportunderdevelopedarea",
      "ed_financialbalance.individualincometax",
      "ed_financialbalance.localgovexpenditure",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectname",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.enddate"
    ]
  },
  {
    "question": "Xiao Li, please help Director Wang check the amount of our foreign currency deposits and foreign net assets when the total value of our currency and quasi-money exceeds 100 million.",
    "sql": "select fcdeposits, netabroadassets from ed_chinamoneyandbanking where moneyandquasimoney > 100000000;",
    "norm_sql": "select fcdeposits , netabroadassets from ed_chinamoneyandbanking where moneyandquasimoney > 100000000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "indexvalue(index value (points))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "indexname",
          "reportperiod",
          "id",
          "indexvalue",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "netabroadassets(foreign net assets)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "fcdeposits(foreign currency deposit.)",
          "capitalreceived(paid-up capital)",
          "quasimoney(quasi-currency)",
          "bonds(bonds)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "netabroadassets",
          "moneyandquasimoney",
          "fcdeposits",
          "capitalreceived",
          "quasimoney",
          "bonds",
          "id"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "id(record identifier)",
          "county(county)",
          "collectiveunits(collective unit)",
          "othersunits(other units)",
          "enddate(deadline)",
          "jointventures(joint operating unit)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "id",
          "county",
          "collectiveunits",
          "othersunits",
          "enddate",
          "jointventures",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Xiao Li, please help Director Wang check the amount of our foreign currency deposits and foreign net assets when the total value of our currency and quasi-money exceeds 100 million. | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) , ed_retailvalueofscgoods(total retail sales of consumer goods).county(county) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period)",
    "output_sequence": "select _ from _ where _ | select fcdeposits , netabroadassets from ed_chinamoneyandbanking where moneyandquasimoney > 100000000",
    "tc_original": [
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.enddate",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.id",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.id",
      "ed_retailvalueofscgoods.county",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.reportperiod"
    ]
  },
  {
    "question": "Show the amounts of corporate savings, financial deposits, and government loans in the historical credit income and expenditure records of financial institutions.",
    "sql": "select corporatesavings, financedeposits, loantogov from ed_chinafibalancesheetrmb;",
    "norm_sql": "select corporatesavings , financedeposits , loantogov from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "corporatesavings(unit deposit/corporate deposit)",
          "financedeposits(financial deposit)",
          "loantogov(financial borrowing)",
          "reservedeposits(deposit of reserve funds)",
          "orgdeposits(government and institutional deposits)",
          "agriculturaldeposits(agricultural deposit)",
          "totalsavings(all deposit accounts)"
        ],
        "column_names_original_en": [
          "corporatesavings",
          "financedeposits",
          "loantogov",
          "reservedeposits",
          "orgdeposits",
          "agriculturaldeposits",
          "totalsavings"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "enddate(deadline)",
          "indexvalue(index)",
          "indexname(index name)",
          "id(record identifier)",
          "indextype(index category)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "enddate",
          "indexvalue",
          "indexname",
          "id",
          "indextype"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "yoycpifood(food year-on-year)",
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)",
          "cumcpitrafficcommunication(cumulative average of transportation and communication)",
          "qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month)",
          "qoqcpicloth(clothing month-on-month)",
          "cumcpifood(accumulated average of food)",
          "qoqcpifamilyequipmentservice(household equipment and services month-on-month)"
        ],
        "column_names_original_en": [
          "yoycpifood",
          "yoycpifamilyequipmentservice",
          "cumcpitrafficcommunication",
          "qoqcpientertainmentservice",
          "qoqcpicloth",
          "cumcpifood",
          "qoqcpifamilyequipmentservice"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Show the amounts of corporate savings, financial deposits, and government loans in the historical credit income and expenditure records of financial institutions. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).loantogov(financial borrowing) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).orgdeposits(government and institutional deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indextype(index category) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) , ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year) , ed_consumerpriceindex(consumer price index).cumcpitrafficcommunication(cumulative average of transportation and communication) , ed_consumerpriceindex(consumer price index).qoqcpientertainmentservice(entertainment, education, cultural goods and services month-on-month) , ed_consumerpriceindex(consumer price index).qoqcpicloth(clothing month-on-month) , ed_consumerpriceindex(consumer price index).cumcpifood(accumulated average of food) , ed_consumerpriceindex(consumer price index).qoqcpifamilyequipmentservice(household equipment and services month-on-month)",
    "output_sequence": "select _ from _ | select corporatesavings , financedeposits , loantogov from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.loantogov",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_chinafibalancesheetrmb.orgdeposits",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indextype",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.yoycpifood",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice",
      "ed_consumerpriceindex.cumcpitrafficcommunication",
      "ed_consumerpriceindex.qoqcpientertainmentservice",
      "ed_consumerpriceindex.qoqcpicloth",
      "ed_consumerpriceindex.cumcpifood",
      "ed_consumerpriceindex.qoqcpifamilyequipmentservice"
    ]
  },
  {
    "question": "Which indicators are recorded for \"All Industrial Products\" in the \"Industrial Structure Classification Index\"? Please display the statistical period and corresponding values.",
    "sql": "select reportperiod, indexvalue from ed_producerpiformp where indextype ='Industrial Structure Classification Index' and indexname ='All Industrial Products';",
    "norm_sql": "select reportperiod , indexvalue from ed_producerpiformp where indextype = 'Industrial Structure Classification Index' and indexname = 'All Industrial Products'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextype(index category)",
          "indexname(index name)",
          "indexvalue(index)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextype",
          "indexname",
          "indexvalue",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "belowcounty(county and below)",
          "foodbeverage(catering industry)",
          "othersindustry(other industries)",
          "othersunits(other units)",
          "collectiveunits(collective unit)",
          "enddate(deadline)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "belowcounty",
          "foodbeverage",
          "othersindustry",
          "othersunits",
          "collectiveunits",
          "enddate",
          "id"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "totalassets(total assets)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "depositsexcludedfromm2(deposits not included in broad money)",
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "foreignassets(foreign net assets)",
          "claimsongovernment(claims on government (net))"
        ],
        "column_names_original_en": [
          "totalassets",
          "liabtootherdepositcorp",
          "depositsexcludedfromm2",
          "depositsincludedinm2",
          "claimsonotherdepositcorp",
          "foreignassets",
          "claimsongovernment"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Which indicators are recorded for \"All Industrial Products\" in the \"Industrial Structure Classification Index\"? Please display the statistical period and corresponding values. | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).id(record identifier) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).id(record identifier) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net))",
    "output_sequence": "select _ from _ where _ | select reportperiod , indexvalue from ed_producerpiformp where indextype = 'Industrial Structure Classification Index' and indexname = 'All Industrial Products'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.id",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.id",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.claimsongovernment"
    ]
  },
  {
    "question": "Can you help me take a look at the records of domestic loans and overseas loans in the financial institution's credit receipts and payments for China in 2005?",
    "sql": "select domesticloans, overseasloans from ed_chinafibalancesheetrmb where strftime('%Y', enddate)='2005';",
    "norm_sql": "select domesticloans , overseasloans from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) = '2005'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "enddate(deadline)",
          "domesticloans((one) domestic loan)",
          "overseasloans((two) overseas loans)",
          "sharesandotherinvestments(equity and other investments)",
          "trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit)",
          "totalsavings(all deposit accounts)",
          "financialbonds(financial bonds)"
        ],
        "column_names_original_en": [
          "enddate",
          "domesticloans",
          "overseasloans",
          "sharesandotherinvestments",
          "trustedandcreditdeposits",
          "totalsavings",
          "financialbonds"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "enddate(deadline)",
          "reportarea(statistical region category)",
          "indextitle(index name)",
          "indexvalue(index value)",
          "comparetolastmonth(index month-on-month change (points))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "id",
          "enddate",
          "reportarea",
          "indextitle",
          "indexvalue",
          "comparetolastmonth"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "yoy(year-on-year increase or decrease (%))",
          "enddate(deadline)",
          "subjectname(indicator name)",
          "subjectsum(amount (in million of rmb))",
          "reportperiod(statistical period)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "yoy",
          "enddate",
          "subjectname",
          "subjectsum",
          "reportperiod",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Can you help me take a look at the records of domestic loans and overseas loans in the financial institution's credit receipts and payments for China in 2005? | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).sharesandotherinvestments(equity and other investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).trustedandcreditdeposits(trust deposit/trust deposit by mandate and trust deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).id(record identifier)",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select domesticloans , overseasloans from ed_chinafibalancesheetrmb where strftime ( '%Y' , enddate ) = '2005'",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.overseasloans",
      "ed_chinafibalancesheetrmb.sharesandotherinvestments",
      "ed_chinafibalancesheetrmb.trustedandcreditdeposits",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.financialbonds",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.comparetolastmonth",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.id"
    ]
  },
  {
    "question": "What is the GDP of Beijing in recent years?",
    "sql": "select gdp from ed_grossdomesticproduct where province ='Beijing';",
    "norm_sql": "select gdp from ed_grossdomesticproduct where province = 'Beijing'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "gdp(gross domestic product (in million of rmb).)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "id(record identifier)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "province",
          "gdp",
          "thirdindustrygdp",
          "secondindustrygdp",
          "gdppercapita",
          "id",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "enddate(deadline)",
          "cumcpifood(accumulated average of food)",
          "yoycpifood(food year-on-year)",
          "yoycpicloth(clothing year-on-year)",
          "qoqcpifood(food price month-on-month)",
          "yoycpitrafficcommunication(transportation and communication year-over-year)",
          "cumcpicloth(cumulative average of clothing)"
        ],
        "column_names_original_en": [
          "enddate",
          "cumcpifood",
          "yoycpifood",
          "yoycpicloth",
          "qoqcpifood",
          "yoycpitrafficcommunication",
          "cumcpicloth"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "quasimoney(quasi-currency)",
          "claimstogov(claims on the government (net))",
          "id(record identifier)",
          "moneyandquasimoney(currency and quasi-currency (broad money m2))",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "bonds(bonds)",
          "capitalreceived(paid-up capital)"
        ],
        "column_names_original_en": [
          "quasimoney",
          "claimstogov",
          "id",
          "moneyandquasimoney",
          "claimstononfinancialinst",
          "bonds",
          "capitalreceived"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the GDP of Beijing in recent years? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).enddate(deadline) , ed_consumerpriceindex(consumer price index).cumcpifood(accumulated average of food) , ed_consumerpriceindex(consumer price index).yoycpifood(food year-on-year) , ed_consumerpriceindex(consumer price index).yoycpicloth(clothing year-on-year) , ed_consumerpriceindex(consumer price index).qoqcpifood(food price month-on-month) , ed_consumerpriceindex(consumer price index).yoycpitrafficcommunication(transportation and communication year-over-year) , ed_consumerpriceindex(consumer price index).cumcpicloth(cumulative average of clothing) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).moneyandquasimoney(currency and quasi-currency (broad money m2)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital)",
    "output_sequence": "select _ from _ where _ | select gdp from ed_grossdomesticproduct where province = 'Beijing'",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.enddate",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.enddate",
      "ed_consumerpriceindex.cumcpifood",
      "ed_consumerpriceindex.yoycpifood",
      "ed_consumerpriceindex.yoycpicloth",
      "ed_consumerpriceindex.qoqcpifood",
      "ed_consumerpriceindex.yoycpitrafficcommunication",
      "ed_consumerpriceindex.cumcpicloth",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.moneyandquasimoney",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.capitalreceived"
    ]
  },
  {
    "question": "Do you know the trade amount of various industries, such as the food and beverage industry, wholesale and retail trade industry, and other industries?",
    "sql": "select foodbeverage, wholesaleretailtrade, othersindustry from ed_retailvalueofscgoods;",
    "norm_sql": "select foodbeverage , wholesaleretailtrade , othersindustry from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "foodbeverage(catering industry)",
          "othersindustry(other industries)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "jointventures(joint operating unit)",
          "stateownedunits(state-owned unit)",
          "city(city)"
        ],
        "column_names_original_en": [
          "wholesaleretailtrade",
          "foodbeverage",
          "othersindustry",
          "retailvalueofscgoods",
          "jointventures",
          "stateownedunits",
          "city"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "subjectname(indicator name)",
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "id(record identifier)",
          "yoy(year-on-year increase or decrease (%))"
        ],
        "column_names_original_en": [
          "subjectname",
          "enddate",
          "reportperiod",
          "subjectsum",
          "id",
          "yoy"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "minitypecomap(small-scale enterprise (light industry))",
          "stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry))",
          "province(province)",
          "livalueap(light industry (in million of rmb))",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "collectivecomap(collective enterprise (light industry))"
        ],
        "column_names_original_en": [
          "minitypecomap",
          "stateownedcontrolledcomap",
          "province",
          "livalueap",
          "industrialoutputvalueap",
          "industrialvalueadded",
          "collectivecomap"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Do you know the trade amount of various industries, such as the food and beverage industry, wholesale and retail trade industry, and other industries? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersindustry(other industries) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).minitypecomap(small-scale enterprise (light industry)) , ed_industryproduction(industrial production).stateownedcontrolledcomap(state-owned and state-controlled enterprises (light industry)) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).collectivecomap(collective enterprise (light industry))",
    "output_sequence": "select _ from _ | select foodbeverage , wholesaleretailtrade , othersindustry from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.othersindustry",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.city",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.yoy",
      "ed_industryproduction.*",
      "ed_industryproduction.minitypecomap",
      "ed_industryproduction.stateownedcontrolledcomap",
      "ed_industryproduction.province",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.industrialoutputvalueap",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.collectivecomap"
    ]
  },
  {
    "question": "Hello, Can you help me search for the general index value of \"Consumer Goods-Clothing\" in \"Same Month of the Previous Year\" and \"Industrial Structure Classification Index\"",
    "sql": "select indexvalue from ed_producerpiformp where reportperiod = 'the same month of the previous year' and indextype = 'Industrial Structure Classification Index' and indexname = 'Consumer Goods-Clothing';",
    "norm_sql": "select indexvalue from ed_producerpiformp where reportperiod = 'the same month of the previous year' and indextype = 'Industrial Structure Classification Index' and indexname = 'Consumer Goods-Clothing'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "indextype(index category)",
          "indexvalue(index)",
          "id(record identifier)",
          "enddate(deadline)",
          "indexname(index name)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "indextype",
          "indexvalue",
          "id",
          "enddate",
          "indexname",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_socialfinancing(statistical figures of social financing size)",
        "table_name_original_en": "ed_socialfinancing",
        "column_names_original": [
          "definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb))",
          "creditloans(trust loan (in 100 million rmb))",
          "province(province and city)",
          "socialfinancing(total social financing scale (in 100 million of rmb))",
          "rmbloans(rmb loans (in 100 million rmb))",
          "id(record identifier)",
          "undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb))"
        ],
        "column_names_original_en": [
          "definancingofnonfe",
          "creditloans",
          "province",
          "socialfinancing",
          "rmbloans",
          "id",
          "undiscountedbacceptances"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "effectivedate(effective date)",
          "id(record identifier)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "drrtype(reserve requirement ratio category)"
        ],
        "column_names_original_en": [
          "effectivedate",
          "id",
          "ratiofloor",
          "ratioceiling",
          "drrtype"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hello, Can you help me search for the general index value of \"Consumer Goods-Clothing\" in \"Same Month of the Previous Year\" and \"Industrial Structure Classification Index\" | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) | ed_socialfinancing(statistical figures of social financing size) : ed_socialfinancing(statistical figures of social financing size).definancingofnonfe(non-financial enterprises domestic stock financing (in hundred million of rmb)) , ed_socialfinancing(statistical figures of social financing size).creditloans(trust loan (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).province(province and city) , ed_socialfinancing(statistical figures of social financing size).socialfinancing(total social financing scale (in 100 million of rmb)) , ed_socialfinancing(statistical figures of social financing size).rmbloans(rmb loans (in 100 million rmb)) , ed_socialfinancing(statistical figures of social financing size).id(record identifier) , ed_socialfinancing(statistical figures of social financing size).undiscountedbacceptances(non-discounted bank acceptance bill (in 100 million of rmb)) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category)",
    "output_sequence": "select _ from _ where _ | select indexvalue from ed_producerpiformp where reportperiod = 'the same month of the previous year' and indextype = 'Industrial Structure Classification Index' and indexname = 'Consumer Goods-Clothing'",
    "tc_original": [
      "ed_producerpiformp.*",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.id",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.reportperiod",
      "ed_socialfinancing.*",
      "ed_socialfinancing.definancingofnonfe",
      "ed_socialfinancing.creditloans",
      "ed_socialfinancing.province",
      "ed_socialfinancing.socialfinancing",
      "ed_socialfinancing.rmbloans",
      "ed_socialfinancing.id",
      "ed_socialfinancing.undiscountedbacceptances",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.drrtype"
    ]
  },
  {
    "question": "What is the amount of government bonds and non-financial sector bonds in China's currency banking database?",
    "sql": "select claimstogov, claimstononfinancialinst from ed_chinamoneyandbanking;",
    "norm_sql": "select claimstogov , claimstononfinancialinst from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "claimstogov(claims on the government (net))",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "money1(currency (narrow money m1))",
          "capitalreceived(paid-up capital)",
          "id(record identifier)",
          "centralbankbonds(central bank bonds)",
          "bonds(bonds)"
        ],
        "column_names_original_en": [
          "claimstogov",
          "claimstononfinancialinst",
          "money1",
          "capitalreceived",
          "id",
          "centralbankbonds",
          "bonds"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "category(product category)",
          "unitname(company name)",
          "eximvalue(amount)",
          "currencycode(currency unit)",
          "statecode(primary country)",
          "productname(product name)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "category",
          "unitname",
          "eximvalue",
          "currencycode",
          "statecode",
          "productname",
          "id"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "foreignassets(foreign net assets)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "depositsexcludedfromm2(deposits not included in broad money)",
          "timedeposits(fixed deposit for enterprises)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "totalliabilities(total liabilities)",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)"
        ],
        "column_names_original_en": [
          "foreignassets",
          "claimsonotherdepositcorp",
          "depositsexcludedfromm2",
          "timedeposits",
          "claimsonothernfinstitute",
          "totalliabilities",
          "liabilitiestonfinst"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the amount of government bonds and non-financial sector bonds in China's currency banking database? | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).category(product category) , ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).eximvalue(amount) , ed_productexportimport(product import and export volume).currencycode(currency unit) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).productname(product name) , ed_productexportimport(product import and export volume).id(record identifier) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households)",
    "output_sequence": "select _ from _ | select claimstogov , claimstononfinancialinst from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.capitalreceived",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.bonds",
      "ed_productexportimport.*",
      "ed_productexportimport.category",
      "ed_productexportimport.unitname",
      "ed_productexportimport.eximvalue",
      "ed_productexportimport.currencycode",
      "ed_productexportimport.statecode",
      "ed_productexportimport.productname",
      "ed_productexportimport.id",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.liabilitiestonfinst"
    ]
  },
  {
    "question": "I want to know the trade data of China in 2005, please list the import and export value data when the export value exceeds 40 million and the import value is less than 20 million.",
    "sql": "select imvalueofgoods, exvalueofgoods from ed_exportimport where exvalueofgoods > 40 and imvalueofgoods < 20 and strftime('%Y', enddate)='2005'",
    "norm_sql": "select imvalueofgoods , exvalueofgoods from ed_exportimport where exvalueofgoods > 40 and imvalueofgoods < 20 and strftime ( '%Y' , enddate ) = '2005'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "enddate(deadline)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "sovereigntycountry(the subject country)",
          "reportarea(statistical category of the region)",
          "commodity(product name)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "enddate",
          "exvalueofgoods",
          "imvalueofgoods",
          "sovereigntycountry",
          "reportarea",
          "commodity",
          "reportperiod"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "transferabledeposits(transferable deposits)",
          "enddate(deadline)",
          "claimsoncentralbank(claims on central bank)",
          "reserveassets(reserve assets)",
          "totalliabilities(total liabilities)",
          "otherliabilities(other liabilities)",
          "cashinvault(cash on hand)"
        ],
        "column_names_original_en": [
          "transferabledeposits",
          "enddate",
          "claimsoncentralbank",
          "reserveassets",
          "totalliabilities",
          "otherliabilities",
          "cashinvault"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "enddate(deadline)",
          "indexvalue(index value (points))",
          "id(record identifier)",
          "reportperiod(data statistical period)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "enddate",
          "indexvalue",
          "id",
          "reportperiod",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the trade data of China in 2005, please list the import and export value data when the export value exceeds 40 million and the import value is less than 20 million. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).reportperiod(data statistical period) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = _ | select imvalueofgoods , exvalueofgoods from ed_exportimport where exvalueofgoods > 40 and imvalueofgoods < 20 and strftime ( '%Y' , enddate ) = '2005'",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.enddate",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.reportarea",
      "ed_exportimport.commodity",
      "ed_exportimport.reportperiod",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.claimsoncentralbank",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.cashinvault",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.indexname"
    ]
  },
  {
    "question": "Do you know the annual RMB new loan amount and year-on-year growth rate recorded by \"month\" since 2005?",
    "sql": "select enddate, subjectsum, yoy from ed_newincreasingloan where reportperiod = 'month' and strftime('%Y', enddate) >= '2005';",
    "norm_sql": "select enddate , subjectsum , yoy from ed_newincreasingloan where reportperiod = 'month' and strftime ( '%Y' , enddate ) >= '2005'",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) >= _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "indexname(index name)",
          "enddate(deadline)",
          "indexvalue(index value (points))"
        ],
        "column_names_original_en": [
          "reportperiod",
          "id",
          "indexname",
          "enddate",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "subjectname(indicator name)",
          "subjectsum(amount (in million of rmb))",
          "yoy(year-on-year increase or decrease (%))",
          "id(record identifier)",
          "reportperiod(statistical period)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "subjectname",
          "subjectsum",
          "yoy",
          "id",
          "reportperiod",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "paidincapital(paid-up capital)",
          "totalliabilities(total liabilities)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "totalassets(total assets)",
          "foreignassets(foreign net assets)",
          "transferabledeposits(transferable deposits)",
          "bondissue(bond issuance)"
        ],
        "column_names_original_en": [
          "paidincapital",
          "totalliabilities",
          "liabilitiestocentralbank",
          "totalassets",
          "foreignassets",
          "transferabledeposits",
          "bondissue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Do you know the annual RMB new loan amount and year-on-year growth rate recorded by \"month\" since 2005? | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).paidincapital(paid-up capital) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).transferabledeposits(transferable deposits) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) >= _ | select enddate , subjectsum , yoy from ed_newincreasingloan where reportperiod = 'month' and strftime ( '%Y' , enddate ) >= '2005'",
    "tc_original": [
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.enddate",
      "in_nonmanufacturingpmi.indexvalue",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.enddate",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.paidincapital",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.transferabledeposits",
      "ed_otherdepositorycorpbs.bondissue"
    ]
  },
  {
    "question": "What are the business tax and value-added tax in Beijing in recent years?",
    "sql": "select commercialtax, valueaddedtax from ed_financialbalance where province = 'Beijing';",
    "norm_sql": "select commercialtax , valueaddedtax from ed_financialbalance where province = 'Beijing'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "province(province and city)",
          "commercialtax(business tax revenue (in million of rmb))",
          "valueaddedtax(value added tax (in million of rmb))",
          "socialsecurity(social security expenditure (in million of rmb))",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "supportunderdevelopedarea(policy subsidy expenditure (in million of rmb))",
          "genterpriseincome(enterprise revenue growth rate)"
        ],
        "column_names_original_en": [
          "province",
          "commercialtax",
          "valueaddedtax",
          "socialsecurity",
          "operatingexpensescesh",
          "supportunderdevelopedarea",
          "genterpriseincome"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "id(record identifier)",
          "province(province and city)",
          "enddate(deadline)",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)"
        ],
        "column_names_original_en": [
          "primaryindustrygdp",
          "id",
          "province",
          "enddate",
          "gdppercapita",
          "secondindustrygdp",
          "gdpgrowthyoy"
        ]
      },
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "id(record identifier)",
          "enddate(deadline)",
          "equityandotherinvestment(securities and investments)",
          "financedeposits(financial deposit)",
          "savingsdeposits(savings deposits)",
          "shorttermloans(short-term loan)",
          "overseasloans((two) overseas loans)"
        ],
        "column_names_original_en": [
          "id",
          "enddate",
          "equityandotherinvestment",
          "financedeposits",
          "savingsdeposits",
          "shorttermloans",
          "overseasloans"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What are the business tax and value-added tax in Beijing in recent years? | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).province(province and city) , ed_financialbalance(government revenue and expenditure).commercialtax(business tax revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).valueaddedtax(value added tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).supportunderdevelopedarea(policy subsidy expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).genterpriseincome(enterprise revenue growth rate) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).id(record identifier) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).enddate(deadline) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financedeposits(financial deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).savingsdeposits(savings deposits) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).overseasloans((two) overseas loans)",
    "output_sequence": "select _ from _ where _ | select commercialtax , valueaddedtax from ed_financialbalance where province = 'Beijing'",
    "tc_original": [
      "ed_financialbalance.*",
      "ed_financialbalance.province",
      "ed_financialbalance.commercialtax",
      "ed_financialbalance.valueaddedtax",
      "ed_financialbalance.socialsecurity",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.supportunderdevelopedarea",
      "ed_financialbalance.genterpriseincome",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.id",
      "ed_chinafibalancesheetrmb.enddate",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.financedeposits",
      "ed_chinafibalancesheetrmb.savingsdeposits",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.overseasloans"
    ]
  },
  {
    "question": "Since 2000, which provinces are included in the top ten rankings of Gross Domestic Product (GDP) in the secondary industry?",
    "sql": "select province from ed_grossdomesticproduct where strftime('%Y', enddate)>='2000' order by secondindustrygdp desc limit 10;",
    "norm_sql": "select province from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) >= '2000' order by secondindustrygdp desc limit 10",
    "sql_skeleton": "select _ from _ where strftime ( _ ) >= _ order by _ desc limit _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "enddate(deadline)",
          "secondindustrygdp(the second industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "id(record identifier)",
          "gdp(gross domestic product (in million of rmb).)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "province",
          "enddate",
          "secondindustrygdp",
          "gdppercapita",
          "id",
          "gdp",
          "thirdindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "othersunits(other units)",
          "jointventures(joint operating unit)",
          "reportarea(statistical category of region)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "belowcounty(county and below)",
          "stateownedunits(state-owned unit)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "othersunits",
          "jointventures",
          "reportarea",
          "wholesaleretailtrade",
          "belowcounty",
          "stateownedunits"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "reservedeposits(reserve deposit (in million of rmb))",
          "governmentsavings(government deposits (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))",
          "enddate(deadline)",
          "bondissuance(bond issuance (in million of rmb))",
          "totalassets(total assets (in million of rmb).)"
        ],
        "column_names_original_en": [
          "reservedeposits",
          "governmentsavings",
          "moneyandgold",
          "abroadliability",
          "enddate",
          "bondissuance",
          "totalassets"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Since 2000, which provinces are included in the top ten rankings of Gross Domestic Product (GDP) in the secondary industry? | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).reservedeposits(reserve deposit (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).governmentsavings(government deposits (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).bondissuance(bond issuance (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).totalassets(total assets (in million of rmb).)",
    "output_sequence": "select _ from _ where strftime ( _ ) >= _ order by _ desc limit _ | select province from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) >= '2000' order by secondindustrygdp desc limit 10",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.reservedeposits",
      "ed_moneyauthoritybs.governmentsavings",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.bondissuance",
      "ed_moneyauthoritybs.totalassets"
    ]
  },
  {
    "question": "Teacher Li wants to see the records of foreign currency deposits, net foreign assets, and domestic loans in China's currency and banking records.",
    "sql": "select fcdeposits, netabroadassets, domesticloans from ed_chinamoneyandbanking;",
    "norm_sql": "select fcdeposits , netabroadassets , domesticloans from ed_chinamoneyandbanking",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "netabroadassets(foreign net assets)",
          "domesticloans(domestic credit)",
          "fcdeposits(foreign currency deposit.)",
          "bonds(bonds)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)"
        ],
        "column_names_original_en": [
          "netabroadassets",
          "domesticloans",
          "fcdeposits",
          "bonds",
          "claimstospecificsavingorg",
          "claimstononfinancialinst",
          "claimstootherinst"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "id(record identifier)",
          "ratioceiling(maximum ratio (%))",
          "ratiofloor(minimum ratio (%))",
          "effectivedate(effective date)",
          "drrtype(reserve requirement ratio category)"
        ],
        "column_names_original_en": [
          "id",
          "ratioceiling",
          "ratiofloor",
          "effectivedate",
          "drrtype"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "enddate(deadline)",
          "avgprice(average price)",
          "statecode(primary country)",
          "unitname(company name)",
          "productname(product name)",
          "category(product category)",
          "accuavgprice(cumulative average price)"
        ],
        "column_names_original_en": [
          "enddate",
          "avgprice",
          "statecode",
          "unitname",
          "productname",
          "category",
          "accuavgprice"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Teacher Li wants to see the records of foreign currency deposits, net foreign assets, and domestic loans in China's currency and banking records. | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).bonds(bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).id(record identifier) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).avgprice(average price) , ed_productexportimport(product import and export volume).statecode(primary country) , ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).productname(product name) , ed_productexportimport(product import and export volume).category(product category) , ed_productexportimport(product import and export volume).accuavgprice(cumulative average price)",
    "output_sequence": "select _ from _ | select fcdeposits , netabroadassets , domesticloans from ed_chinamoneyandbanking",
    "tc_original": [
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.bonds",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.claimstootherinst",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.id",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.drrtype",
      "ed_productexportimport.*",
      "ed_productexportimport.enddate",
      "ed_productexportimport.avgprice",
      "ed_productexportimport.statecode",
      "ed_productexportimport.unitname",
      "ed_productexportimport.productname",
      "ed_productexportimport.category",
      "ed_productexportimport.accuavgprice"
    ]
  },
  {
    "question": "What is the amount of newly added RMB loan in the \"end of period accumulated\" for the third quarter of last year in our financial institution's record of \"monthly\" new loan?",
    "sql": "select enddate, subjectsum from ed_newincreasingloan where reportperiod = 'monthly' and strftime('%Y', enddate) = strftime('%Y', DATE('now', '-1 year')) and round(strftime('%m',enddate)/3.0 + 0.495) = 3;",
    "norm_sql": "select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'monthly' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) and round ( strftime ( '%m' , enddate ) / 3.0 + 0.495 ) = 3",
    "sql_skeleton": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) and round ( strftime ( _ ) / _ + _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "id(record identifier)",
          "subjectname(indicator name)",
          "yoy(year-on-year increase or decrease (%))"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "subjectsum",
          "id",
          "subjectname",
          "yoy"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "comparetolastmonth(index month-on-month change (points))",
          "indexvalue(index value)",
          "reportarea(statistical region category)",
          "enddate(deadline)",
          "indextitle(index name)",
          "reportperiod(data statistical period)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "comparetolastmonth",
          "indexvalue",
          "reportarea",
          "enddate",
          "indextitle",
          "reportperiod",
          "id"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "cumcpicloth(cumulative average of clothing)",
          "yoycpitrafficcommunication(transportation and communication year-over-year)",
          "yoycpimedicare(medical care and personal care products year-on-year)",
          "yoycpihousing(residential year-on-year)",
          "cumcpi(cumulative average of resident consumer price index)",
          "cumcpimedicare(cumulative average of healthcare and personal care products)",
          "qoqcpitobacco(tobacco, alcohol, and supplies month-on-month)"
        ],
        "column_names_original_en": [
          "cumcpicloth",
          "yoycpitrafficcommunication",
          "yoycpimedicare",
          "yoycpihousing",
          "cumcpi",
          "cumcpimedicare",
          "qoqcpitobacco"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the amount of newly added RMB loan in the \"end of period accumulated\" for the third quarter of last year in our financial institution's record of \"monthly\" new loan? | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).indexvalue(index value) , in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).indextitle(index name) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).id(record identifier) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).cumcpicloth(cumulative average of clothing) , ed_consumerpriceindex(consumer price index).yoycpitrafficcommunication(transportation and communication year-over-year) , ed_consumerpriceindex(consumer price index).yoycpimedicare(medical care and personal care products year-on-year) , ed_consumerpriceindex(consumer price index).yoycpihousing(residential year-on-year) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).cumcpimedicare(cumulative average of healthcare and personal care products) , ed_consumerpriceindex(consumer price index).qoqcpitobacco(tobacco, alcohol, and supplies month-on-month)",
    "output_sequence": "select _ from _ where _ and strftime ( _ ) = strftime ( _ , date ( _ ) ) and round ( strftime ( _ ) / _ + _ ) = _ | select enddate , subjectsum from ed_newincreasingloan where reportperiod = 'monthly' and strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( 'now' , '-1 year' ) ) and round ( strftime ( '%m' , enddate ) / 3.0 + 0.495 ) = 3",
    "tc_original": [
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.yoy",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.indexvalue",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.indextitle",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.id",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.cumcpicloth",
      "ed_consumerpriceindex.yoycpitrafficcommunication",
      "ed_consumerpriceindex.yoycpimedicare",
      "ed_consumerpriceindex.yoycpihousing",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.cumcpimedicare",
      "ed_consumerpriceindex.qoqcpitobacco"
    ]
  },
  {
    "question": "List the names of \"provinces and cities\", \"owned by the state and above-scale industrial enterprises,\" where the \"annual\" industrial added value exceeds 1 billion yuan in recent years.",
    "sql": "select province from ed_industryproduction where reportarea = 'provinces and cities' and statstandard = 'owned by the state and above-scale industrial enterprises' and reportperiod = 'annual' and industrialvalueadded > 1000;",
    "norm_sql": "select province from ed_industryproduction where reportarea = 'provinces and cities' and statstandard = 'owned by the state and above-scale industrial enterprises' and reportperiod = 'annual' and industrialvalueadded > 1000",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "reportarea(statistical area category)",
          "reportperiod(data statistics interval)",
          "province(province)",
          "statstandard(statistical caliber)",
          "industrialvalueadded(industrial added value (in million of rmb))",
          "mediumcomap(medium-sized enterprise (light industry))",
          "industrialoutputvalueap(industrial output value (current price) (in million of rmb))"
        ],
        "column_names_original_en": [
          "reportarea",
          "reportperiod",
          "province",
          "statstandard",
          "industrialvalueadded",
          "mediumcomap",
          "industrialoutputvalueap"
        ]
      },
      {
        "table_name_original": "in_nonmanufacturingpmi(non-manufacturing purchasing managers index)",
        "table_name_original_en": "in_nonmanufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "indexname(index name)",
          "indexvalue(index value (points))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "id",
          "indexname",
          "indexvalue",
          "enddate"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "productname(product name)",
          "operatetype(import and export categories)",
          "accuquantity(accumulated quantity)",
          "currencycode(currency unit)",
          "unitname(company name)",
          "enddate(deadline)",
          "reportperiod(data statistical period)"
        ],
        "column_names_original_en": [
          "productname",
          "operatetype",
          "accuquantity",
          "currencycode",
          "unitname",
          "enddate",
          "reportperiod"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "List the names of \"provinces and cities\", \"owned by the state and above-scale industrial enterprises,\" where the \"annual\" industrial added value exceeds 1 billion yuan in recent years. | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).industrialvalueadded(industrial added value (in million of rmb)) , ed_industryproduction(industrial production).mediumcomap(medium-sized enterprise (light industry)) , ed_industryproduction(industrial production).industrialoutputvalueap(industrial output value (current price) (in million of rmb)) | in_nonmanufacturingpmi(non-manufacturing purchasing managers index) : in_nonmanufacturingpmi(non-manufacturing purchasing managers index).reportperiod(data statistical period) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).id(record identifier) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexname(index name) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).indexvalue(index value (points)) , in_nonmanufacturingpmi(non-manufacturing purchasing managers index).enddate(deadline) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).productname(product name) , ed_productexportimport(product import and export volume).operatetype(import and export categories) , ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).currencycode(currency unit) , ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).enddate(deadline) , ed_productexportimport(product import and export volume).reportperiod(data statistical period)",
    "output_sequence": "select _ from _ where _ | select province from ed_industryproduction where reportarea = 'provinces and cities' and statstandard = 'owned by the state and above-scale industrial enterprises' and reportperiod = 'annual' and industrialvalueadded > 1000",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.province",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.industrialvalueadded",
      "ed_industryproduction.mediumcomap",
      "ed_industryproduction.industrialoutputvalueap",
      "in_nonmanufacturingpmi.*",
      "in_nonmanufacturingpmi.reportperiod",
      "in_nonmanufacturingpmi.id",
      "in_nonmanufacturingpmi.indexname",
      "in_nonmanufacturingpmi.indexvalue",
      "in_nonmanufacturingpmi.enddate",
      "ed_productexportimport.*",
      "ed_productexportimport.productname",
      "ed_productexportimport.operatetype",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.currencycode",
      "ed_productexportimport.unitname",
      "ed_productexportimport.enddate",
      "ed_productexportimport.reportperiod"
    ]
  },
  {
    "question": "Please show Wang the records of financial bonds, total loans, and total savings in the financial institution credit table.",
    "sql": "select financialbonds, totalloans, totalsavings from ed_chinafibalancesheetrmb;",
    "norm_sql": "select financialbonds , totalloans , totalsavings from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "totalsavings(all deposit accounts)",
          "financialbonds(financial bonds)",
          "totalloans(various loans)",
          "currencyname(currency unit code)",
          "corporatesavings(unit deposit/corporate deposit)",
          "equityandotherinvestment(securities and investments)",
          "reservedeposits(deposit of reserve funds)"
        ],
        "column_names_original_en": [
          "totalsavings",
          "financialbonds",
          "totalloans",
          "currencyname",
          "corporatesavings",
          "equityandotherinvestment",
          "reservedeposits"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "basiscode(billing baseline)",
          "maturity(repurchase period)",
          "itemname(tax rate items)",
          "valueceiling(maximum value (rmb))",
          "valuefloor(minimum value/starting point (rmb))",
          "secumarket(securities market)",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "basiscode",
          "maturity",
          "itemname",
          "valueceiling",
          "valuefloor",
          "secumarket",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "enddate(deadline)",
          "claimstononfinancialinst(claims on the non-financial sector)",
          "centralbankbonds(central bank bonds)",
          "money1(currency (narrow money m1))",
          "fcdeposits(foreign currency deposit.)",
          "quasimoney(quasi-currency)",
          "capitalreceived(paid-up capital)"
        ],
        "column_names_original_en": [
          "enddate",
          "claimstononfinancialinst",
          "centralbankbonds",
          "money1",
          "fcdeposits",
          "quasimoney",
          "capitalreceived"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please show Wang the records of financial bonds, total loans, and total savings in the financial institution credit table. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalsavings(all deposit accounts) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).financialbonds(financial bonds) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).currencyname(currency unit code) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).corporatesavings(unit deposit/corporate deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).equityandotherinvestment(securities and investments) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).reservedeposits(deposit of reserve funds) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).maturity(repurchase period) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).effectivedate(effective date) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstononfinancialinst(claims on the non-financial sector) , ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).quasimoney(quasi-currency) , ed_chinamoneyandbanking(chinese currency and banking overview).capitalreceived(paid-up capital)",
    "output_sequence": "select _ from _ | select financialbonds , totalloans , totalsavings from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.totalsavings",
      "ed_chinafibalancesheetrmb.financialbonds",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.currencyname",
      "ed_chinafibalancesheetrmb.corporatesavings",
      "ed_chinafibalancesheetrmb.equityandotherinvestment",
      "ed_chinafibalancesheetrmb.reservedeposits",
      "ed_taxrate.*",
      "ed_taxrate.basiscode",
      "ed_taxrate.maturity",
      "ed_taxrate.itemname",
      "ed_taxrate.valueceiling",
      "ed_taxrate.valuefloor",
      "ed_taxrate.secumarket",
      "ed_taxrate.effectivedate",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.enddate",
      "ed_chinamoneyandbanking.claimstononfinancialinst",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.quasimoney",
      "ed_chinamoneyandbanking.capitalreceived"
    ]
  },
  {
    "question": "I want to know the respective records of domestic loans, short-term loans, and medium-long-term loans in the financial institution credit table of our country.",
    "sql": "select domesticloans, shorttermloans, mediumlongtermloans from ed_chinafibalancesheetrmb;",
    "norm_sql": "select domesticloans , shorttermloans , mediumlongtermloans from ed_chinafibalancesheetrmb",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet)",
        "table_name_original_en": "ed_chinafibalancesheetrmb",
        "column_names_original": [
          "domesticloans((one) domestic loan)",
          "shorttermloans(short-term loan)",
          "mediumlongtermloans(medium-to-long term loans)",
          "agriculturaldeposits(agricultural deposit)",
          "totalloans(various loans)",
          "moneyincirculation(currency in circulation)",
          "assetsatifo(asset in international financial institutions)"
        ],
        "column_names_original_en": [
          "domesticloans",
          "shorttermloans",
          "mediumlongtermloans",
          "agriculturaldeposits",
          "totalloans",
          "moneyincirculation",
          "assetsatifo"
        ]
      },
      {
        "table_name_original": "ed_consumerpriceindex(consumer price index)",
        "table_name_original_en": "ed_consumerpriceindex",
        "column_names_original": [
          "cumcpicloth(cumulative average of clothing)",
          "yoycpitobacco(tobacco, alcohol, and supplies year-on-year)",
          "yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year)",
          "yoycpifamilyequipmentservice(household equipment and services year-on-year)",
          "cumcpitrafficcommunication(cumulative average of transportation and communication)",
          "cumcpi(cumulative average of resident consumer price index)",
          "qoqcpifood(food price month-on-month)"
        ],
        "column_names_original_en": [
          "cumcpicloth",
          "yoycpitobacco",
          "yoycpientertainmentservice",
          "yoycpifamilyequipmentservice",
          "cumcpitrafficcommunication",
          "cumcpi",
          "qoqcpifood"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "id(record identifier)",
          "province(province and city)",
          "exvalueofgoods(total export amount of goods (in million us dollars))"
        ],
        "column_names_original_en": [
          "gyoyofeximvaluegoods",
          "imvalueofgoods",
          "enddate",
          "reportperiod",
          "id",
          "province",
          "exvalueofgoods"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "I want to know the respective records of domestic loans, short-term loans, and medium-long-term loans in the financial institution credit table of our country. | ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet) : ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).domesticloans((one) domestic loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).shorttermloans(short-term loan) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).mediumlongtermloans(medium-to-long term loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).agriculturaldeposits(agricultural deposit) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).totalloans(various loans) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).moneyincirculation(currency in circulation) , ed_chinafibalancesheetrmb(china financial institution rmb credit balance sheet).assetsatifo(asset in international financial institutions) | ed_consumerpriceindex(consumer price index) : ed_consumerpriceindex(consumer price index).cumcpicloth(cumulative average of clothing) , ed_consumerpriceindex(consumer price index).yoycpitobacco(tobacco, alcohol, and supplies year-on-year) , ed_consumerpriceindex(consumer price index).yoycpientertainmentservice(entertainment, education, cultural products and services year-on-year) , ed_consumerpriceindex(consumer price index).yoycpifamilyequipmentservice(household equipment and services year-on-year) , ed_consumerpriceindex(consumer price index).cumcpitrafficcommunication(cumulative average of transportation and communication) , ed_consumerpriceindex(consumer price index).cumcpi(cumulative average of resident consumer price index) , ed_consumerpriceindex(consumer price index).qoqcpifood(food price month-on-month) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars))",
    "output_sequence": "select _ from _ | select domesticloans , shorttermloans , mediumlongtermloans from ed_chinafibalancesheetrmb",
    "tc_original": [
      "ed_chinafibalancesheetrmb.*",
      "ed_chinafibalancesheetrmb.domesticloans",
      "ed_chinafibalancesheetrmb.shorttermloans",
      "ed_chinafibalancesheetrmb.mediumlongtermloans",
      "ed_chinafibalancesheetrmb.agriculturaldeposits",
      "ed_chinafibalancesheetrmb.totalloans",
      "ed_chinafibalancesheetrmb.moneyincirculation",
      "ed_chinafibalancesheetrmb.assetsatifo",
      "ed_consumerpriceindex.*",
      "ed_consumerpriceindex.cumcpicloth",
      "ed_consumerpriceindex.yoycpitobacco",
      "ed_consumerpriceindex.yoycpientertainmentservice",
      "ed_consumerpriceindex.yoycpifamilyequipmentservice",
      "ed_consumerpriceindex.cumcpitrafficcommunication",
      "ed_consumerpriceindex.cumcpi",
      "ed_consumerpriceindex.qoqcpifood",
      "ed_exportimport.*",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.enddate",
      "ed_exportimport.reportperiod",
      "ed_exportimport.id",
      "ed_exportimport.province",
      "ed_exportimport.exvalueofgoods"
    ]
  },
  {
    "question": "Hi, can you help me check the highest ratio value of the \"Deposit Reserve Ratio\" for \"Rural Credit Cooperatives\"?",
    "sql": "select ratioceiling from ed_taxrate where typename ='Rural Credit Cooperatives' and itemname ='Deposit Reserve Ratio';",
    "norm_sql": "select ratioceiling from ed_taxrate where typename = 'Rural Credit Cooperatives' and itemname = 'Deposit Reserve Ratio'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "ratioceiling(maximum ratio (%))",
          "basiscode(billing baseline)",
          "valuefloor(minimum value/starting point (rmb))",
          "id(record identifier)",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "ratioceiling",
          "basiscode",
          "valuefloor",
          "id",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "foodbeverage(catering industry)",
          "enddate(deadline)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "belowcounty(county and below)",
          "collectiveunits(collective unit)",
          "jointventures(joint operating unit)",
          "stateownedunits(state-owned unit)"
        ],
        "column_names_original_en": [
          "foodbeverage",
          "enddate",
          "wholesaleretailtrade",
          "belowcounty",
          "collectiveunits",
          "jointventures",
          "stateownedunits"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "id(record identifier)",
          "indexvalue(index)",
          "enddate(deadline)",
          "indexname(index name)",
          "reportperiod(data statistical period)",
          "indextype(index category)"
        ],
        "column_names_original_en": [
          "id",
          "indexvalue",
          "enddate",
          "indexname",
          "reportperiod",
          "indextype"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Hi, can you help me check the highest ratio value of the \"Deposit Reserve Ratio\" for \"Rural Credit Cooperatives\"? | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).effectivedate(effective date) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).belowcounty(county and below) , ed_retailvalueofscgoods(total retail sales of consumer goods).collectiveunits(collective unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexname(index name) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indextype(index category)",
    "output_sequence": "select _ from _ where _ | select ratioceiling from ed_taxrate where typename = 'Rural Credit Cooperatives' and itemname = 'Deposit Reserve Ratio'",
    "tc_original": [
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.basiscode",
      "ed_taxrate.valuefloor",
      "ed_taxrate.id",
      "ed_taxrate.effectivedate",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.belowcounty",
      "ed_retailvalueofscgoods.collectiveunits",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_producerpiformp.*",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexname",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indextype"
    ]
  },
  {
    "question": "In 2010, are there records of imports and exports at the Chinese customs? Please list the total value of imported goods and the value of exported goods.",
    "sql": "select imvalueofgoods, exvalueofgoods from ed_exportimport where strftime('%Y', enddate)='2010';",
    "norm_sql": "select imvalueofgoods , exvalueofgoods from ed_exportimport where strftime ( '%Y' , enddate ) = '2010'",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "enddate(deadline)",
          "exvalueofgoods(total export amount of goods (in million us dollars))",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "reportarea(statistical category of the region)",
          "gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease)",
          "province(province and city)",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "enddate",
          "exvalueofgoods",
          "imvalueofgoods",
          "reportarea",
          "gyoyofeximvaluegoods",
          "province",
          "gyoyofexvaluegoods"
        ]
      },
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "secondindustrygdp(the second industry (in million of rmb))",
          "province(province and city)",
          "enddate(deadline)",
          "thirdindustrygdp(the tertiary industry (in million of rmb))",
          "gdppercapita(per capita gross domestic product (cny/person))",
          "id(record identifier)",
          "primaryindustrygdp(the primary industry (in million of rmb))"
        ],
        "column_names_original_en": [
          "secondindustrygdp",
          "province",
          "enddate",
          "thirdindustrygdp",
          "gdppercapita",
          "id",
          "primaryindustrygdp"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "domesticloans(domestic credit)",
          "netabroadassets(foreign net assets)",
          "claimstogov(claims on the government (net))",
          "fcdeposits(foreign currency deposit.)",
          "money1(currency (narrow money m1))",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "claimstootherinst",
          "domesticloans",
          "netabroadassets",
          "claimstogov",
          "fcdeposits",
          "money1",
          "enddate"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In 2010, are there records of imports and exports at the Chinese customs? Please list the total value of imported goods and the value of exported goods. | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).exvalueofgoods(total export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).reportarea(statistical category of the region) , ed_exportimport(customs import and export).gyoyofeximvaluegoods(total import and export amount year-on-year increase or decrease) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).thirdindustrygdp(the tertiary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).gdppercapita(per capita gross domestic product (cny/person)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).fcdeposits(foreign currency deposit.) , ed_chinamoneyandbanking(chinese currency and banking overview).money1(currency (narrow money m1)) , ed_chinamoneyandbanking(chinese currency and banking overview).enddate(deadline)",
    "output_sequence": "select _ from _ where strftime ( _ ) = _ | select imvalueofgoods , exvalueofgoods from ed_exportimport where strftime ( '%Y' , enddate ) = '2010'",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.enddate",
      "ed_exportimport.exvalueofgoods",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.reportarea",
      "ed_exportimport.gyoyofeximvaluegoods",
      "ed_exportimport.province",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.thirdindustrygdp",
      "ed_grossdomesticproduct.gdppercapita",
      "ed_grossdomesticproduct.id",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.netabroadassets",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.fcdeposits",
      "ed_chinamoneyandbanking.money1",
      "ed_chinamoneyandbanking.enddate"
    ]
  },
  {
    "question": "In Jiangsu Province, which has always been economically developed, please show the annual \"end-of-period cumulative\" industrial production, the quantity of light industry and heavy industry in \"state-owned and above-scale industrial enterprises\"?",
    "sql": "select enddate, livalueap, hivalueap from ed_industryproduction where province ='Jiangsu' and statstandard ='state-owned and above-scale industrial enterprises' and reportperiod ='end-of-period cumulative';",
    "norm_sql": "select enddate , livalueap , hivalueap from ed_industryproduction where province = 'Jiangsu' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'end-of-period cumulative'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "id(record identifier)",
          "depositsexcludedfromm2(deposits not included in broad money)",
          "enddate(deadline)",
          "timedeposits(fixed deposit for enterprises)",
          "bondissue(bond issuance)",
          "claimsongovernment(claims on government (net))",
          "totalliabilities(total liabilities)"
        ],
        "column_names_original_en": [
          "id",
          "depositsexcludedfromm2",
          "enddate",
          "timedeposits",
          "bondissue",
          "claimsongovernment",
          "totalliabilities"
        ]
      },
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "enddate(deadline)",
          "reportperiod(data statistics interval)",
          "province(province)",
          "statstandard(statistical caliber)",
          "livalueap(light industry (in million of rmb))",
          "hivalueap(heavy industry (in million of rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "reportperiod",
          "province",
          "statstandard",
          "livalueap",
          "hivalueap",
          "id"
        ]
      },
      {
        "table_name_original": "ed_financialbalance(government revenue and expenditure)",
        "table_name_original_en": "ed_financialbalance",
        "column_names_original": [
          "enterpriseincometax(enterprise income tax (in million of rmb))",
          "localgovrevenue(local fiscal revenue (in million of rmb))",
          "operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb))",
          "genterpriseincome(enterprise revenue growth rate)",
          "socialsecurity(social security expenditure (in million of rmb))",
          "supportunderdevelopedarea(policy subsidy expenditure (in million of rmb))",
          "province(province and city)"
        ],
        "column_names_original_en": [
          "enterpriseincometax",
          "localgovrevenue",
          "operatingexpensescesh",
          "genterpriseincome",
          "socialsecurity",
          "supportunderdevelopedarea",
          "province"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "In Jiangsu Province, which has always been economically developed, please show the annual \"end-of-period cumulative\" industrial production, the quantity of light industry and heavy industry in \"state-owned and above-scale industrial enterprises\"? | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsongovernment(claims on government (net)) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).province(province) , ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).id(record identifier) | ed_financialbalance(government revenue and expenditure) : ed_financialbalance(government revenue and expenditure).enterpriseincometax(enterprise income tax (in million of rmb)) , ed_financialbalance(government revenue and expenditure).localgovrevenue(local fiscal revenue (in million of rmb)) , ed_financialbalance(government revenue and expenditure).operatingexpensescesh(cultural, educational, scientific, and healthcare fee (in million of rmb)) , ed_financialbalance(government revenue and expenditure).genterpriseincome(enterprise revenue growth rate) , ed_financialbalance(government revenue and expenditure).socialsecurity(social security expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).supportunderdevelopedarea(policy subsidy expenditure (in million of rmb)) , ed_financialbalance(government revenue and expenditure).province(province and city)",
    "output_sequence": "select _ from _ where _ | select enddate , livalueap , hivalueap from ed_industryproduction where province = 'Jiangsu' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'end-of-period cumulative'",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.claimsongovernment",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_industryproduction.*",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.province",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.id",
      "ed_financialbalance.*",
      "ed_financialbalance.enterpriseincometax",
      "ed_financialbalance.localgovrevenue",
      "ed_financialbalance.operatingexpensescesh",
      "ed_financialbalance.genterpriseincome",
      "ed_financialbalance.socialsecurity",
      "ed_financialbalance.supportunderdevelopedarea",
      "ed_financialbalance.province"
    ]
  },
  {
    "question": "What is the maximum value of the annual social consumer goods retail sales in Beijing since records began?",
    "sql": "select max(retailvalueofscgoods) from ed_retailvalueofscgoods where province='Beijing' and reportperiod='Annual';",
    "norm_sql": "select max ( retailvalueofscgoods ) from ed_retailvalueofscgoods where province = 'Beijing' and reportperiod = 'Annual'",
    "sql_skeleton": "select max ( _ ) from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "province(province and city)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "othersunits(other units)",
          "enddate(deadline)",
          "foodbeverage(catering industry)",
          "wholesaleretailtrade(wholesale and retail trade industry)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "province",
          "retailvalueofscgoods",
          "othersunits",
          "enddate",
          "foodbeverage",
          "wholesaleretailtrade"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "foreignassets(foreign net assets)",
          "otherliabilities(other liabilities)",
          "depositswithcentralbank(reserve deposit)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "liabilitiestocentralbank(liabilities to the central bank.)",
          "reserveassets(reserve assets)"
        ],
        "column_names_original_en": [
          "foreignassets",
          "otherliabilities",
          "depositswithcentralbank",
          "claimsonotherdepositcorp",
          "liabtootherfinancialcorp",
          "liabilitiestocentralbank",
          "reserveassets"
        ]
      },
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "commodity(product name)",
          "enddate(deadline)",
          "sovereigntycountry(the subject country)",
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "province(province and city)",
          "reportperiod(data statistical period)",
          "reportarea(statistical category of the region)"
        ],
        "column_names_original_en": [
          "commodity",
          "enddate",
          "sovereigntycountry",
          "gyoyofimvaluegoods",
          "province",
          "reportperiod",
          "reportarea"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the maximum value of the annual social consumer goods retail sales in Beijing since records began? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).reportperiod(data statistical period) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).foodbeverage(catering industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).depositswithcentralbank(reserve deposit) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestocentralbank(liabilities to the central bank.) , ed_otherdepositorycorpbs(other depository company balance sheet).reserveassets(reserve assets) | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).commodity(product name) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).sovereigntycountry(the subject country) , ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).reportperiod(data statistical period) , ed_exportimport(customs import and export).reportarea(statistical category of the region)",
    "output_sequence": "select max ( _ ) from _ where _ | select max ( retailvalueofscgoods ) from ed_retailvalueofscgoods where province = 'Beijing' and reportperiod = 'Annual'",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.reportperiod",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.foodbeverage",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.depositswithcentralbank",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.liabilitiestocentralbank",
      "ed_otherdepositorycorpbs.reserveassets",
      "ed_exportimport.*",
      "ed_exportimport.commodity",
      "ed_exportimport.enddate",
      "ed_exportimport.sovereigntycountry",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.province",
      "ed_exportimport.reportperiod",
      "ed_exportimport.reportarea"
    ]
  },
  {
    "question": "Please list the data records of total assets in the balance sheet of other deposit-taking corporations.",
    "sql": "select totalassets from ed_otherdepositorycorpbs;",
    "norm_sql": "select totalassets from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "otherliabilities(other liabilities)",
          "totalassets(total assets)",
          "liabilitiestonfinst(liabilities to non-financial institutions and households)",
          "foreignassets(foreign net assets)",
          "liabtootherfinancialcorp(liabilities to other financial companies)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "enddate(deadline)"
        ],
        "column_names_original_en": [
          "otherliabilities",
          "totalassets",
          "liabilitiestonfinst",
          "foreignassets",
          "liabtootherfinancialcorp",
          "claimsonothernfinstitute",
          "enddate"
        ]
      },
      {
        "table_name_original": "fm_depositreserveratio(deposit reserve ratio)",
        "table_name_original_en": "fm_depositreserveratio",
        "column_names_original": [
          "drrtype(reserve requirement ratio category)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "effectivedate(effective date)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "drrtype",
          "ratiofloor",
          "ratioceiling",
          "effectivedate",
          "id"
        ]
      },
      {
        "table_name_original": "in_meansofproductionpi(producer goods price index)",
        "table_name_original_en": "in_meansofproductionpi",
        "column_names_original": [
          "reportarea(statistical region category)",
          "indexcode(index code)",
          "enddate(deadline)",
          "reportperiod(data statistical period)",
          "comparetolastmonth(index month-on-month change (points))",
          "id(record identifier)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "reportarea",
          "indexcode",
          "enddate",
          "reportperiod",
          "comparetolastmonth",
          "id",
          "indexvalue"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please list the data records of total assets in the balance sheet of other deposit-taking corporations. | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).otherliabilities(other liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).liabilitiestonfinst(liabilities to non-financial institutions and households) , ed_otherdepositorycorpbs(other depository company balance sheet).foreignassets(foreign net assets) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherfinancialcorp(liabilities to other financial companies) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) | fm_depositreserveratio(deposit reserve ratio) : fm_depositreserveratio(deposit reserve ratio).drrtype(reserve requirement ratio category) , fm_depositreserveratio(deposit reserve ratio).ratiofloor(minimum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).ratioceiling(maximum ratio (%)) , fm_depositreserveratio(deposit reserve ratio).effectivedate(effective date) , fm_depositreserveratio(deposit reserve ratio).id(record identifier) | in_meansofproductionpi(producer goods price index) : in_meansofproductionpi(producer goods price index).reportarea(statistical region category) , in_meansofproductionpi(producer goods price index).indexcode(index code) , in_meansofproductionpi(producer goods price index).enddate(deadline) , in_meansofproductionpi(producer goods price index).reportperiod(data statistical period) , in_meansofproductionpi(producer goods price index).comparetolastmonth(index month-on-month change (points)) , in_meansofproductionpi(producer goods price index).id(record identifier) , in_meansofproductionpi(producer goods price index).indexvalue(index value)",
    "output_sequence": "select _ from _ | select totalassets from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.otherliabilities",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.liabilitiestonfinst",
      "ed_otherdepositorycorpbs.foreignassets",
      "ed_otherdepositorycorpbs.liabtootherfinancialcorp",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.enddate",
      "fm_depositreserveratio.*",
      "fm_depositreserveratio.drrtype",
      "fm_depositreserveratio.ratiofloor",
      "fm_depositreserveratio.ratioceiling",
      "fm_depositreserveratio.effectivedate",
      "fm_depositreserveratio.id",
      "in_meansofproductionpi.*",
      "in_meansofproductionpi.reportarea",
      "in_meansofproductionpi.indexcode",
      "in_meansofproductionpi.enddate",
      "in_meansofproductionpi.reportperiod",
      "in_meansofproductionpi.comparetolastmonth",
      "in_meansofproductionpi.id",
      "in_meansofproductionpi.indexvalue"
    ]
  },
  {
    "question": "Search for the benchmark of \"Warrant\". Also, what are the highest and lowest commission rates for \"Trading Commission Rate\"?",
    "sql": "select basiscode, ratiofloor, ratioceiling from ed_taxrate where typename = 'Warrant' and itemname = 'Trading Commission Rate';",
    "norm_sql": "select basiscode , ratiofloor , ratioceiling from ed_taxrate where typename = 'Warrant' and itemname = 'Trading Commission Rate'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "in_manufacturingpmi(purchasing managers' index for the manufacturing industry)",
        "table_name_original_en": "in_manufacturingpmi",
        "column_names_original": [
          "reportperiod(data statistical period)",
          "indextitle(index name)",
          "id(record identifier)",
          "enddate(deadline)",
          "indexvalue(index value)"
        ],
        "column_names_original_en": [
          "reportperiod",
          "indextitle",
          "id",
          "enddate",
          "indexvalue"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "basiscode(billing baseline)",
          "ratiofloor(minimum ratio (%))",
          "ratioceiling(maximum ratio (%))",
          "valuefloor(minimum value/starting point (rmb))",
          "valueceiling(maximum value (rmb))"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "basiscode",
          "ratiofloor",
          "ratioceiling",
          "valuefloor",
          "valueceiling"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "cashinvault(cash on hand)",
          "enddate(deadline)",
          "totalassets(total assets)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "depositsexcludedfromm2(deposits not included in broad money)",
          "otherassets(other assets)"
        ],
        "column_names_original_en": [
          "cashinvault",
          "enddate",
          "totalassets",
          "liabtootherdepositcorp",
          "claimsonotherdepositcorp",
          "depositsexcludedfromm2",
          "otherassets"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Search for the benchmark of \"Warrant\". Also, what are the highest and lowest commission rates for \"Trading Commission Rate\"? | in_manufacturingpmi(purchasing managers' index for the manufacturing industry) : in_manufacturingpmi(purchasing managers' index for the manufacturing industry).reportperiod(data statistical period) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indextitle(index name) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).id(record identifier) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).enddate(deadline) , in_manufacturingpmi(purchasing managers' index for the manufacturing industry).indexvalue(index value) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).valuefloor(minimum value/starting point (rmb)) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).depositsexcludedfromm2(deposits not included in broad money) , ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets)",
    "output_sequence": "select _ from _ where _ | select basiscode , ratiofloor , ratioceiling from ed_taxrate where typename = 'Warrant' and itemname = 'Trading Commission Rate'",
    "tc_original": [
      "in_manufacturingpmi.*",
      "in_manufacturingpmi.reportperiod",
      "in_manufacturingpmi.indextitle",
      "in_manufacturingpmi.id",
      "in_manufacturingpmi.enddate",
      "in_manufacturingpmi.indexvalue",
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.basiscode",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.valuefloor",
      "ed_taxrate.valueceiling",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.depositsexcludedfromm2",
      "ed_otherdepositorycorpbs.otherassets"
    ]
  },
  {
    "question": "Please help Teacher Li to check the GDP and GDP year-on-year growth data for each province and city in China in the first quarter of this year.",
    "sql": "select province, gdp, gdpgrowthyoy from ed_grossdomesticproduct where strftime('%Y', enddate) = strftime('%Y', date()) and round(strftime('%m',enddate)/3.0 + 0.495) = 1;",
    "norm_sql": "select province , gdp , gdpgrowthyoy from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( ) ) and round ( strftime ( '%m' , enddate ) / 3.0 + 0.495 ) = 1",
    "sql_skeleton": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( ) ) and round ( strftime ( _ ) / _ + _ ) = _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_grossdomesticproduct(gross domestic product)",
        "table_name_original_en": "ed_grossdomesticproduct",
        "column_names_original": [
          "province(province and city)",
          "enddate(deadline)",
          "gdp(gross domestic product (in million of rmb).)",
          "gdpgrowthyoy(gross domestic product (gdp) year-on-year)",
          "primaryindustrygdp(the primary industry (in million of rmb))",
          "secondindustrygdp(the second industry (in million of rmb))",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "province",
          "enddate",
          "gdp",
          "gdpgrowthyoy",
          "primaryindustrygdp",
          "secondindustrygdp",
          "id"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "id(record identifier)",
          "enddate(deadline)",
          "reportperiod(statistical period)",
          "subjectsum(amount (in million of rmb))",
          "subjectname(indicator name)",
          "yoy(year-on-year increase or decrease (%))"
        ],
        "column_names_original_en": [
          "id",
          "enddate",
          "reportperiod",
          "subjectsum",
          "subjectname",
          "yoy"
        ]
      },
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "selfemployed(individual unit)",
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "enddate(deadline)",
          "reportarea(statistical category of region)",
          "jointventures(joint operating unit)",
          "province(province and city)",
          "city(city)"
        ],
        "column_names_original_en": [
          "selfemployed",
          "wholesaleretailtrade",
          "enddate",
          "reportarea",
          "jointventures",
          "province",
          "city"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Please help Teacher Li to check the GDP and GDP year-on-year growth data for each province and city in China in the first quarter of this year. | ed_grossdomesticproduct(gross domestic product) : ed_grossdomesticproduct(gross domestic product).province(province and city) , ed_grossdomesticproduct(gross domestic product).enddate(deadline) , ed_grossdomesticproduct(gross domestic product).gdp(gross domestic product (in million of rmb).) , ed_grossdomesticproduct(gross domestic product).gdpgrowthyoy(gross domestic product (gdp) year-on-year) , ed_grossdomesticproduct(gross domestic product).primaryindustrygdp(the primary industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).secondindustrygdp(the second industry (in million of rmb)) , ed_grossdomesticproduct(gross domestic product).id(record identifier) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).id(record identifier) , ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).enddate(deadline) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) , ed_retailvalueofscgoods(total retail sales of consumer goods).jointventures(joint operating unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).province(province and city) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city)",
    "output_sequence": "select _ from _ where strftime ( _ ) = strftime ( _ , date ( ) ) and round ( strftime ( _ ) / _ + _ ) = _ | select province , gdp , gdpgrowthyoy from ed_grossdomesticproduct where strftime ( '%Y' , enddate ) = strftime ( '%Y' , date ( ) ) and round ( strftime ( '%m' , enddate ) / 3.0 + 0.495 ) = 1",
    "tc_original": [
      "ed_grossdomesticproduct.*",
      "ed_grossdomesticproduct.province",
      "ed_grossdomesticproduct.enddate",
      "ed_grossdomesticproduct.gdp",
      "ed_grossdomesticproduct.gdpgrowthyoy",
      "ed_grossdomesticproduct.primaryindustrygdp",
      "ed_grossdomesticproduct.secondindustrygdp",
      "ed_grossdomesticproduct.id",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.id",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.yoy",
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.enddate",
      "ed_retailvalueofscgoods.reportarea",
      "ed_retailvalueofscgoods.jointventures",
      "ed_retailvalueofscgoods.province",
      "ed_retailvalueofscgoods.city"
    ]
  },
  {
    "question": "Mr. Li wants to know the annual cumulative industrial production value of light industry and heavy industry within the scope of \"state-owned and above-scale industrial enterprises\" in each \"province and city\"?",
    "sql": "select enddate, province, livalueap, hivalueap from ed_industryproduction where reportarea = 'province and city' and statstandard ='state-owned and above-scale industrial enterprises' and reportperiod ='End of Period Accumulated';",
    "norm_sql": "select enddate , province , livalueap , hivalueap from ed_industryproduction where reportarea = 'province and city' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'End of Period Accumulated'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_industryproduction(industrial production)",
        "table_name_original_en": "ed_industryproduction",
        "column_names_original": [
          "statstandard(statistical caliber)",
          "reportarea(statistical area category)",
          "hivalueap(heavy industry (in million of rmb))",
          "livalueap(light industry (in million of rmb))",
          "enddate(deadline)",
          "reportperiod(data statistics interval)",
          "province(province)"
        ],
        "column_names_original_en": [
          "statstandard",
          "reportarea",
          "hivalueap",
          "livalueap",
          "enddate",
          "reportperiod",
          "province"
        ]
      },
      {
        "table_name_original": "ed_productexportimport(product import and export volume)",
        "table_name_original_en": "ed_productexportimport",
        "column_names_original": [
          "avgprice(average price)",
          "reportperiod(data statistical period)",
          "accuquantity(accumulated quantity)",
          "unitname(company name)",
          "accuavgprice(cumulative average price)",
          "quantity(quantity)",
          "productname(product name)"
        ],
        "column_names_original_en": [
          "avgprice",
          "reportperiod",
          "accuquantity",
          "unitname",
          "accuavgprice",
          "quantity",
          "productname"
        ]
      },
      {
        "table_name_original": "ed_newincreasingloan(financial institutions new loans)",
        "table_name_original_en": "ed_newincreasingloan",
        "column_names_original": [
          "enddate(deadline)",
          "yoy(year-on-year increase or decrease (%))",
          "subjectname(indicator name)",
          "subjectsum(amount (in million of rmb))",
          "reportperiod(statistical period)",
          "id(record identifier)"
        ],
        "column_names_original_en": [
          "enddate",
          "yoy",
          "subjectname",
          "subjectsum",
          "reportperiod",
          "id"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "Mr. Li wants to know the annual cumulative industrial production value of light industry and heavy industry within the scope of \"state-owned and above-scale industrial enterprises\" in each \"province and city\"? | ed_industryproduction(industrial production) : ed_industryproduction(industrial production).statstandard(statistical caliber) , ed_industryproduction(industrial production).reportarea(statistical area category) , ed_industryproduction(industrial production).hivalueap(heavy industry (in million of rmb)) , ed_industryproduction(industrial production).livalueap(light industry (in million of rmb)) , ed_industryproduction(industrial production).enddate(deadline) , ed_industryproduction(industrial production).reportperiod(data statistics interval) , ed_industryproduction(industrial production).province(province) | ed_productexportimport(product import and export volume) : ed_productexportimport(product import and export volume).avgprice(average price) , ed_productexportimport(product import and export volume).reportperiod(data statistical period) , ed_productexportimport(product import and export volume).accuquantity(accumulated quantity) , ed_productexportimport(product import and export volume).unitname(company name) , ed_productexportimport(product import and export volume).accuavgprice(cumulative average price) , ed_productexportimport(product import and export volume).quantity(quantity) , ed_productexportimport(product import and export volume).productname(product name) | ed_newincreasingloan(financial institutions new loans) : ed_newincreasingloan(financial institutions new loans).enddate(deadline) , ed_newincreasingloan(financial institutions new loans).yoy(year-on-year increase or decrease (%)) , ed_newincreasingloan(financial institutions new loans).subjectname(indicator name) , ed_newincreasingloan(financial institutions new loans).subjectsum(amount (in million of rmb)) , ed_newincreasingloan(financial institutions new loans).reportperiod(statistical period) , ed_newincreasingloan(financial institutions new loans).id(record identifier)",
    "output_sequence": "select _ from _ where _ | select enddate , province , livalueap , hivalueap from ed_industryproduction where reportarea = 'province and city' and statstandard = 'state-owned and above-scale industrial enterprises' and reportperiod = 'End of Period Accumulated'",
    "tc_original": [
      "ed_industryproduction.*",
      "ed_industryproduction.statstandard",
      "ed_industryproduction.reportarea",
      "ed_industryproduction.hivalueap",
      "ed_industryproduction.livalueap",
      "ed_industryproduction.enddate",
      "ed_industryproduction.reportperiod",
      "ed_industryproduction.province",
      "ed_productexportimport.*",
      "ed_productexportimport.avgprice",
      "ed_productexportimport.reportperiod",
      "ed_productexportimport.accuquantity",
      "ed_productexportimport.unitname",
      "ed_productexportimport.accuavgprice",
      "ed_productexportimport.quantity",
      "ed_productexportimport.productname",
      "ed_newincreasingloan.*",
      "ed_newincreasingloan.enddate",
      "ed_newincreasingloan.yoy",
      "ed_newincreasingloan.subjectname",
      "ed_newincreasingloan.subjectsum",
      "ed_newincreasingloan.reportperiod",
      "ed_newincreasingloan.id"
    ]
  },
  {
    "question": "What is the record of enterprise fixed-term deposits in the balance sheet of other deposit-taking non-bank financial institutions?",
    "sql": "select timedeposits from ed_otherdepositorycorpbs;",
    "norm_sql": "select timedeposits from ed_otherdepositorycorpbs",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "timedeposits(fixed deposit for enterprises)",
          "claimsonothernfinstitute(claims on non-financial institution)",
          "claimsonotherdepositcorp(claims on other deposit-based company)",
          "liabtootherdepositcorp(liabilities to other deposit-taking corporations.)",
          "totalliabilities(total liabilities)",
          "totalassets(total assets)",
          "otherassets(other assets)"
        ],
        "column_names_original_en": [
          "timedeposits",
          "claimsonothernfinstitute",
          "claimsonotherdepositcorp",
          "liabtootherdepositcorp",
          "totalliabilities",
          "totalassets",
          "otherassets"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "basiscode(billing baseline)",
          "valueceiling(maximum value (rmb))",
          "secumarket(securities market)",
          "id(record identifier)",
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "effectivedate(effective date)"
        ],
        "column_names_original_en": [
          "basiscode",
          "valueceiling",
          "secumarket",
          "id",
          "itemname",
          "typename",
          "effectivedate"
        ]
      },
      {
        "table_name_original": "ed_chinamoneyandbanking(chinese currency and banking overview)",
        "table_name_original_en": "ed_chinamoneyandbanking",
        "column_names_original": [
          "centralbankbonds(central bank bonds)",
          "id(record identifier)",
          "claimstogov(claims on the government (net))",
          "claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions)",
          "claimstospecificsavingorg(claims on the specific deposit-taking institutions)",
          "domesticloans(domestic credit)",
          "netabroadassets(foreign net assets)"
        ],
        "column_names_original_en": [
          "centralbankbonds",
          "id",
          "claimstogov",
          "claimstootherinst",
          "claimstospecificsavingorg",
          "domesticloans",
          "netabroadassets"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the record of enterprise fixed-term deposits in the balance sheet of other deposit-taking non-bank financial institutions? | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).timedeposits(fixed deposit for enterprises) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonothernfinstitute(claims on non-financial institution) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherdepositcorp(claims on other deposit-based company) , ed_otherdepositorycorpbs(other depository company balance sheet).liabtootherdepositcorp(liabilities to other deposit-taking corporations.) , ed_otherdepositorycorpbs(other depository company balance sheet).totalliabilities(total liabilities) , ed_otherdepositorycorpbs(other depository company balance sheet).totalassets(total assets) , ed_otherdepositorycorpbs(other depository company balance sheet).otherassets(other assets) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).basiscode(billing baseline) , ed_taxrate(tax rate table).valueceiling(maximum value (rmb)) , ed_taxrate(tax rate table).secumarket(securities market) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).effectivedate(effective date) | ed_chinamoneyandbanking(chinese currency and banking overview) : ed_chinamoneyandbanking(chinese currency and banking overview).centralbankbonds(central bank bonds) , ed_chinamoneyandbanking(chinese currency and banking overview).id(record identifier) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstogov(claims on the government (net)) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstootherinst(claims on the other financial sectors / claims against non-monetary financial institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).claimstospecificsavingorg(claims on the specific deposit-taking institutions) , ed_chinamoneyandbanking(chinese currency and banking overview).domesticloans(domestic credit) , ed_chinamoneyandbanking(chinese currency and banking overview).netabroadassets(foreign net assets)",
    "output_sequence": "select _ from _ | select timedeposits from ed_otherdepositorycorpbs",
    "tc_original": [
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.timedeposits",
      "ed_otherdepositorycorpbs.claimsonothernfinstitute",
      "ed_otherdepositorycorpbs.claimsonotherdepositcorp",
      "ed_otherdepositorycorpbs.liabtootherdepositcorp",
      "ed_otherdepositorycorpbs.totalliabilities",
      "ed_otherdepositorycorpbs.totalassets",
      "ed_otherdepositorycorpbs.otherassets",
      "ed_taxrate.*",
      "ed_taxrate.basiscode",
      "ed_taxrate.valueceiling",
      "ed_taxrate.secumarket",
      "ed_taxrate.id",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.effectivedate",
      "ed_chinamoneyandbanking.*",
      "ed_chinamoneyandbanking.centralbankbonds",
      "ed_chinamoneyandbanking.id",
      "ed_chinamoneyandbanking.claimstogov",
      "ed_chinamoneyandbanking.claimstootherinst",
      "ed_chinamoneyandbanking.claimstospecificsavingorg",
      "ed_chinamoneyandbanking.domesticloans",
      "ed_chinamoneyandbanking.netabroadassets"
    ]
  },
  {
    "question": "What is the highest proportion of \"deposit reserve ratio\" for \"Chinese small-sized banks\"?",
    "sql": "select ratioceiling from ed_taxrate where typename ='Chinese small-sized banks' and itemname = 'deposit reserve ratio';",
    "norm_sql": "select ratioceiling from ed_taxrate where typename = 'Chinese small-sized banks' and itemname = 'deposit reserve ratio'",
    "sql_skeleton": "select _ from _ where _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_exportimport(customs import and export)",
        "table_name_original_en": "ed_exportimport",
        "column_names_original": [
          "gyoyofimvaluegoods(import year-on-year increase or decrease)",
          "id(record identifier)",
          "eximvalueofgoods(total import and export amount of goods (in million us dollars))",
          "enddate(deadline)",
          "province(province and city)",
          "imvalueofgoods(total import amount of goods (in million us dollars))",
          "gyoyofexvaluegoods(export year-on-year increase or decrease)"
        ],
        "column_names_original_en": [
          "gyoyofimvaluegoods",
          "id",
          "eximvalueofgoods",
          "enddate",
          "province",
          "imvalueofgoods",
          "gyoyofexvaluegoods"
        ]
      },
      {
        "table_name_original": "ed_taxrate(tax rate table)",
        "table_name_original_en": "ed_taxrate",
        "column_names_original": [
          "itemname(tax rate items)",
          "typename(tax rate type)",
          "ratioceiling(maximum ratio (%))",
          "effectivedate(effective date)",
          "ratiofloor(minimum ratio (%))",
          "id(record identifier)",
          "basiscode(billing baseline)"
        ],
        "column_names_original_en": [
          "itemname",
          "typename",
          "ratioceiling",
          "effectivedate",
          "ratiofloor",
          "id",
          "basiscode"
        ]
      },
      {
        "table_name_original": "ed_producerpiformp(industrial producer price index)",
        "table_name_original_en": "ed_producerpiformp",
        "column_names_original": [
          "id(record identifier)",
          "indextype(index category)",
          "reportperiod(data statistical period)",
          "indexvalue(index)",
          "enddate(deadline)",
          "indexname(index name)"
        ],
        "column_names_original_en": [
          "id",
          "indextype",
          "reportperiod",
          "indexvalue",
          "enddate",
          "indexname"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the highest proportion of \"deposit reserve ratio\" for \"Chinese small-sized banks\"? | ed_exportimport(customs import and export) : ed_exportimport(customs import and export).gyoyofimvaluegoods(import year-on-year increase or decrease) , ed_exportimport(customs import and export).id(record identifier) , ed_exportimport(customs import and export).eximvalueofgoods(total import and export amount of goods (in million us dollars)) , ed_exportimport(customs import and export).enddate(deadline) , ed_exportimport(customs import and export).province(province and city) , ed_exportimport(customs import and export).imvalueofgoods(total import amount of goods (in million us dollars)) , ed_exportimport(customs import and export).gyoyofexvaluegoods(export year-on-year increase or decrease) | ed_taxrate(tax rate table) : ed_taxrate(tax rate table).itemname(tax rate items) , ed_taxrate(tax rate table).typename(tax rate type) , ed_taxrate(tax rate table).ratioceiling(maximum ratio (%)) , ed_taxrate(tax rate table).effectivedate(effective date) , ed_taxrate(tax rate table).ratiofloor(minimum ratio (%)) , ed_taxrate(tax rate table).id(record identifier) , ed_taxrate(tax rate table).basiscode(billing baseline) | ed_producerpiformp(industrial producer price index) : ed_producerpiformp(industrial producer price index).id(record identifier) , ed_producerpiformp(industrial producer price index).indextype(index category) , ed_producerpiformp(industrial producer price index).reportperiod(data statistical period) , ed_producerpiformp(industrial producer price index).indexvalue(index) , ed_producerpiformp(industrial producer price index).enddate(deadline) , ed_producerpiformp(industrial producer price index).indexname(index name)",
    "output_sequence": "select _ from _ where _ | select ratioceiling from ed_taxrate where typename = 'Chinese small-sized banks' and itemname = 'deposit reserve ratio'",
    "tc_original": [
      "ed_exportimport.*",
      "ed_exportimport.gyoyofimvaluegoods",
      "ed_exportimport.id",
      "ed_exportimport.eximvalueofgoods",
      "ed_exportimport.enddate",
      "ed_exportimport.province",
      "ed_exportimport.imvalueofgoods",
      "ed_exportimport.gyoyofexvaluegoods",
      "ed_taxrate.*",
      "ed_taxrate.itemname",
      "ed_taxrate.typename",
      "ed_taxrate.ratioceiling",
      "ed_taxrate.effectivedate",
      "ed_taxrate.ratiofloor",
      "ed_taxrate.id",
      "ed_taxrate.basiscode",
      "ed_producerpiformp.*",
      "ed_producerpiformp.id",
      "ed_producerpiformp.indextype",
      "ed_producerpiformp.reportperiod",
      "ed_producerpiformp.indexvalue",
      "ed_producerpiformp.enddate",
      "ed_producerpiformp.indexname"
    ]
  },
  {
    "question": "What is the amount of retail sales of consumer goods in the wholesale and retail trade industry for state-owned units?",
    "sql": "select wholesaleretailtrade, stateownedunits from ed_retailvalueofscgoods;",
    "norm_sql": "select wholesaleretailtrade , stateownedunits from ed_retailvalueofscgoods",
    "sql_skeleton": "select _ from _",
    "natsql": "",
    "norm_natsql": "",
    "natsql_skeleton": "",
    "db_id": "ccks_macro",
    "db_schema": [
      {
        "table_name_original": "ed_retailvalueofscgoods(total retail sales of consumer goods)",
        "table_name_original_en": "ed_retailvalueofscgoods",
        "column_names_original": [
          "wholesaleretailtrade(wholesale and retail trade industry)",
          "stateownedunits(state-owned unit)",
          "othersunits(other units)",
          "retailvalueofscgoods(total retail sales of consumer goods (in million of rmb))",
          "selfemployed(individual unit)",
          "city(city)",
          "reportarea(statistical category of region)"
        ],
        "column_names_original_en": [
          "wholesaleretailtrade",
          "stateownedunits",
          "othersunits",
          "retailvalueofscgoods",
          "selfemployed",
          "city",
          "reportarea"
        ]
      },
      {
        "table_name_original": "ed_moneyauthoritybs(monetary authorities balance sheet)",
        "table_name_original_en": "ed_moneyauthoritybs",
        "column_names_original": [
          "claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb))",
          "id(record identifier)",
          "enddate(deadline)",
          "otherliability(other liabilities (in million of rmb))",
          "abroadliability(abroad liabilities (in million of rmb))",
          "moneyandgold(currency gold (in million of rmb))",
          "claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb))"
        ],
        "column_names_original_en": [
          "claimtosavingsinst",
          "id",
          "enddate",
          "otherliability",
          "abroadliability",
          "moneyandgold",
          "claimtootherfinnonfininst"
        ]
      },
      {
        "table_name_original": "ed_otherdepositorycorpbs(other depository company balance sheet)",
        "table_name_original_en": "ed_otherdepositorycorpbs",
        "column_names_original": [
          "depositsincludedinm2(inclusion of broad money deposits.)",
          "enddate(deadline)",
          "cashinvault(cash on hand)",
          "claimsonotherfinstitute(claims on other financial institutions)",
          "bondissue(bond issuance)",
          "id(record identifier)",
          "claimsoncentralbank(claims on central bank)"
        ],
        "column_names_original_en": [
          "depositsincludedinm2",
          "enddate",
          "cashinvault",
          "claimsonotherfinstitute",
          "bondissue",
          "id",
          "claimsoncentralbank"
        ]
      }
    ],
    "fk": [],
    "input_sequence": "What is the amount of retail sales of consumer goods in the wholesale and retail trade industry for state-owned units? | ed_retailvalueofscgoods(total retail sales of consumer goods) : ed_retailvalueofscgoods(total retail sales of consumer goods).wholesaleretailtrade(wholesale and retail trade industry) , ed_retailvalueofscgoods(total retail sales of consumer goods).stateownedunits(state-owned unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).othersunits(other units) , ed_retailvalueofscgoods(total retail sales of consumer goods).retailvalueofscgoods(total retail sales of consumer goods (in million of rmb)) , ed_retailvalueofscgoods(total retail sales of consumer goods).selfemployed(individual unit) , ed_retailvalueofscgoods(total retail sales of consumer goods).city(city) , ed_retailvalueofscgoods(total retail sales of consumer goods).reportarea(statistical category of region) | ed_moneyauthoritybs(monetary authorities balance sheet) : ed_moneyauthoritybs(monetary authorities balance sheet).claimtosavingsinst(claims on the specific deposit-taking institutions (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).id(record identifier) , ed_moneyauthoritybs(monetary authorities balance sheet).enddate(deadline) , ed_moneyauthoritybs(monetary authorities balance sheet).otherliability(other liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).abroadliability(abroad liabilities (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).moneyandgold(currency gold (in million of rmb)) , ed_moneyauthoritybs(monetary authorities balance sheet).claimtootherfinnonfininst(claims on the other financial institutions/claims on the non-monetary financial institutions (in million of rmb)) | ed_otherdepositorycorpbs(other depository company balance sheet) : ed_otherdepositorycorpbs(other depository company balance sheet).depositsincludedinm2(inclusion of broad money deposits.) , ed_otherdepositorycorpbs(other depository company balance sheet).enddate(deadline) , ed_otherdepositorycorpbs(other depository company balance sheet).cashinvault(cash on hand) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsonotherfinstitute(claims on other financial institutions) , ed_otherdepositorycorpbs(other depository company balance sheet).bondissue(bond issuance) , ed_otherdepositorycorpbs(other depository company balance sheet).id(record identifier) , ed_otherdepositorycorpbs(other depository company balance sheet).claimsoncentralbank(claims on central bank)",
    "output_sequence": "select _ from _ | select wholesaleretailtrade , stateownedunits from ed_retailvalueofscgoods",
    "tc_original": [
      "ed_retailvalueofscgoods.*",
      "ed_retailvalueofscgoods.wholesaleretailtrade",
      "ed_retailvalueofscgoods.stateownedunits",
      "ed_retailvalueofscgoods.othersunits",
      "ed_retailvalueofscgoods.retailvalueofscgoods",
      "ed_retailvalueofscgoods.selfemployed",
      "ed_retailvalueofscgoods.city",
      "ed_retailvalueofscgoods.reportarea",
      "ed_moneyauthoritybs.*",
      "ed_moneyauthoritybs.claimtosavingsinst",
      "ed_moneyauthoritybs.id",
      "ed_moneyauthoritybs.enddate",
      "ed_moneyauthoritybs.otherliability",
      "ed_moneyauthoritybs.abroadliability",
      "ed_moneyauthoritybs.moneyandgold",
      "ed_moneyauthoritybs.claimtootherfinnonfininst",
      "ed_otherdepositorycorpbs.*",
      "ed_otherdepositorycorpbs.depositsincludedinm2",
      "ed_otherdepositorycorpbs.enddate",
      "ed_otherdepositorycorpbs.cashinvault",
      "ed_otherdepositorycorpbs.claimsonotherfinstitute",
      "ed_otherdepositorycorpbs.bondissue",
      "ed_otherdepositorycorpbs.id",
      "ed_otherdepositorycorpbs.claimsoncentralbank"
    ]
  }
]